<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/" xmlns:activity="http://activitystrea.ms/spec/1.0/" ><channel><title>明月の開発ストーリ</title><link>https://www.nowonbun.com</link><description>開発はいつも楽しい。最高のデベロッパーになるまで。プログラム専門ブラグ。</description><language>ja</language><pubDate>Tue, 5 May 2020 00:58:16 +0900</pubDate><generator>nowonbun@gmail.com</generator><managingEditor>nowonbun@gmail.com</managingEditor><webMaster>nowonbun@gmail.com</webMaster><item><title>明月の開発ストーリ</title><link>https://www.nowonbun.com/index.html</link><description>明月の開発ストーリ</description><category>明月の開発ストーリ</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/index.html</guid><pubDate>Tue, 5 May 2020 00:58:16 +0900</pubDate></item><item><title>[C#] Geckoライブラリを利用してウェブスクレイピングする方法</title><link>https://www.nowonbun.com/212.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でgeckoライブラリを利用してウェブスクレイピングする方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;htmlのレイアウトエンジンとはhtmlドキュメントとcss style、javascriptを画面に描画するレンダリングするエンジンです。&lt;/p&gt;&lt;p&gt;レンダリングエンジンの種類は代表的にmsのieとmozilla財団のgeckoがあります。ieレンダリングのmshtmlがありますが、ie 8.0バージョンまではc#で参照して使えます。ieの8.0バージョンはもう10年前のレンダリングエンジンだし、今のスタイルなら様々でエラーが発生するかもしれません。&lt;/p&gt;&lt;p&gt;geckoレンダリングは60バージョンです。ieより最新バージョンです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;geckoレイアウトのライブラリはc#のnugetでダウンロード及び連携が可能です。&lt;/p&gt;&lt;p&gt;ブラウザライブラリは一応、windowのprocメッセージのキューが必要なのでwindow forms appでプロジェクトを生成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1096&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてnugetを通ってgeckoライブラリを連携します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1095&quot; data-filename=&quot;002.png&quot; style=&quot;width: 375px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1104&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のイメージをみれば以前45バージョンもあります。45バージョンで作成するなら60バージョンと同じです。ここでは60で作成します。&lt;/p&gt;&lt;p&gt;一応、私のosは64ビットなので64ビットで作成します。 32ビットも作成方法も同じです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;windowデザインフォームの隣のtoolbarをみればgecko-browserコントロールができたことを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1097&quot; data-filename=&quot;004.png&quot; style=&quot;width: 566px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このwindowsフォームにdrap＆dropした後でプロパティのdockをfillに合わせています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1107&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからfirefox.dllファイルを注入する必要があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;右program.csファイルを開いて,下記のソースを追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1106&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして右のform1.csファイルを右クリックしをして、ソースビューでソースを開きます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1099&quot; data-filename=&quot;007.png&quot; style=&quot;width: 370px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上みたいにスクレイピングソースを作成しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1105&quot; data-filename=&quot;008.png&quot; style=&quot;width: 802px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果みたいにスクレイピングになったことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;--　もしエラーが発生する場合 -- &lt;/p&gt;&lt;p&gt;1. 64ビットに設定しても64ビットでできない場合があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1101&quot; data-filename=&quot;009.png&quot; style=&quot;width: 839px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;デバッグ設定をx64に変更すれば解決できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;デバッグのpropertyメニューを開きます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1098&quot; data-filename=&quot;010.png&quot; style=&quot;width: 380px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;メニューのbuildタブでプラットフォームをx64に変更すると解決できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1102&quot; data-filename=&quot;011.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;2. dllファイルを読み込めませんというエラーメッセージが発生する可能性があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1100&quot; data-filename=&quot;012.png&quot; style=&quot;width: 814px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この場合はdebugフォルダーが間違って設定されている場合に発生します。&lt;/p&gt;&lt;p&gt;デフォルトならdebugフォルダーのfirefox64のサブフォルダにモジュールがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1103&quot; data-filename=&quot;013.png&quot; style=&quot;width: 403px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;binのdebugフォルダーに移動すればfirefox64フォルダがあることが確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1108&quot; data-filename=&quot;014.png&quot; style=&quot;width: 599px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここのフォルダとfirefox64のフォルダ名を一致すると問題なく実行されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;個人的に最近afxwebbrowserとwebbrowserよりgeckobrowserオブジェクトが安定的に使えます。c#の基本webbrowserオブジェクトはmsieの8バージョンなので最近のウェブページではscriptエラーが発生する可能性が高いです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;--参考--&lt;/p&gt;&lt;p&gt;ウェブスクレイピング開発のトレンドはgeckobrowserとhttpwebrequestを混ぜって使います。&lt;/p&gt;&lt;p&gt;でもgeckobrowserとhttpwebrequestは別のクラスでセッションやクッキー情報の同期化が必要です。&lt;/p&gt;&lt;p&gt;テストするサイトがないから参考事項で作成しておきました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でgeckoライブラリを利用してウェブスクレイピングする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/212.html</guid><pubDate>Tue, 5 May 2020 00:55:27 +0900</pubDate></item><item><title>[C#] PDFを作成する方法(iTextSharp)</title><link>https://www.nowonbun.com/211.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はcでpdfを作成する方法(itextsharp)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを運用すれば結果レポートや帳票などを出力する場合が多いです。その時にcsvファイルやexcelファイル、xmlファイルタイプで出力する場合があります。&lt;/p&gt;&lt;p&gt;その中で契約書やデータ形式ではなくドキュメント形式、でも編集ができないタイプで出力したい場合はpdfを利用します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;c#でpdfを出力するために提供するオープンライブラリはitextsharpがあります。itextsharpを使うためにnugetを利用してダウンロードして連携します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1091&quot; data-filename=&quot;001.png&quot; style=&quot;width: 478px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1094&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1093&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;itextsharpライブラリを連携したらソースを作成してpdfを出力しましょう。&lt;/p&gt;&lt;p&gt;上のhtmlからファイルを生成することまで下記の流れになります。&lt;/p&gt;&lt;p&gt;「filestream -&amp;gt; pdfwriter取得　-&amp;gt; pdfwriterpipeline生成 -&amp;gt; htmlpipeline生成 -&amp;gt; cssresolverpipeline生成 -&amp;gt; xmlworker生成 -&amp;gt; xmlparser生成 -&amp;gt; xmlparserによってhtmlをpdfに変換する。」ということになります。&lt;/p&gt;&lt;p&gt;上のcssファイルを実行するデバッグフォルダに置きます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1092&quot; data-filename=&quot;004.png&quot; style=&quot;width: 274px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実行すると「simple.pdf」というpdfファイルが生成されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1090&quot; data-filename=&quot;005.png&quot; style=&quot;width: 839px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果は上のとおりに出ました。&lt;/p&gt;&lt;p&gt;私は簡単にソースを作成しましたが、少しhtml作成する部分とcssを紐づく部分を整理すると一般プロジェクトにも十分に使えると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでcでpdfを作成する方法(itextsharp)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/211.html</guid><pubDate>Sun, 3 May 2020 10:22:40 +0900</pubDate></item><item><title>[C#] シリアライズ(Serialization)をする方法</title><link>https://www.nowonbun.com/210.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でシリアライズ(serialization)をする方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;シリアライズとはメモリに割り当てしているクラスのデータをバイナリ化することです。つまり、クラス内部で変数のデータをすべてbyteタイプに変換することだと思えば良いです。&lt;/p&gt;&lt;p&gt;シリアライズは昔にたくさん使った記憶がありますが、最近はシリアライズよりjsonタイプに変換してデータ化することがトレンドなので、最近はよく使わないみたいです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/207.html&quot; target=&quot;_blank&quot;&gt;[c#] newtonsoft.jsonライブラリを利用してjsonデータ構造を扱う方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、newtonsoft.jsonを利用してデータをjsonタイプに変換することはクラスのpublicタイプだけ変換するし、データをすべてstringタイプに変換するので、限界があります。&lt;/p&gt;&lt;p&gt;シリアライズはpublicデータだけではなく、privateも構造化するし、クラス自体をすべてbyteタイプに変換することなので、クラス自体を格納することではよいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、シリアライズも短所があります。バイナリ化するので、当該なデータを人が読みにくいです。なのでメモ帳でデータ変更ができないです。&lt;/p&gt;&lt;p&gt;また、クラス自体を変換しましたから、クラスが変更がある場合に復元ができない可能性もあります。&lt;/p&gt;&lt;p&gt;jsonも場合はプログラム言語に関係しずに、読み込む移植性がよいですが、シリアライズはc#で作成したらc#しか読み込まれないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;正確にはクラス変更や他のプレートフォームでも読み込まられないことではないですが、データ漏れが発生したり、データが可笑しくなる可能性があります。&lt;/p&gt;&lt;p&gt;つまり、バグ発生する可能性があることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;仕様によってシリアライズがよいかjsonを使うかを正しく選択して使う方がよいです。&lt;/p&gt;&lt;p&gt;nodeというクラスをシリアライズしてbyte[]タイプに変換しました。変換してファイルに格納します。&lt;/p&gt;&lt;p&gt;また、格納したファイルを読み込んでデシリアライズでbyte[]データをクラスタイプに変換します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1088&quot; data-filename=&quot;001.png&quot; style=&quot;width: 300px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ファイルをメモ帳で開きました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1089&quot; data-filename=&quot;002.png&quot; style=&quot;width: 493px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;人が解析することでは無理があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でシリアライズ(serialization)をする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/210.html</guid><pubDate>Thu, 30 Apr 2020 19:32:04 +0900</pubDate></item><item><title>[C#] dynamicタイプの動的パラメータ-DynamicObject(WinFormでASP.MVCのViewBagオブジェクトを使用する方法)</title><link>https://www.nowonbun.com/209.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でdynamicタイプの動的パラメータ-dynamicobject(winformでasp.mvcのviewbagオブジェクトを使用する方法)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;asp.mvcのcontrollerでview(.cshtml)にデータを渡す時、viewbagというオブジェクトを使う場合があります。&lt;/p&gt;&lt;p&gt;viewbagというオブジェクトはすごく便利です。可読性やパフォーマンスはよくないですが、クラスを一々宣言する必要なしでそのままに動的なプロパティを生成してデータを格納、取得するの可能です。&lt;/p&gt;&lt;p&gt;でも、viewbagとはasp.mvcだけで使うものなので、それを同じ仕様で実装してc#のwindowフォーム開発する時にも使ってみましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1084&quot; data-filename=&quot;001.png&quot; style=&quot;width: 601px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;コントロールでviewbagオブジェクトに任意のプロパティにデータを格納しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1083&quot; data-filename=&quot;002.png&quot; style=&quot;width: 614px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;viewファイルはviewbagの任意のプロパティからデータを取得しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1087&quot; data-filename=&quot;003.png&quot; style=&quot;width: 521px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - 参照リンクを作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;コンソールのプロジェクトを生成してviewbagを使ってみましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1086&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;viewbagオブジェクトがありませんというメッセージが表示されいます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1085&quot; data-filename=&quot;005.png&quot; style=&quot;width: 634px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私がc#でwindowを作成する時、値を渡すために一つ一つエンティティクラスを生成して開発したことがあります。&lt;/p&gt;&lt;p&gt;そのため、一回性の値のクラスがだんだん多くなったし、プロジェクトがすごく大きくなったし、その結果、プロジェクトの管理性、可読性、パフォーマンスなどがすべて悪くなった経験があります。&lt;/p&gt;&lt;p&gt;それで、window form開発する時にもasp.mvcのviewbagを使ったらすごく便利かと思いました。探してみたらありました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.dynamic.dynamicobject?view=netframework-4.8&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/en-us/dotnet/api/system.dynamic.dynamicobject?view=netframework-4.8&lt;/a&gt;&lt;/p&gt;&lt;p&gt;前からこのことを知ってたらよかったのにという物足りなさがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でdynamicタイプの動的パラメータ-dynamicobject(winformでasp.mvcのviewbagオブジェクトを使用する方法)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/209.html</guid><pubDate>Wed, 29 Apr 2020 22:41:32 +0900</pubDate></item><item><title>[C#] Stringの補間式(interpolation)</title><link>https://www.nowonbun.com/208.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でstringの補間式(interpolation)に関する説明です。&lt;/p&gt;&lt;p&gt;最近、c#のコード標準でstringの補間式に関して説明がありました。&lt;/p&gt;&lt;p&gt;既存、c#でstringのフォーマットを使うとstring.format関数を利用しましたが、それが数字で「{0},{1}」で表現するので、可読性が悪いです。&lt;/p&gt;&lt;p&gt;なので、もっと可読性を上がるため、に補間式(interpolation)があり、もっとフォーマットをしやすく表現できます。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;stringでstringの補間式を使うために、ダブルクォートの前に「$」を付けて設定することで使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1079&quot; data-filename=&quot;001.png&quot; style=&quot;width: 492px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;stringのの補間式(interpolation)は下記とおりになります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;要素&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;interpolationexpression&lt;/td&gt;		&lt;td&gt;形式化する結果を生成する表現式です。nullの結果のライン表現はstring.emptyです。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;alignment&lt;/td&gt;		&lt;td&gt;補間表現式の結果の文字列で最小文字数を定義する定数式です。正の場合は、文字列表現が右揃えされます。負の場合は左揃えです。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;formatstring&lt;/td&gt;		&lt;td&gt;式の結果タイプによってサポートされる形式の文字列です。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1082&quot; data-filename=&quot;002.png&quot; style=&quot;width: 286px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;補間表現式は三項演算子でも計算可能です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1081&quot; data-filename=&quot;003.png&quot; style=&quot;width: 201px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;中括弧の表現は中括弧を重ねることで表現できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1080&quot; data-filename=&quot;004.png&quot; style=&quot;width: 244px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でstringの補間式(interpolation)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/208.html</guid><pubDate>Mon, 27 Apr 2020 20:39:57 +0900</pubDate></item><item><title>[C#] Newtonsoft.JSONライブラリを利用してJsonデータ構造を扱う方法</title><link>https://www.nowonbun.com/207.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でnewtonsoft.jsonライブラリを利用してjsonデータ構造を扱う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;まず、jsonに関して説明しますとjsonとは(キー,値)構造で人が認識できる開放型標準データフォーマットです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私が10年前に開発する時にはxmlの構造でデータを扱うことが多くありましたが、最近はほとんどjsonタイプのデータを扱うプログラムが多いです。&lt;/p&gt;&lt;p&gt;でもxmlを使わないことではないけれども、xmlより直観的な構造だし、データ修正がxmlよりしやすいからだと思います。(xmlはタグの開き、閉めが間違っても全体エラーが発生します。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのため、プログラムライブラリでjsonを読み取るか書き込むのライブラリが多いですが、newtonsoft.jsonがたくさん使うし、一番機能が多いので紹介します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;まず、nugetでnewtonsoft.jsonライブラリを連携しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1074&quot; data-filename=&quot;001.png&quot; style=&quot;width: 437px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1077&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1075&quot; data-filename=&quot;003.png&quot; style=&quot;width: 383px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果をみれば、stringタイプのjsonデータがクラスに変換されたし、クラスのデータがstringタイプのjsonデータに変換することを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;注意点はjsonタイプでシングルクォートはstringでないことは定数に表記されます。&lt;/p&gt;&lt;p&gt;なのでjsonとクラスのデータタイプが合わない場合にはエラーが発生します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1078&quot; data-filename=&quot;004.png&quot; style=&quot;width: 760px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;後、上のことはプロパティ名とjsonのキーを一致しましたが、仕様によって一致できない場合もあります。&lt;/p&gt;&lt;p&gt;その場合はjsonpropertyアトリビュートを利用して設定が可能です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1076&quot; data-filename=&quot;005.png&quot; style=&quot;width: 308px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;newtonsoft.jsonのライブラリは様々な機能がありますが、私の基準では上の以外には使わないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でnewtonsoft.jsonライブラリを利用してjsonデータ構造を扱う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/207.html</guid><pubDate>Thu, 23 Apr 2020 20:19:53 +0900</pubDate></item><item><title>[C#] EMailを送信する方法(System.Net.Mail)</title><link>https://www.nowonbun.com/206.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でemailを送信する方法(system.net.mail)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プロジェクトでよく使う機能と思えばemailを送ることではないかと思います。例えば、ウェブページでユーザ登録からパスワード初期化、お知らせのメールなど様々で使います。&lt;/p&gt;&lt;p&gt;c#ではメールを送信する方法がいろいろありますが、その中で.net frameworkのsystem.net.mailを使う方法があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;system.net.mailの場合は.net frameworkの基本の機能なので別にnugetを利用してライブラリを連携する必要がないです。&lt;/p&gt;&lt;p&gt;ソースは作成しました。&lt;/p&gt;&lt;p&gt;その後、smtpサーバーを設定しましょう。私の場合はgoogleメールを利用します。&lt;/p&gt;&lt;p&gt;google mail - &lt;a href=&quot;https://support.google.com/a/answer/176600?hl=ja&quot; target=&quot;_blank&quot;&gt;https://support.google.com/a/answer/176600?hl=ja&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先にクロームに接続して右上のアカウント管理に行きましょう。(ログインができなかった状況なら先にログインしてから。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1069&quot; data-filename=&quot;001.png&quot; style=&quot;width: 346px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アカウント管理に移動して安全性の低いアプリのアクセスのタブに移動します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1071&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;安全性の低いアプリの許可を有効にします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このチェックをしないと外部からグーグルメールを使用できないようにすることです。なので、idやpwの漏れがなければそんなに問題はありません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1073&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のソースを実行してメールを送信しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1070&quot; data-filename=&quot;004.png&quot; style=&quot;width: 317px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムが正常に実行されました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1072&quot; data-filename=&quot;005.png&quot; style=&quot;width: 540px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;gmailのメールの受信トレイを見れば、メールが届いたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でemailを送信する方法(system.net.mail)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/206.html</guid><pubDate>Wed, 22 Apr 2020 19:00:42 +0900</pubDate></item><item><title>[C#] ini環境ファイルを使う方法</title><link>https://www.nowonbun.com/205.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でini環境ファイルを使う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;c#で一般的な環境ファイルはapp.configファイルのxmlファイルです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/204.html&quot; target=&quot;_blank&quot;&gt;[c#] 環境設定ファイルを扱う方法(system.configuration)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;iniファイルはc++でよく使う環境ファイルの構造です。&lt;/p&gt;&lt;p&gt;セッションがあり、キーでデータを取得する構造です。でもc#もc++ライブラリを使うことができるのでiniファイルを読み取りや書き込みができます。&lt;/p&gt;&lt;p&gt;writeprivateprofilestringとgetprivateprofilestringはc#のライブラリではなく、c++のライブラリの「kernel32」の関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1066&quot; data-filename=&quot;001.png&quot; style=&quot;width: 280px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実行関数でiniファイルを書き込んで読み取るので同然「日本語」という結果が出ます。&lt;/p&gt;&lt;p&gt;config.iniファイルを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1067&quot; data-filename=&quot;002.png&quot; style=&quot;width: 229px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1068&quot; data-filename=&quot;003.png&quot; style=&quot;width: 196px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;config.iniファイル中で[sectiontest]のdataのキーで「日本語」という値があります。&lt;/p&gt;&lt;p&gt;iniファイルはプログラムだけで操作することではなく、直接にセッションやキー、値を設定すると上のgetprivateprofilestringの関数で読み込むのが可能です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でini環境ファイルを使う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/205.html</guid><pubDate>Wed, 22 Apr 2020 00:09:39 +0900</pubDate></item><item><title>[C#] 環境設定ファイルを扱う方法(System.Configuration)</title><link>https://www.nowonbun.com/204.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#で環境設定ファイルを扱う方法(system.configuration)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを作成する時にプログラムによって環境ファイルを設定する場合があります。例えば、ログファイルの格納パスやサーバによって設定するデータなどです。&lt;/p&gt;&lt;p&gt;以前、c++ファイルの場合はiniファイルを設定ファイルによく使いました。もちろん、c#でiniファイルを使えないことではないですが、基本xmlファイルで環境設定を行います。&lt;/p&gt;&lt;p&gt;javaの場合「.property」ファイルが環境ファイルでよく使います。(xml形式も多いです。)&lt;/p&gt;&lt;p&gt;c#ではxmlになっているapp.configファイルを環境ファイルでよく使います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プロジェクトを生成すればc#は基本的にapp.configファイルが生成されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1060&quot; data-filename=&quot;001.png&quot; style=&quot;width: 385px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後、app.configファイルにデータを設定してプログラム上で読み込みます。&lt;/p&gt;&lt;p&gt;appsettingsのタグの中でaddタグを追加します。ここでkeyというアトリビュートはプログラムで読み込むキーでvalueは値です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;configファイルを読み込むためにライブラリを追加しなければならないです。&lt;/p&gt;&lt;p&gt;(app.configは基本的に生成されるのにライブラリは追加することで。。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1061&quot; data-filename=&quot;002.png&quot; style=&quot;width: 343px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1063&quot; data-filename=&quot;003.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;configurationmanager.appsettingsクラスにindexer形式でキーの値を入れればapp.configに設定した値を取得できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムをリリースしたらapp.configファイル名は「プロジェクト名.exe.config」で変更されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1065&quot; data-filename=&quot;004.png&quot; style=&quot;width: 268px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1062&quot; data-filename=&quot;005.png&quot; style=&quot;width: 581px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1064&quot; data-filename=&quot;006.png&quot; style=&quot;width: 268px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#で環境設定ファイルを扱う方法(system.configuration)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/204.html</guid><pubDate>Mon, 20 Apr 2020 19:37:57 +0900</pubDate></item><item><title>[C#] Reflectionを利用してクラス複製する方法</title><link>https://www.nowonbun.com/203.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でreflectionを利用してクラス複製する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;oopでクラス複製することはプロトタイプパターン(デザインパターン)によってクラスを複製する方法があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1056&quot; data-filename=&quot;001.png&quot; style=&quot;width: 300px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果をみればnodeとnode1は同じクラスです。その意味はnodeでdataの値を修正したらnode1にも影響があると意味です。&lt;/p&gt;&lt;p&gt;でもnode2の場合は複製になったのでnodeと違うクラスです。その意味はnodeのdataの値が修正してもnode2は影響がないと意味です。&lt;/p&gt;&lt;p&gt;上の結果見ればnode.dataが2になっていることを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラス複製をするようにはmemberwiseclone関数を利用すべきですが、memberwiseclone関数はobjectクラスのprotectedタイプです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1058&quot; data-filename=&quot;002.png&quot; style=&quot;width: 688px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その意味は私が作成するクラスつまり、memberwiseclone関数を使うことができる状況なら複製ができますが、ライブラリのクラスや修正ができないクラスの場合はクラス複製ができないと意味になります。&lt;/p&gt;&lt;p&gt;その場合は新しくnewキーワードを使ってメモリ割り当てして変数の値を一々にコピーことしかないです。&lt;/p&gt;&lt;p&gt;でもこれも問題があるのはpublicの値は出来ますが、privateやprotectedはコピーが不可能なので、クラス複製ができないと意味になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1057&quot; data-filename=&quot;003.png&quot; style=&quot;width: 327px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の状況ならdata2を設定する方法がないです。完全にコピーができないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それをreflectionを利用して解決ができます。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/34.html&quot; target=&quot;_blank&quot;&gt;https://www.nowonbun.com/34.html&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1059&quot; data-filename=&quot;004.png&quot; style=&quot;width: 336px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスでmemberwisecloneを利用しなくてクラス複製になりました。&lt;/p&gt;&lt;p&gt;nodeクラスの修正がなしで外部でクラスコピーができるといみです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でreflectionを利用してクラス複製する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/203.html</guid><pubDate>Fri, 17 Apr 2020 00:34:33 +0900</pubDate></item><item><title>[C#] XMLをXPathを利用してデータを取得する方法</title><link>https://www.nowonbun.com/202.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でxmlをxpathを利用してデータを取得する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、xmlをcssselectorエンジン(sizzle)みたいに要素を検索してデータを取得する方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/201.html&quot; target=&quot;_blank&quot;&gt;[c#] nsoupライブラリを利用してxmlとhtmlをパーシングする方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最近はxpathを利用して検索することよりnsoupのライブラリを利用してデータを取得することが一般的なことになりました。でも、sizzleエンジンの要素を検索する方法の以前はxpathで検索することが一般的だったんです。&lt;/p&gt;&lt;p&gt;でも、xpathの方法が悪いことではなく、css selectorで検索するキーが単純だし、理解しやすいのでよく使うことです。でも以前の方法がもっとよい時があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例えば、xmlから一つのデータとノードを検索することではnsoupのほうがいいです。でも、xmlの全体を構造化するしクラスを変換することではreaderを利用するかもっと明確なルールを決めて検索することならxpathがよいです。&lt;/p&gt;&lt;p&gt;stringで正規表現でreplaceするか、ただ特定文字でreplaceするかの差と似てます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実はxpathを使うためにはxpathを詳しく知らなければならないですが、いつかxpathは別途で説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;xpathを使うために以前で使った私のブログの検索エンジンに登録するようなrssファイルを使いましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1052&quot; data-filename=&quot;001.png&quot; style=&quot;width: 477px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/rss&quot; target=&quot;_blank&quot;&gt;https://www.nowonbun.com/rss&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;xpathを利用するクラスのnsoupみたいにオープンソースではなく、system.xmlの.net frameworkを使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1054&quot; data-filename=&quot;002.png&quot; style=&quot;width: 559px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;コンソールの結果をみればrssのtitleのタグの内容だけ出力したことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;後、descriptionのタグのテキストデータを変更して、ファイルに格納しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1055&quot; data-filename=&quot;003.png&quot; style=&quot;width: 593px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果を確認すればdescriptionタグの内容が変更されたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;nsoupとsystem.xmlの差はnsoupの場合はhtmlまで検索ができます。でも、system.xmlの場合はhtmlファイルが検索ができません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1053&quot; data-filename=&quot;004.png&quot; style=&quot;width: 785px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;htmlを読み込めば許せないアトリビュートや開き閉めタグタイプではないこと(inputタグ)などでエラーが発生します。&lt;/p&gt;&lt;p&gt;個人的にはほぼnsoupを使いますが、逆に環境ファイルのxmlの場合は厳しい構造を要求するので逆にsystem.xmlをよく使います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でxmlをxpathを利用してデータを取得する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/202.html</guid><pubDate>Thu, 16 Apr 2020 00:47:17 +0900</pubDate></item><item><title>[C#] NSoupライブラリを利用してXMLとHTMLをパーシングする方法</title><link>https://www.nowonbun.com/201.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でnsoupライブラリを利用してxmlとhtmlをパーシングする方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最近、プログラムを作成する時に環境設定ファイルとしてxmlを利用することがあります。以前はxpathを利用してxmlを探索して値を取得しましたが、jqueryのライブラリが登場してcssselectorエンジン(sizzle)の概念が生じ、classやidなどのアトリビュートで検索する方法ができました。&lt;/p&gt;&lt;p&gt;nsoupライブラリはxmlやhtml形式にあるファイルやデータをcssselectorで探索するライブラリです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;個人的にxpathはxmlを探索する時にもっと明確に検索ができますが、javascriptや様々でcssselectorをよく使う今はcssselectorタイプで探索するほうがもっとしやすくなったと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;visual studioでnsoupライブラリを使うためにnugetを利用してライブラリをダウンロード及び連結しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1047&quot; data-filename=&quot;001.png&quot; style=&quot;width: 452px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1048&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私のブログで検索エンジンに登録するようなrssファイルがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1050&quot; data-filename=&quot;003.png&quot; style=&quot;width: 477px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それをnsoupライブラリを利用してタイトルだけ取得します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1051&quot; data-filename=&quot;004.png&quot; style=&quot;width: 502px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のxmlファイルを取得してitemのtitleタグのデータをコンソールに出力しました。　jquryでelement探索することと同じ方法で探索が可能です。&lt;/p&gt;&lt;p&gt;nsoupの場合は探索だけではなく、書き直し機能もあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のdescriptionのテキストを「hello world」に書き直しました。そのあと、コンソールにxmlを出力しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1049&quot; data-filename=&quot;005.png&quot; style=&quot;width: 449px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;descriptionの部分が「hello world」になっています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でnsoupライブラリを利用してxmlとhtmlをパーシングする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/201.html</guid><pubDate>Tue, 14 Apr 2020 19:34:15 +0900</pubDate></item><item><title>[C#] 日付フォーマット</title><link>https://www.nowonbun.com/200.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#で日付フォーマットに関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、数字フォーマットに関して、桁数とお金表示などを説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/196.html&quot; target=&quot;_blank&quot;&gt;[c#] 数字フォーマット(お金表示及び小数点以下表示)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;日付フォーマットはdatetimeのデータタイプをでtostringやstring.formatを利用して変換ができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1046&quot; data-filename=&quot;001.png&quot; style=&quot;width: 321px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;日付フォーマットは置換文字が多いです。基本的に「yyyy」は年度、「mm」は月、「dd」は日、「hh」は時間、「mm」は分です。&lt;/p&gt;&lt;p&gt;ここで「mm」は「mm」は小文字、大文字で月、分の区分にします。気を付けなければならないです。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space:nowrap;&quot;&gt;フォーマット指定子&lt;/th&gt;        &lt;th style=&quot;white-space:nowrap;&quot;&gt;説明&lt;/th&gt;        &lt;th style=&quot;white-space:nowrap;&quot;&gt;例&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;d&lt;/td&gt;		&lt;td&gt;日: 1日から31日まで&lt;/td&gt;		&lt;td&gt;2009-06-01t13:45:30 -&amp;gt; 1&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;dd&lt;/td&gt;		&lt;td&gt;日: 01日から31日まで(10日の未満は十桁に「0」をつける)&lt;/td&gt;		&lt;td&gt;2009-06-01t13:45:30 -&amp;gt; 01&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ddd&lt;/td&gt;		&lt;td&gt;曜日(略称)&lt;/td&gt;		&lt;td&gt;月、火、水。。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;dddd&lt;/td&gt;		&lt;td&gt;曜日(プル名)&lt;/td&gt;		&lt;td&gt;月曜日、火曜日、水曜日。。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;f&lt;/td&gt;		&lt;td&gt;ミリセカンド1桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 1&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ff&lt;/td&gt;		&lt;td&gt;ミリセカンド2桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.12 -&amp;gt; 12&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;fff&lt;/td&gt;		&lt;td&gt;ミリセカンド3桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.123 -&amp;gt; 123&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ffff&lt;/td&gt;		&lt;td&gt;ミリセカンド4桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1234 -&amp;gt; 1234&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;fffff&lt;/td&gt;		&lt;td&gt;ミリセカンド5桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.12345 -&amp;gt; 12345&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ffffff&lt;/td&gt;		&lt;td&gt;ミリセカンド6桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.123456 -&amp;gt; 123456&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;fffffff&lt;/td&gt;		&lt;td&gt;ミリセカンド7桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 10000000&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;f&lt;/td&gt;		&lt;td&gt;ミリセカンド1桁(なければ空白)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 1&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ff&lt;/td&gt;		&lt;td&gt;ミリセカンド2桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.12 -&amp;gt; 12&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;fff&lt;/td&gt;		&lt;td&gt;ミリセカンド3桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.123 -&amp;gt; 123&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ffff&lt;/td&gt;		&lt;td&gt;ミリセカンド4桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1234 -&amp;gt; 1234&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;fffff&lt;/td&gt;		&lt;td&gt;ミリセカンド5桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.12345 -&amp;gt; 12345&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ffffff&lt;/td&gt;		&lt;td&gt;ミリセカンド6桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.123456 -&amp;gt; 123456&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;fffffff&lt;/td&gt;		&lt;td&gt;ミリセカンド7桁(なければ0に満たす。)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 1&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;g gg&lt;/td&gt;		&lt;td&gt;西暦 前、後&lt;/td&gt;		&lt;td&gt;西暦&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;h&lt;/td&gt;		&lt;td&gt;時間:1時から12時まで(12時制)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 12&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;hh&lt;/td&gt;		&lt;td&gt;時間:01時から12時まで(12時制)(10時の未満は十桁に「0」をつける)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 12&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;h&lt;/td&gt;		&lt;td&gt;時間:01時から24時まで(24時制)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 12&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;hh&lt;/td&gt;		&lt;td&gt;時間:01時から24時まで(24時制)(10時の未満は十桁に「0」をつける)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:00:00.1 -&amp;gt; 12&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;k&lt;/td&gt;		&lt;td&gt;utc(協定時の基準)&lt;/td&gt;		&lt;td&gt;+09:00(서울)&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;m&lt;/td&gt;		&lt;td&gt;分:0分から59分まで&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 34&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;mm&lt;/td&gt;		&lt;td&gt;分:0分から59分まで(10分の未満は十桁に「0」をつける)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 34&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;m&lt;/td&gt;		&lt;td&gt;月:1月から12月まで&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 8&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;mm&lt;/td&gt;		&lt;td&gt;月:1月から12月まで(10分の未満は十桁に「0」をつける)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 08&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;mmm&lt;/td&gt;		&lt;td&gt;月(略称):1月から12月まで(英語だけ当該)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 8&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;mmmm&lt;/td&gt;		&lt;td&gt;月(プル名):1月から12月まで(英語だけ当該)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 8月&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;s&lt;/td&gt;		&lt;td&gt;秒:0秒から59秒まで&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 56&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;ss&lt;/td&gt;		&lt;td&gt;秒:0秒から59秒まで(10秒の未満は十桁に「0」をつける)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 56&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;t&lt;/td&gt;		&lt;td&gt;am / pm&lt;/td&gt;		&lt;td&gt;午前 / 午後&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;tt&lt;/td&gt;		&lt;td&gt;am / pm&lt;/td&gt;		&lt;td&gt;午前 / 午後&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;y&lt;/td&gt;		&lt;td&gt;年度1桁表示(意味なし)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 2019&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;yy&lt;/td&gt;		&lt;td&gt;年度2桁表示(意味なし)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 2019&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;yyy&lt;/td&gt;		&lt;td&gt;年度3桁表示(意味なし)&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 2019&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;yyyy&lt;/td&gt;		&lt;td&gt;年度4桁表示&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 2019&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;yyyyy&lt;/td&gt;		&lt;td&gt;年度5桁表示&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; 02019&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;z&lt;/td&gt;		&lt;td&gt;utc基準時&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; -9&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;zz&lt;/td&gt;		&lt;td&gt;utc基準時&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; -09&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;zzz&lt;/td&gt;		&lt;td&gt;utc基準時&lt;/td&gt;		&lt;td&gt;2019-08-05 12:34:56.1 -&amp;gt; -9:00&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;:&lt;/td&gt;		&lt;td&gt;フォーマットで許している文字&lt;/td&gt;		&lt;td&gt;&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;/&lt;/td&gt;		&lt;td&gt;フォーマットで許している文字&lt;/td&gt;		&lt;td&gt;&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;-&lt;/td&gt;		&lt;td&gt;フォーマットで許している文字&lt;/td&gt;		&lt;td&gt;&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;string&quot;&lt;/td&gt;		&lt;td&gt;&apos;stirng&apos;文字列を入力する。&lt;/td&gt;		&lt;td&gt;&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;link - &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1045&quot; data-filename=&quot;002.png&quot; style=&quot;width: 378px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#で日付フォーマットに関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/200.html</guid><pubDate>Thu, 9 Apr 2020 20:53:20 +0900</pubDate></item><item><title>[C#] ログライブラリ(log4net)を設定する方法</title><link>https://www.nowonbun.com/199.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#のログライブラリ(log4net)を設定する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを開発する時にvisual studioなどのideツールでデバッグ機能を通ってプログラムの流れを把握することができます。それで開発中でエラーが発生するか間違う結果が出る時にはデバッグ値を追跡してソースコードを修正することができます。&lt;/p&gt;&lt;p&gt;でも、開発が終わって本番(production)にビルドしたものをサーバにデプロイして運用する時にもバグが発生する可能性があります。その時には別にエラーログを作成する機能がなければエラー原因と問題を把握することが大変になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのため、出来る方法でログを残して(テキストファイルやデータベースにエラー内容を格納すること)プログラムの流れを記録します。問題が発生する時に、ログ内容を追跡してエラーを予測するか見つけることができます。&lt;/p&gt;&lt;p&gt;その以外にログを通ってユーザの行動パターンの分析、追跡、学習などの統計資料も必要です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;c#ではログを作成するライブラリは代表的に二つがあります。elmahとlog4netがあります。elmahも随分多いプロジェクトで使っていると思いますが、個人的にlog4netをお勧めです。&lt;/p&gt;&lt;p&gt;理由はlog4net、log4j、log4phpなどで他のプログラム言語でも使っているライブラリなので、互換性がよいし、ライブラリのコミュニティも大きいので様々な情報や派生ライブラリを得やすいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それならlog4netを使うためにはnugetを利用してlog4netを連結します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1040&quot; data-filename=&quot;001.png&quot; style=&quot;width: 356px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1043&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1039&quot; data-filename=&quot;003.png&quot; style=&quot;width: 575px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1042&quot; data-filename=&quot;004.png&quot; style=&quot;width: 609px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;パターンレイアウトと領域を確認するとパターン式があることを確認できます。 パターンレイアウトに関しては詳しく説明したいですが、別に大事部分ではないし、パターンレイアウトの内容が多いので、log4netのapiで直接に確認するほうがよいです。&lt;/p&gt;&lt;p&gt;参照 - &lt;a href=&quot;https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/patternlayout.html&quot; target=&quot;_blank&quot;&gt;https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/patternlayout.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;別にレイアウトに関して問題なければ、「%d [%t] %-5p %c - %m%n」の式はよいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで設定すればログを使うことができます。&lt;/p&gt;&lt;p&gt;でも、実際に本番(production)に使うと思えばログ設定がソースの中にあるので、設定ができないです。パラメータで設定ができますが、それはそれで設定が複雑になります。&lt;/p&gt;&lt;p&gt;上の例を見ればログ設定をxmlファイルで作成して読み込んでxmlconfigurator.configureに設定すれば使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1041&quot; data-filename=&quot;005.png&quot; style=&quot;width: 333px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;設定は上のソース同じ設定にしましたので、同じ結果が出ます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合はconsoleappenderとrollingfileappenderだけ使いました。でもlog4netで提供するappenderはすごく多いです。(もし、他のappenderの説明が必要ならコメントを残してください。)&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://logging.apache.org/log4net/release/manual/introduction.html&quot; target=&quot;_blank&quot;&gt;https://logging.apache.org/log4net/release/manual/introduction.html&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1044&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のリストを確認すれば、データベースappender、メールappender(エラーが発生するとメール送信)、メモリappender、socketappenderなどが多いです。必要なものがあればソースまたはxmlに追加して使ったらよいです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://logging.apache.org/log4net/release/manual/configuration.html&quot; target=&quot;_blank&quot;&gt;https://logging.apache.org/log4net/release/manual/configuration.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#のログライブラリ(log4net)を設定する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/199.html</guid><pubDate>Wed, 8 Apr 2020 13:04:22 +0900</pubDate></item><item><title>[C#] Zipの圧縮ファイルを解凍するコードを作成する方法</title><link>https://www.nowonbun.com/198.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でzipの圧縮ファイルを解凍するコードを作成する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、c#でファイルをzipアルゴリズムで圧縮するソースコードに関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/197.html&quot; target=&quot;_blank&quot;&gt;[c#] zip圧縮コードを作成する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その投稿にも説明しましたが、zipアルゴリズムは様々なところでよく使うアルゴリズムです。ionicライブラリと.net frameworkを利用して圧縮する方法に関して説明しましたが、解凍も同じで作成しましょう。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;ionicライブラリ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;ionicライブラリは外部ライブラリなのでnugetを通ってionicライブラリをダウンロードと連結をしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1021&quot; data-filename=&quot;001.png&quot; style=&quot;width: 355px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1031&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1024&quot; data-filename=&quot;003.png&quot; style=&quot;width: 404px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;zipファイルの状況は下記のイメージになっています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1035&quot; data-filename=&quot;004.png&quot; style=&quot;width: 241px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;解凍しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1037&quot; data-filename=&quot;005.png&quot; style=&quot;width: 287px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実行しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1036&quot; data-filename=&quot;006.png&quot; style=&quot;width: 269px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;解凍されました。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;.net framework内部を利用する方法&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;先に「system.io.commpress」と「system.io.comppression.filesystem」を追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1032&quot; data-filename=&quot;010.png&quot; style=&quot;width: 545px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1033&quot; data-filename=&quot;011.png&quot; style=&quot;width: 788px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;zipファイルの状況は下記のイメージになっています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1035&quot; data-filename=&quot;004.png&quot; style=&quot;width: 241px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;解凍しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1037&quot; data-filename=&quot;005.png&quot; style=&quot;width: 287px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実行しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1038&quot; data-filename=&quot;007.png&quot; style=&quot;width: 270px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ionicと.net frameworkにあるライブラリで圧縮することと違ってソースの差異があります。ionicの場合は圧縮のファイルを読み込んで解凍することではなく、extractallの関数を呼び出しで一括で解凍されます。&lt;/p&gt;&lt;p&gt;標準ライブラリの場合は一つ一つの圧縮ファイルを読み込んでioで作成することです。&lt;/p&gt;&lt;p&gt;個人的に解凍の場合は標準ライブラリがよいと思います。一つ一つのエラー確認やソース応用が可能することを比べてionicの場合は解凍ソースはすごく簡単だけど、一つのコントロールが難しいなので様々ところで使いにくいと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でzipの圧縮ファイルを解凍するコードを作成する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/198.html</guid><pubDate>Tue, 7 Apr 2020 11:22:01 +0900</pubDate></item><item><title>[C#] Zip圧縮コードを作成する方法</title><link>https://www.nowonbun.com/197.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でzip圧縮コードを作成する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;zip圧縮アルゴリズムは私の考えて世界の中で一番よく使う圧縮アルゴリズムではないかと思います。アルゴリズムの優秀性もいいけれども、zip圧縮アルゴリズムに関して多いライブラリがあり、接近性と便利性がよいからよく使うと思います。&lt;/p&gt;&lt;p&gt;c#の.net framework内部でもzipアルゴリズムがあります。&lt;/p&gt;&lt;p&gt;そのため、.net frameworkのソースをを利用して圧縮する方法と、ionicライブラリを利用して圧縮する方法があります。&lt;/p&gt;&lt;p&gt;二つのライブラリでパフォーマンスの差がありません。ソースのステップの差もないので、ユーザが気になるもので使えばよいです。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;ionicライブラリ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;ionicライブラリは外部ライブラリなのでnugetを通ってionicライブラリをダウンロードと連結をしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1021&quot; data-filename=&quot;001.png&quot; style=&quot;width: 355px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1031&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1024&quot; data-filename=&quot;003.png&quot; style=&quot;width: 404px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1023&quot; data-filename=&quot;004.png&quot; style=&quot;width: 272px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1026&quot; data-filename=&quot;005.png&quot; style=&quot;width: 274px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;d:\work\compresstestのディレクトリを圧縮しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1022&quot; data-filename=&quot;006.png&quot; style=&quot;width: 342px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実行しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1029&quot; data-filename=&quot;007.png&quot; style=&quot;width: 279px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;圧縮ファイルが作成されたことを確認できます。&lt;/p&gt;&lt;p&gt;圧縮ファイル内を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1025&quot; data-filename=&quot;008.png&quot; style=&quot;width: 251px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1028&quot; data-filename=&quot;009.png&quot; style=&quot;width: 240px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;圧縮が正常にできました。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;.net framework内部を利用する方法&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;先に「system.io.commpress」と「system.io.comppression.filesystem」を追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1032&quot; data-filename=&quot;010.png&quot; style=&quot;width: 545px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1033&quot; data-filename=&quot;011.png&quot; style=&quot;width: 788px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1023&quot; data-filename=&quot;004.png&quot; style=&quot;width: 272px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1026&quot; data-filename=&quot;005.png&quot; style=&quot;width: 274px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;d:\work\compresstestのディレクトリを圧縮しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1022&quot; data-filename=&quot;006.png&quot; style=&quot;width: 342px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実行しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1030&quot; data-filename=&quot;012.png&quot; style=&quot;width: 274px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;圧縮ファイルが作成されたことを確認できます。&lt;/p&gt;&lt;p&gt;圧縮ファイル内を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1027&quot; data-filename=&quot;013.png&quot; style=&quot;width: 242px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1034&quot; data-filename=&quot;014.png&quot; style=&quot;width: 242px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ionicライブラリと標準ライブラリを利用するソーススタイルが似てます。圧縮解凍は少し差がありますが、圧縮することは同じです。&lt;/p&gt;&lt;p&gt;そうすると標準ライブラリを使うほうがオープンライブラリを利用することより良いと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でzip圧縮コードを作成する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/197.html</guid><pubDate>Mon, 6 Apr 2020 14:57:21 +0900</pubDate></item><item><title>[C#] 数字フォーマット(お金表示及び小数点以下表示)</title><link>https://www.nowonbun.com/196.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#で数字フォーマット(お金表示及び小数点以下表示)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々がプログラム上で数を扱えばintやdouble、decimalのデータタイプで数を使います。その中で計算はおそらくお金と関係があることが多くないかと思います。&lt;/p&gt;&lt;p&gt;でも、お金を計算した結果を出力する時に単純に数だけ表現すると見づらいことになります。特に億や兆単位までなれば行くと間違って読んで間違って判断する可能性もあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;数を間違って読むことはお金の単位は100万円ですが、コンマなしで1000000円のことに出力されたら一目で100万円に認識するのが難しいことです。つまり1000万円のことで誤解することがあります。&lt;/p&gt;&lt;p&gt;１億の場合は100000000 です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのため、我々は誤解しないようにコンマを表示して数の単位を区分します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1017&quot; data-filename=&quot;001.png&quot; style=&quot;width: 444px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば変数に1億を格納して「#,##0」のフォーマットで出力フォーマット(tostring関数)を設定してお金形式で表示しました。&lt;/p&gt;&lt;p&gt;エクセルを使ったことがある方なら数字フォーマット形式を知るかもしりません。数字を表現することで「0」と「#」があります。&lt;/p&gt;&lt;p&gt;この差は「0」の場合は数字データが当該な桁数でデータがなくても「0」を表示することだし、「#」の場合は表示しないことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;すなわち、フォーマットを「0,000」に設定して「1」のデータを出力すると下記の結果が出力します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1020&quot; data-filename=&quot;002.png&quot; style=&quot;width: 451px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;数字は基本「0」と「#」で表現しますが、その以外の表現を説明します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1018&quot; data-filename=&quot;003.png&quot; style=&quot;width: 472px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;数字フォーマッティングは「tostring」がよく使いますが、状況によってstring.formatを利用する時もあります。&lt;/p&gt;&lt;p&gt;cultureinfoクラスを利用してお金を表示する方法もあります。cultureinfoはシステムによって地域別お金を表示する方法です。つまり日本なら日本の形式でアメリカならアメリカタイプに表示する機能です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1019&quot; data-filename=&quot;004.png&quot; style=&quot;width: 383px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://docs.microsoft.com/ja-jp/dotnet/api/system.globalization.cultureinfo?redirectedfrom=msdn&amp;amp;view=netframework-4.8&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/ja-jp/dotnet/api/system.globalization.cultureinfo?redirectedfrom=msdn&amp;amp;view=netframework-4.8&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#で数字フォーマット(お金表示及び小数点以下表示)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/196.html</guid><pubDate>Fri, 3 Apr 2020 00:46:31 +0900</pubDate></item><item><title>[C#] コマンド(cmd)を実行する方法(Processクラス)</title><link>https://www.nowonbun.com/195.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でコマンド(cmd)を実行する方法(processクラス)に関する説明です。&lt;/p&gt;&lt;p&gt;c#を利用してプログラミングすることは普通はwindow環境で構築します。coreでlinux環境やiot環境でcoreを使いますが、まだ多くあることではありません。&lt;/p&gt;&lt;p&gt;そのため、processクラスを利用すればwindow commandを操作できるようなプログラムを開発できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1016&quot; data-filename=&quot;001.png&quot; style=&quot;width: 601px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の結果をみれば始めdドライブでコンソールが始まります。まるでcmdコマンドらしくカーソルがc:&amp;gt;の次にフォーカスになっています。そしてディレクトリ変更する時にドライブc:\ディレクトリ&amp;gt;で表示されます。最終、dirコマンドを実行してファイルリストを取得します。最後にexitのコマンドでprocessプログラムを終了します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参考に上の結果はcmd.exeプログラムではなく、cmd.exeと最大に似ているuiで作りました。ほぼそっくりです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でコマンド(cmd)を実行する方法(processクラス)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/195.html</guid><pubDate>Tue, 31 Mar 2020 07:16:19 +0900</pubDate></item><item><title>[C#] FTPに接続してファイルダウンロード、アップロードする方法</title><link>https://www.nowonbun.com/194.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でftpに接続してファイルダウンロード、アップロードする方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラム通信上でよく使うプロトコールはhttp、mail(メール)があるし、ftpがあります。&lt;/p&gt;&lt;p&gt;sambaもネットワーク通信ですが、プロトコールではなく、ユーティリティ名だし、プログラム内で通信設定が必要なことではなく、os側でネットワークドライブを割り当てして使うかlinux環境ならmountして内部ディスクみたいに使うので、プログラム内で別途で開発が必要なことではないです。&lt;/p&gt;&lt;p&gt;率直に全然要らないことではないですが、しやすい方法を置いて大変に開発する必要はありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最近はcloudやwebサーバのrest apiを利用するか、またはhttpヘッダを利用してcontext-typeをapplication/octet-streamに指定して直接にウェブサーバにアップロード、ダウンロードする方法でファイルを管理するので、以前みたいにftpをよく使いません。&lt;/p&gt;&lt;p&gt;また、ファイルストレージではなく、アプリサーバ(ゲームサーバなど)でも以前みたいに直接にサーバを開発することより、webサーバにつけて使う方法になったので、データ格納サーバ(ftpサーバ)を別途で構築せずに開発するのが最近のトレンドです。(必ずwebサーバではなく仕様によって違います。)&lt;/p&gt;&lt;p&gt;でも、逆にftpプロトコールはhttpプロトコールと似ていることが多し、以前より良いライブラリも多いので、よく使うことになると様々なサービスのパフォーマンス改善によくなると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前にftpサーバを構築する方法に関して説明したことがあるから参考してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/187.html&quot; target=&quot;_blank&quot;&gt;[window] windowでftpサーバを構築する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/105.html&quot; target=&quot;_blank&quot;&gt;[centos] ftpインストールする方法(vsftpd)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;上のソースをみればftpからリストを取得する時にディレクトリやファイルの区分がありません。もちろん、検索メソッドをlistdirectoryではなく、listdirectorydetailでするとファイルとディレクトリの区分ができますが、結果パーシングしなければならないし、様々なことに大変になるのでtry~catchを利用してファイルとディレクトリを区分する方が簡単です。&lt;/p&gt;&lt;p&gt;実はtry~catchで分岐することはパフォーマンスで致命的に悪いのでできればif~elseで作成することができればよいです。&lt;/p&gt;&lt;p&gt;私の場合はソースコードを減らすようにtry~catchを利用しましたが、仕様に合わせて作成してください。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合はftpサーバを「d:\ftptest\ftp」に設定してアップロードファイルを「d:\ftptest\upload」フォルダからアップロードテストをします。そして、ダウンロードフォルダは「d:\ftptest\download」に設定してダウンロードテストをします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1009&quot; data-filename=&quot;001.png&quot; style=&quot;width: 274px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;こんなにあるファイルは「d:\ftptest\ftp」フォルダにアップロードします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1010&quot; data-filename=&quot;002.png&quot; style=&quot;width: 279px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてそれをまたダウンロードして「d:\ftptest\download」にダウンロードします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1011&quot; data-filename=&quot;003.png&quot; style=&quot;width: 273px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから実行しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1012&quot; data-filename=&quot;004.png&quot; style=&quot;width: 209px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;別にコンソール出力を残さなかったので何も出力されないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1013&quot; data-filename=&quot;005.png&quot; style=&quot;width: 263px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ftpサーバにはよくアップロードがされました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1014&quot; data-filename=&quot;006.png&quot; style=&quot;width: 271px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、ftpからダウンロードすることもよくできました。&lt;/p&gt;&lt;p&gt;私の場合は特別に例を作成することがないので、ファイルを読み込んでftpにアップロードしました。それをまたダウンロードしてファイルに作成しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、通信でストリームを利用してバイナリを扱うことなので必ずファイルダウンロードやアップロードだけ使うことではありません。&lt;/p&gt;&lt;p&gt;もちろん、データベースほど頻繁に接続して検索するし格納すればftpの効率性はすごく落ちますが、dbに格納しようと思うデータに考えたらデータサイズは大きいし、でも頻繁に参照しますが、修正はよくないデータならftpがちょうどいいではないかと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここからrequest.methodに関して説明します。&lt;/p&gt;&lt;p&gt;request.methodはstringタイプに設定しますが、ftpプロトコールが合わせてメソッドを設定しなければならないです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://ja.wikipedia.org/wiki/ftp%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%81%ae%e4%b8%80%e8%a6%a7&quot; target=&quot;_blank&quot;&gt;https://ja.wikipedia.org/wiki/ftpコマンドの一覧&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例で使ったコマンドはnlstでリストを取得してstorでアップロードしました。そしてmkdでftpにディレクトリを作成しました。後、retrでファイルをダウンロードしました。&lt;/p&gt;&lt;p&gt;それをc#ではよく使うコマンド別でstring変数にあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1015&quot; data-filename=&quot;007.png&quot; style=&quot;width: 596px;&quot;&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/framework/network-programming/how-to-upload-files-with-ftp&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/en-us/dotnet/framework/network-programming/how-to-upload-files-with-ftp&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://stackoverflow.com/questions/2781654/ftpwebrequest-download-file&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/2781654/ftpwebrequest-download-file&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でftpに接続してファイルダウンロード、アップロードする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/194.html</guid><pubDate>Fri, 27 Mar 2020 19:21:49 +0900</pubDate></item><item><title>[C#] HttpWebRequestを利用してウェブページを読み込みする方法</title><link>https://www.nowonbun.com/193.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#のhttpwebrequestを利用してウェブページを読み込みする方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々がプログラミングをする時にウェブのオブジェクトを読み込みが必要な時があります。例えば、ブログのrssあるいはsitemapのxmlを読み込みするかまたはウェブページの情報を取得する必要な時です。&lt;/p&gt;&lt;p&gt;でもhttpwebrequestはウェブページだけ読み込むことでスクレイピングとは意味が違います。スクレイピングはウェブのレンダリング、つまり、javascriptの動的に処理されたデータを読み込むデータを取得することです。&lt;/p&gt;&lt;p&gt;httpwebrequestはウェブレンダリングがされてない純粋なページの要素データを読み込むことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;httpプロトコールは単純なソケット方法で要請(request)と応答(response)が終わればソケット接続を終わらせる流れです。&lt;/p&gt;&lt;p&gt;プロトコールの中でヘッダを定義して要請すればそのヘッダ値に合わせて応答することがhttpプロトコールです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;httpプロトコールはソケットでたくさん使うオブジェクトです。それでc#にはhttpwebrequestのクラスがあってそれを簡単に接続してデータを取得できるようになっています。&lt;/p&gt;&lt;p&gt;上のソースをテストするようにphpファイルを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1008&quot; data-filename=&quot;001.png&quot; style=&quot;width: 372px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「200」は応答コードでgetrequest関数の中でresponse.statuscodeをコンソール出力したことです。「200」は正常です。&lt;/p&gt;&lt;p&gt;私がgetrequest関数を二回に呼び出したので、二つの結果を受け取りました。&lt;/p&gt;&lt;p&gt;始めはgetタイプで接続したので、getの変数に「test」というデータがあります。&lt;/p&gt;&lt;p&gt;二つ目はpostタイプで接続したので、postの変数に「test」というデータがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#のhttpwebrequestを利用してウェブページを読み込みする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/193.html</guid><pubDate>Fri, 27 Mar 2020 00:23:19 +0900</pubDate></item><item><title>[Java] Base64をエンコード、デコードする方法</title><link>https://www.nowonbun.com/181.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでbase64をエンコード、デコードする方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;base64とは実は様々な複雑な説明がありますが、私が簡単に説明するとbyteタイプになっているbinaryデータをプログラム間にデータ交換をため、ascii文字に変換しているコードをbase64といいます。&lt;/p&gt;&lt;p&gt;つまり「byteデータやstreamデータをstringのタイプに変換すること、stringの値はcharのデータ範囲を超えない(データ値が127)ものになっている」ということです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先に簡単なファイルをioで読み込んでbase64に変換します。&lt;/p&gt;&lt;p&gt;pcに「hello world」という値がある「test.txt」を準備しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=940&quot; data-filename=&quot;001.png&quot; style=&quot;width: 273px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてそれを読み込んだらbyteタイプのbinaryになります。そのbinaryをbase64に変換します。&lt;/p&gt;&lt;p&gt;実行結果は下記とおりになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=942&quot; data-filename=&quot;002.png&quot; style=&quot;width: 652px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それが「hello world」のbase64コードです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;またbase64コードになっているデータを元のbinary(byte[])データに変換しましょう。&lt;/p&gt;&lt;p&gt;実行結果は下記とおりになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=941&quot; data-filename=&quot;003.png&quot; style=&quot;width: 636px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;base64タイプをbyteタイプに変換しました。byteデータをstringタイプに変換して出力すると「hello world」が出ます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実はプログラム間に通信する時にbase64にエンコードやデコードにするとデータ長さが増えるので非効率です。&lt;/p&gt;&lt;p&gt;でも、base64を使うところはbinaryをstringに表現するところはイメージデータをstringデータで格納する時や、暗号化されたファイルをstringデータとしてデータをデータ通信する時にはよく使います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでbase64をエンコード、デコードする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/181.html</guid><pubDate>Thu, 26 Mar 2020 02:21:30 +0900</pubDate></item><item><title>[C#] Base64のエンコード、デコードする方法</title><link>https://www.nowonbun.com/192.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はc#でbase64のエンコード、デコードする方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;base64とはbyteタイプになっているバイナリデータをプログラムの間にもっと扱いやすくするため、asciiコードに変換したデータをbase64といいます。&lt;/p&gt;&lt;p&gt;簡単に説明すると「byteデータやstreamデータをstringタイプに変換したことです。そのstringタイプになっているデータもエンコードタイプに関係ないasciiコードになっている」ということで理解するとよいです。&lt;/p&gt;&lt;p&gt;簡単なファイルを読み込んでbase64タイプに変換しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「hello world」というテキストを作成したファイルを準備しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1006&quot; data-filename=&quot;001.png&quot; style=&quot;width: 306px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてそれをbyteタイプに読み込んでbase64に変換しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1005&quot; data-filename=&quot;002.png&quot; style=&quot;width: 534px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果をみればhello worldのバイナリが暗号コードみたいに変換されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、bsse64になったコードをstringタイプに変換して出力しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1007&quot; data-filename=&quot;003.png&quot; style=&quot;width: 444px;&quot;&gt;&lt;/p&gt;&lt;p&gt;コンソールで「hello world」という結果が表示されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラム間に通信する時にbase64コードでエンコード、デコードすれば逆にデータが大きくなるので、非効率的です。ただ、byteタイプに送信すればよいからです。&lt;/p&gt;&lt;p&gt;でも、このbase64が必要な時があります。例えば、バイナリタイプをstringタイプに変換する時です。&lt;/p&gt;&lt;p&gt;暗号化する時にも必要な時があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでc#でbase64のエンコード、デコードする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/192.html</guid><pubDate>Thu, 26 Mar 2020 02:20:59 +0900</pubDate></item><item><title>[Java] 日付フォーマット(SimpleDateFormat)を使う方法</title><link>https://www.nowonbun.com/191.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaで日付フォーマットを使う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、javaで数字フォーマットに関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/174.html&quot; target=&quot;_blank&quot;&gt;[java] 数字フォーマット(お金表示及び小数点以下表示)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;その時には数字フォーマットのdecimalformatを使いましたが、データフォーマットはdateformatを使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1004&quot; data-filename=&quot;001.png&quot; style=&quot;width: 295px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;date形式からstringに変換、またはstringからdate形式に変換することはsimpledateformatクラスです。&lt;/p&gt;&lt;p&gt;simpledateformatのフォーマットパターンは下記とおりになります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/simpledateformat.html&quot; target=&quot;_blank&quot;&gt;https://docs.oracle.com/javase/8/docs/api/java/text/simpledateformat.html&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;文字&lt;/th&gt;        &lt;th&gt;日付及び時間コンポーネント&lt;/th&gt;		&lt;th&gt;表示&lt;/th&gt;		&lt;th&gt;例&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;g&lt;/td&gt;		&lt;td&gt;era designator&lt;/td&gt;		&lt;td&gt;text&lt;/td&gt;		&lt;td&gt;ad&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;y&lt;/td&gt;		&lt;td&gt;year&lt;/td&gt;		&lt;td&gt;year&lt;/td&gt;		&lt;td&gt;1996; 96&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;y&lt;/td&gt;		&lt;td&gt;week year&lt;/td&gt;		&lt;td&gt;year&lt;/td&gt;		&lt;td&gt;2009; 09&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;m&lt;/td&gt;		&lt;td&gt;month in year (context sensitive)&lt;/td&gt;		&lt;td&gt;month&lt;/td&gt;		&lt;td&gt;july; jul; 07&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;l&lt;/td&gt;		&lt;td&gt;month in year (standalone form)&lt;/td&gt;		&lt;td&gt;month&lt;/td&gt;		&lt;td&gt;july; jul; 07&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;w&lt;/td&gt;		&lt;td&gt;week in year&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;27&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;w&lt;/td&gt;		&lt;td&gt;week in month&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;2&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;d&lt;/td&gt;		&lt;td&gt;day in year&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;189&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;d&lt;/td&gt;		&lt;td&gt;day in month&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;10&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;f&lt;/td&gt;		&lt;td&gt;day of week in month&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;2&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;e&lt;/td&gt;		&lt;td&gt;day name in week&lt;/td&gt;		&lt;td&gt;text&lt;/td&gt;		&lt;td&gt;tuesday; tue&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;u&lt;/td&gt;		&lt;td&gt;day number of week (1 = monday, ..., 7 = sunday)&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;1&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;a&lt;/td&gt;		&lt;td&gt;am/pm marker&lt;/td&gt;		&lt;td&gt;text&lt;/td&gt;		&lt;td&gt;pm&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;h&lt;/td&gt;		&lt;td&gt;hour in day (0-23)&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;0&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;k&lt;/td&gt;		&lt;td&gt;hour in day (1-24)&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;24&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;k&lt;/td&gt;		&lt;td&gt;hour in am/pm (0-11)&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;0&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;h&lt;/td&gt;		&lt;td&gt;hour in am/pm (1-12)&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;12&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;m&lt;/td&gt;		&lt;td&gt;minute in hour&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;30&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;s&lt;/td&gt;		&lt;td&gt;second in minute&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;55&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;s&lt;/td&gt;		&lt;td&gt;millisecond&lt;/td&gt;		&lt;td&gt;number&lt;/td&gt;		&lt;td&gt;978&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;z&lt;/td&gt;		&lt;td&gt;time zone&lt;/td&gt;		&lt;td&gt;general time zone&lt;/td&gt;		&lt;td&gt;pacific standard time; pst; gmt-08:00&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;z&lt;/td&gt;		&lt;td&gt;time zone&lt;/td&gt;		&lt;td&gt;rfc 822 time zone&lt;/td&gt;		&lt;td&gt;-0800&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;x&lt;/td&gt;		&lt;td&gt;time zone&lt;/td&gt;		&lt;td&gt;iso 8601 time zone&lt;/td&gt;		&lt;td&gt;-08; -0800; -08:00&lt;/td&gt;	  &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;上のフォーマットパターンの例です。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;日付及び時間パターン&lt;/th&gt;        &lt;th&gt;結果&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;&quot;yyyy.mm.dd g &apos;at&apos; hh:mm:ss z&quot;&lt;/td&gt;		&lt;td&gt;2001.07.04 ad at 12:08:56 pdt&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;eee, mmm d, &apos;&apos;yy&quot;&lt;/td&gt;		&lt;td&gt;wed, jul 4, &apos;01&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;h:mm a&quot;&lt;/td&gt;		&lt;td&gt;12:08 pm&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;hh &apos;o&apos;&apos;clock&apos; a, zzzz&quot;&lt;/td&gt;		&lt;td&gt;12 o&apos;clock pm, pacific daylight time&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;k:mm a, z&quot;&lt;/td&gt;		&lt;td&gt;0:08 pm, pdt&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;yyyyy.mmmmm.dd ggg hh:mm aaa&quot;&lt;/td&gt;		&lt;td&gt;02001.july.04 ad 12:08 pm&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;eee, d mmm yyyy hh:mm:ss z&quot;&lt;/td&gt;		&lt;td&gt;wed, 4 jul 2001 12:08:56 -0700&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;yymmddhhmmssz&quot;&lt;/td&gt;		&lt;td&gt;010704120856-0700&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;yyyy-mm-dd&apos;t&apos;hh:mm:ss.sssz&quot;&lt;/td&gt;		&lt;td&gt;2001-07-04t12:08:56.235-0700&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;yyyy-mm-dd&apos;t&apos;hh:mm:ss.sssxxx&quot;&lt;/td&gt;		&lt;td&gt;2001-07-04t12:08:56.235-07:00&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;&quot;yyyy-&apos;w&apos;ww-u&quot;&lt;/td&gt;		&lt;td&gt;2001-w27-3&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;javaでdateクラスを取得する方法は二つがあります。&lt;/p&gt;&lt;p&gt;「calendar.getinstance().gettime()」と「new date」です。&lt;/p&gt;&lt;p&gt;一応、お勧めの方法はcalendarクラスを通ってgettime関数で取得することです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;なぜなら、時間というオブジェクトはインスタンスを生成することを考えば合ってる話しになるし、間違っている話もなります。systemで流れる時間はローカルシステムから取得するデータです。&lt;/p&gt;&lt;p&gt;そのデータをnewで割り当てして取得することは間違ってる概念だと思われます。でも、流れる時間で特定時間をオブジェクト化して取得することだと思えば、間違っていない概念です。&lt;/p&gt;&lt;p&gt;なのでjavaではdateクラスを「new」で生成することは無駄なメモリリソースだし、バグ発生の可能性が高いと判断するでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単に説明すると「new date」の場合は特定な日付を生成することには使うし、現在の時間を取得する時にはcalendarを通って取得して使うという意味です。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://stackoverflow.com/questions/368094/system-currenttimemillis-vs-new-date-vs-calendar-getinstance-gettime&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/368094/system-currenttimemillis-vs-new-date-vs-calendar-getinstance-gettime&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://stackoverflow.com/questions/20693131/difference-between-new-date-and-calendar-date/20693309&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/20693131/difference-between-new-date-and-calendar-date/20693309&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私も率直に言って詳しい差異まで知りません。ただjavaapiから現在日付はcalendarから取得することをお勧めだというのでユーザの場合はapi通りに設計することがバグ発生可能性を低くすることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaで日付フォーマットを使う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/191.html</guid><pubDate>Wed, 25 Mar 2020 00:36:53 +0900</pubDate></item><item><title>[Java] サーブレット(Servlet)の環境でファイルアップロード(プログレスバーでファイルアップロード状態を表示する方法)する方法</title><link>https://www.nowonbun.com/190.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのサーブレット(servlet)の環境でファイルアップロード(プログレスバーでファイルアップロード状態を表示する方法)する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、springプレームワーク環境でアップロードする方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/189.html&quot; target=&quot;_blank&quot;&gt;[java] spring環境でファイルアップロード(プログレスバーでファイルアップロード状態を表示する方法)する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;jspの領域の部分はサーブレットと同じだと思いますが、サーバーサイドの実装が違うので説明します。&lt;/p&gt;&lt;p&gt;サーブレットのプログラムを構築する方法に関しては以前に説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/74.html&quot; target=&quot;_blank&quot;&gt;[java] web serviceプログラムのservletを作成方法(eclipse)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先にサーブレットのウェブサービスを構築してindex.jspファイルを作成しましょう。&lt;/p&gt;&lt;p&gt;上のソースはspringプレームワーク側で作成したjspファイルと同じです。&lt;/p&gt;&lt;p&gt;「localhost/upload」のパスでファイルをアップロードするでしょう。&lt;/p&gt;&lt;p&gt;アップロードするためにweb.xmlを設定する必要があります。&lt;/p&gt;&lt;p&gt;これからプログラムを起動しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=999&quot; data-filename=&quot;001.png&quot; style=&quot;width: 679px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アップロードする前のindex.jspの状況です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1000&quot; data-filename=&quot;002.png&quot; style=&quot;width: 343px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アップロードしようと思うファイルは150mbのサイズのバイナリデータです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アップロードしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1001&quot; data-filename=&quot;003.png&quot; style=&quot;width: 678px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログレスバーが動くことを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1003&quot; data-filename=&quot;004.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アップロードが完了しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1002&quot; data-filename=&quot;005.png&quot; style=&quot;width: 396px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;指定された「d:\work」フォルダにファイルが格納されたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのサーブレット(servlet)の環境でファイルアップロード(プログレスバーでファイルアップロード状態を表示する方法)する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。 &lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/190.html</guid><pubDate>Tue, 24 Mar 2020 00:48:57 +0900</pubDate></item><item><title>[Java] Spring環境でファイルアップロード(プログレスバーでファイルアップロード状態を表示する方法)する方法</title><link>https://www.nowonbun.com/189.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのspring環境でファイルアップロード(プログレスバーでファイルアップロード状態を表示する方法)する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスでアップロードすることだと思えばformの要素でenctypeをmultipart/form-dataに設定してヘッダーにバウンダリーを設定し、アップロードすることをサーバ側でバウンダリーデータを受け取ったらアップロードが完了します。&lt;/p&gt;&lt;p&gt;ウェブサービスのアップロードの仕様です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でもspringフレームワークはこの単純なアップロードロジックが少し複雑になっています。そのため、よく要約をしていないとアップロードを実装するたびに、忘れるか迷う時があります。&lt;/p&gt;&lt;p&gt;以前、spring環境を構築する方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/75.html&quot; target=&quot;_blank&quot;&gt;[java] eclipseでspring web frameworkを利用してウェブサービスプロジェクトを立ち上がる方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先にファイルアップロードを実装するためにはmavenレポジトリから二つのライブラリをダウンロードして連携しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=992&quot; data-filename=&quot;001.png&quot; style=&quot;width: 507px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてmvc-config.xmlでアップロードする時ファイルサイズのリミット設定をしなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=993&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのあと、ファイルアップロードするウェブページ(jsp)を生成しましょう。&lt;/p&gt;&lt;p&gt;そのあと、サーバ側のcontollerを作成しましょう。&lt;/p&gt;&lt;p&gt;ここまで作成したらuploadする準備は完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすれば起動しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=995&quot; data-filename=&quot;003.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アップロードする前のindex.htmlの状況です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=994&quot; data-filename=&quot;004.png&quot; style=&quot;width: 343px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アップロードしようと思うファイルは150mbのサイズのバイナリデータです。&lt;/p&gt;&lt;p&gt;アップロードしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=996&quot; data-filename=&quot;005.png&quot; style=&quot;width: 678px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログレスバーが動くことを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=998&quot; data-filename=&quot;006.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アップロードが完了しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=997&quot; data-filename=&quot;007.png&quot; style=&quot;width: 396px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;指定された「d:\work」フォルダにファイルが格納されたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのspring環境でファイルアップロード(プログレスバーでファイルアップロード状態を表示する方法)する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/189.html</guid><pubDate>Sun, 22 Mar 2020 23:15:12 +0900</pubDate></item><item><title>[Java] FTPに接続してファイルをダウンロード、アップロードする方法(FTPClient)</title><link>https://www.nowonbun.com/188.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでftpに接続してファイルをダウンロード、アップロードする方法(ftpclient)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前に私がwindow環境でftp serverを構築する方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/105.html&quot; target=&quot;_blank&quot;&gt;[centos] ftpインストールする方法(vsftpd)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/187.html&quot; target=&quot;_blank&quot;&gt;[window] windowでftpサーバを構築する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ftpclientプロトコールは以前ほどではないけれども、様々でファイル転送プロトコールとして使うところがあるので紹介します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、java環境でftpを使うようにはライブラリをダウンロードおよび参照しなければならないです。&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/commons-net/commons-net/3.6&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/commons-net/commons-net/3.6&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=985&quot; data-filename=&quot;001.png&quot; style=&quot;width: 648px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ftp client環境を必ずウェブサービスで使うことだけではないのでconsoleで作成しましょう。&lt;/p&gt;&lt;p&gt;上のソースはprogramのmain関数でftp環境のファイルとディレクトリをすべて削除して「ftptest/upload」のディレクトリのファイルと派生ディレクトリ、ファイルをすべてアップロードして、「ftptest/download」にすべてダウンロードすることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=986&quot; data-filename=&quot;002.png&quot; style=&quot;width: 274px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のファイルを「ftp://localhost(ftptest/ftp)」にアップロードするでしょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=989&quot; data-filename=&quot;003.png&quot; style=&quot;width: 279px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてまた上のファイルを(ftptest/download)にダウンロードするでしょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=988&quot; data-filename=&quot;004.png&quot; style=&quot;width: 273px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすればプログラムを実行しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=987&quot; data-filename=&quot;005.png&quot; style=&quot;width: 561px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「ftp://localhost(ftptest/ftp)」にアップロードされたか確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=991&quot; data-filename=&quot;006.png&quot; style=&quot;width: 263px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ftpサーバにちゃんとアップロードされました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=990&quot; data-filename=&quot;007.png&quot; style=&quot;width: 271px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ちゃんとダウンロードもされました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単なソースなので一つのファイルですべての例を作成しました。&lt;/p&gt;&lt;p&gt;よく使うapiはlistfilesの関数のftpファイルリスト取得することとchangeworkingdirectory関数のディレクトリカーソル移動です。&lt;/p&gt;&lt;p&gt;カーソル移動に関して現在のカーソル位置に関して教える関数は無いです。ftpclientではなく変数を利用してカーソル移動を管理しなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上でアップロードする時、storefileを使いましたが、既存のftpに同じ名のファイルが存在すれば上書きします。でもftpには既存ファイルでバイナリ追加するappendfile関数もあります。&lt;/p&gt;&lt;p&gt;appendfileの場合は同じ名のファイルが無ければファイルを追加します。同じ名のファイルがあれば、バイナリを追加して作成します。テキストなら問題ないけど、その以外はファイルが可笑しくなるでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://commons.apache.org/proper/commons-net/apidocs/org/apache/commons/net/ftp/ftpclient.html&quot; target=&quot;_blank&quot;&gt;https://commons.apache.org/proper/commons-net/apidocs/org/apache/commons/net/ftp/ftpclient.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでftpに接続してファイルをダウンロード、アップロードする方法(ftpclient)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/188.html</guid><pubDate>Fri, 20 Mar 2020 02:44:36 +0900</pubDate></item><item><title>[Window] WindowでFTPサーバを構築する方法</title><link>https://www.nowonbun.com/187.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はwindowでftpサーバを構築する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最近、cloud driveというクラウドストレージがあり、どんなパソコンでも簡単にファイルを共有、バックアップなどをできますが、わずか10年前には大勢の人がメールやusbなどでファイルを共有やバックアップをたくさんしました。&lt;/p&gt;&lt;p&gt;メールの短所はインタネットができるところならファイルを共有できますが、ファイルバージョン管理が難しいし、データサイズのリミットがあります。usbの場合は常に所持しなければならならない不便があるし、データサイズのリミットもあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それでサーバを扱うデベロッパーやseなら家やデータセンターにnasサーバを構築してftpでファイルを共有しました。&lt;/p&gt;&lt;p&gt;でも、先に説明した通りにcloud driveがあるので最近はftpを使用する頻度がたくさん低くなったし、社内ではftpよりサンバーサーバ(samba)というネットワークドライブが楽なので最近はよく使いません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;しかし、個人的にプログラム開発上ではcloud drive apiを使うことでは少し負担があるし、社内ではサンバーサーバ(smb)よりもっとセキュリティ的だし簡単に開発できるプロトコールなのでftpが良いではないかと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;window環境ではftpサーバを構築するために別にプログラムをインストールする必要がないし、windowの基本パッケージであるのでインストールだけでよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=965&quot; data-filename=&quot;001.png&quot; style=&quot;width: 399px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;コントロールで「プログラムと機能」を開きます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=966&quot; data-filename=&quot;002.png&quot; style=&quot;width: 484px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして「windowsの機能の有効化または無効化」を選択しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=967&quot; data-filename=&quot;003.png&quot; style=&quot;width: 281px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてftpサーバーとiis管理コンソールなどを選択しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=970&quot; data-filename=&quot;004.png&quot; style=&quot;width: 415px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;確認ボタンを押下すればインストールが開始します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=968&quot; data-filename=&quot;005.png&quot; style=&quot;width: 658px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして数分をお待ちしたらインストールが完了します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=981&quot; data-filename=&quot;006.png&quot; style=&quot;width: 458px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてプログラム検索に「iis」というコマンドを打ったらインタネットインフォメーションサービス(iis)マネージャーのプログラムが検索されますが、それをクリックして実行します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=975&quot; data-filename=&quot;007.png&quot; style=&quot;width: 291px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてサイト項目でマウス右をクリックすればftpサイトの追加項目があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=979&quot; data-filename=&quot;008.png&quot; style=&quot;width: 673px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;サイトの名前を入力してftpサーバーでファイルアップロード及びダウンロードするパスを設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=982&quot; data-filename=&quot;009.png&quot; style=&quot;width: 673px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;もしかして別にホスト設定があればip設定でホストドメインを入力します。でも別に制限がなければ指定しなくてもよいです。&lt;/p&gt;&lt;p&gt;また、ssl設定が必要なら証明書を入れるしなければ無しで設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=974&quot; data-filename=&quot;010.png&quot; style=&quot;width: 673px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして最後に認証は匿名ユーザが接続できるようにしようと思えば匿名を選択しますが、普通はセキュリティのため設定しません。&lt;/p&gt;&lt;p&gt;基本はチェックします。承認はまだユーザを作成してないので「未選択」を設定します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからユーザを追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=980&quot; data-filename=&quot;011.png&quot; style=&quot;width: 317px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;windowメニューでマウス右クリックしてコンピューターの管理を開きます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=983&quot; data-filename=&quot;012.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてローカルユーザでユーザを選択して「新しいユーザー」を追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=971&quot; data-filename=&quot;013.png&quot; style=&quot;width: 443px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてユーザー名(id)を入力してパスワードを入力しましょう。&lt;/p&gt;&lt;p&gt;「次回ログオン時にパスワードを変更が必要」というチェックボックスはチェック解除して「パスワード変更できない」と「無期限できない」というチェックボックスをチェックします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=973&quot; data-filename=&quot;014.png&quot; style=&quot;width: 528px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;管理windowでユーザーが追加されたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;またiis(インタネットインフォメーションサービスマネージャー)に戻ります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=984&quot; data-filename=&quot;015.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ftpを選択して「ftpの承認規則」を選択しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=976&quot; data-filename=&quot;016.png&quot; style=&quot;width: 359px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてマウス右クリックして「許可規則の追加」を選択します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=972&quot; data-filename=&quot;017.png&quot; style=&quot;width: 469px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ユーザー管理で生成したユーザー名(id)を入力して読み取り、書き込み権限を選択します。&lt;/p&gt;&lt;p&gt;ここまでftp設定が完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここからファイルエクスプローラー(explorer)で「ftp://localhost」を接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=969&quot; data-filename=&quot;018.png&quot; style=&quot;width: 348px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうしたら「id」、「pw」を入力する画面が表示されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=978&quot; data-filename=&quot;019.png&quot; style=&quot;width: 562px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;生成したユーザー名とパスワードを入力してログオンしましょう。&lt;/p&gt;&lt;p&gt;そうしたら接続できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例えでファイルをドラッグしてftpにコピーしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=977&quot; data-filename=&quot;020.png&quot; style=&quot;width: 384px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ftp設定したアップロード及びダウンロードパスを確認すれば、ファイルがコピーされたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでwindowでftpサーバを構築する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Window</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/187.html</guid><pubDate>Thu, 19 Mar 2020 03:27:22 +0900</pubDate></item><item><title>[Java] JSPのSpring環境でschedulerのcronを使う方法</title><link>https://www.nowonbun.com/186.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjspのspring環境でschedulerのcronを使う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前に私がjsp環境でspring web frameworkを利用してウェブ環境を構築する方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/75.html&quot; target=&quot;_blank&quot;&gt;[java] eclipseでspring web frameworkを利用してウェブサービスプロジェクトを立ち上がる方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cronとは簡単に考えるとスケジューラだと思えば良いです。以前、unix時代に使ったschedulerのユーティリティの名前ですが、これがlinuxにてcronスケジューラになってjava系のスケジューラの名前もcronになったらしいです。&lt;/p&gt;&lt;p&gt;スケジューラはプログラムサービスで運用することよりosで運用することがサーバ管理側でもいろいろことが楽ですが、スケジューラ特性によってウェブサービスの中で運用する時も必要なのでspringウェブサービスでも使えます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスで使えるスケジューラだと思えば、基本的にサービス内で生成する必要がないlogデータ削除、掲示板サービスの投稿予約システム、仕様によってデータベース整理など様々作業を予想できます。&lt;/p&gt;&lt;p&gt;でも、os環境で使えるスケジューラとウェブサービス内で使えるスケジューラを明確に区切りする必要があります。例えば、ロードバランシング(分散システム)で分けている2台以上のウェブサービスの場合、各ウェブサービスでcronジョブスケジューラが各実行中なので重複処理が発生可能性もあります。&lt;/p&gt;&lt;p&gt;この時にはウェブサービスではなく別途のスケジューラサービスを構築するかosスケジューラ、dbスケジューラを利用してスケジューラを実行することが正しいです。(以外でこんなミスが多いです。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービス内で使えるスケジューラはロードバランシングがない単一システムでキャッシュリロード、セッション、tempファイル、ログファイルなどを管理します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;さて、spring環境でcronを設定する方法に関して説明します。&lt;/p&gt;&lt;p&gt;pom.xmlで二つのライブラリを登録しましょう。&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/org.quartz-scheduler/quartz&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/org.quartz-scheduler/quartz&lt;/a&gt;&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/org.quartz-scheduler/quartz-jobs&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/org.quartz-scheduler/quartz-jobs&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=961&quot; data-filename=&quot;001.png&quot; style=&quot;width: 747px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてspring mvc configファイルを修正しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;taskスキーマを追加してdrivenを使い設定すればよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=964&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合はcontroller.cronパッケージで設定しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=962&quot; data-filename=&quot;003.png&quot; style=&quot;width: 471px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;controller.cronパッケージでschedulerクラスを追加しました。&lt;/p&gt;&lt;p&gt;上のcronスケジューラは毎秒実行する形式のスケジューラです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=963&quot; data-filename=&quot;004.png&quot; style=&quot;width: 554px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスを実行すればcronスケジューラが実行されて、run関数が毎秒に呼び出されることを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のscheduledアノテーションでcronサイクルを設定した文法に関する説明です。&lt;/p&gt;&lt;p&gt;私の場合はアスタリスクマーク(*)6個をスペース区切りで使いましたが、実は基本7個アスタリスクマーク(*)でスペース区切りで使います。&lt;/p&gt;&lt;p&gt;cronは上の7桁の表現式でサイクルを設定します。&lt;/p&gt;&lt;p&gt;アスタリスクマーク(*)はallの意味で毎秒、毎分、毎時、毎日、毎月、毎曜日、毎年の意味です。&lt;/p&gt;&lt;p&gt;日、曜日の場合はアスタリスクマーク(*)を代わりにクエスチョンマーク(?)を使えます。(意味は違いますが、結果は同じです。) &lt;/p&gt;&lt;p&gt;そしてその以外に指定する時は数字で表示します。参考に曜日の場合は1から7まで数を使います。(1:日 2:月 3:火 4:水 5:木 6:金 7:土)&lt;/p&gt;&lt;p&gt;例えば、「0 0 10 1 1 1 」という表現式なら毎年(省略)1月1日10時00分00秒の月曜日も場合(火曜日の場合は実行しません。)実行しましょうという文法になります。&lt;/p&gt;&lt;p&gt;指定する日付を二つ以上ならコンマで区切りします。&lt;/p&gt;&lt;p&gt;例えば、「0,10 0 10 * * *」といえば毎年(省略)毎月毎日10時00分00秒、10秒に実行しましょうと意味になります。&lt;/p&gt;&lt;p&gt;秒の設定で「0,10,20,30,40,50」といえば0秒、10秒、20秒、30秒、40秒、50秒に実行しましょうという意味ですが、楽に「0/10」で表現できます。「0/10」は10秒たびに実行する意味です。&lt;/p&gt;&lt;p&gt;ハイフンで範囲を設定することができますが、「1-10」だと「1日から10日まで」という意味になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;特殊表現式で「l,w,#」がありますが、「l」は最後の日の意味を持っています。日と曜日だけで使えます。日で「l」を使うと月の最後の日、曜日の場合は土曜日になります。&lt;/p&gt;&lt;p&gt;wは日だけで使えますが、近い平日という意味です。10wの場合は10日が土曜日なら9日、日曜日なら11日に実行する表現式です。&lt;/p&gt;&lt;p&gt;#は曜日に使える表現式です。2#2なら二つ目の週の月曜日に実行する意味です。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;表現式&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;*&lt;/td&gt;        &lt;td&gt;allの意味で毎秒、毎分、毎時、毎日、毎月、毎年&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;?&lt;/td&gt;        &lt;td&gt;日、曜日だけで使えることで条件なしという意味&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;/&lt;/td&gt;        &lt;td&gt;サイクルの繰り返しの意味&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;-&lt;/td&gt;        &lt;td&gt;範囲の意味&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;l&lt;/td&gt;        &lt;td&gt;日、曜日だけで使えることで最後の日の意味&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;w&lt;/td&gt;        &lt;td&gt;日だけで使えることで指定された近い平日&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;#&lt;/td&gt;        &lt;td&gt;曜日だけで使えることで週#曜日という意味&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;ここまでjspのspring環境でschedulerのcronを使う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/186.html</guid><pubDate>Wed, 18 Mar 2020 00:24:32 +0900</pubDate></item><item><title>[Java] POIを利用してExcelを扱う方法</title><link>https://www.nowonbun.com/185.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでpoiを利用してexcelを扱う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;様々業務でexcelというプログラムはたくさん使います。どのぐらいかといえばexcelがなければ世界の電算システムは動かないほどです。それで様々ポータルシステムでexcelデータをダウンロードする機能は必須であります。&lt;/p&gt;&lt;p&gt;java環境でexcelを使うライブラリはpoiライブラリだといいます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;poiライブラリを使うためにはmavenのrepositoryでダウンロードして後、連携して使います。&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/org.apache.poi/poi&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/org.apache.poi/poi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml/&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=956&quot; data-filename=&quot;001.png&quot; style=&quot;width: 765px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=957&quot; data-filename=&quot;002.png&quot; style=&quot;width: 534px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はexcelを読み込んで修正します。&lt;/p&gt;&lt;p&gt;修正した内容をファイルに格納しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=958&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;添付ファイル - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=960&quot; data-filename=&quot;test.xls&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; test.xls&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=959&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;npoiみたいにエクセルファイルを読み込んでまた値を再設定することでグラフも自動に変わることを確認することができます。実際に業務でエクセルを一から作ることよりドキュメントテンプレートを作って値を再設定して木偶セルデータの数値などを変わる方法でよく使います。&lt;/p&gt;&lt;p&gt;そのほうがfontやスタイル設定することがしやすいです。そしてシステムのパフォーマンスでも改善することができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでpoiを利用してexcelを扱う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/185.html</guid><pubDate>Tue, 17 Mar 2020 01:49:27 +0900</pubDate></item><item><title>[Java] PDFを出力する方法(itextpdf)</title><link>https://www.nowonbun.com/184.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでpdfを出力する方法(itextpdf)に関する説明です。&lt;/p&gt;&lt;p&gt;ウェブサービスで、特にポータルサービスならデータの結果を出力するところならpdf出力が多いです。最近はほとんどpdfの出力なら標準でなっているほど多いです。&lt;/p&gt;&lt;p&gt;pdfで出力したら修正もできないし、イメージよりドキュメント形式になっているフォーマットになっているのでです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これをjava環境でpdfを作成して出力して使う方法に関して説明します。&lt;/p&gt;&lt;p&gt;java環境で使うためにmavenレポジトリを通ってitextpdf」と「xmlworker」をしなければならないです。&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/com.itextpdf/itextpdf/5.5.13.1&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/com.itextpdf/itextpdf/5.5.13.1&lt;/a&gt;&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/com.itextpdf.tool/xmlworker/5.5.13.1&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/com.itextpdf.tool/xmlworker/5.5.13.1&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=954&quot; data-filename=&quot;001.png&quot; style=&quot;width: 754px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単なpdfを出力するプログラムを作成しましょう。コンソールで実行するとpdfが生成するプログラムです。&lt;/p&gt;&lt;p&gt;ソースでcssファイルを二つ読み込みます。&lt;/p&gt;&lt;p&gt;上のcssファイルを下記のディレクトリに設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=953&quot; data-filename=&quot;002.png&quot; style=&quot;width: 283px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;設定は完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを実行して結果を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=955&quot; data-filename=&quot;003.png&quot; style=&quot;width: 499px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでpdfを出力する方法(itextpdf)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/184.html</guid><pubDate>Fri, 13 Mar 2020 01:06:27 +0900</pubDate></item><item><title>[Java] ログライブラリ(log4j)を使う方法</title><link>https://www.nowonbun.com/183.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaで使うログライブラリ(log4j)を使う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ログということはプログラム開発する時にデータ追跡や呼出されたクラスや関数、エラー確認などを調べるため使うライブラリです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;普通に開発する時にはideツールを利用してデバックすればデータ追跡ができますが、開発が終わってプログラムをコンパイルやビルドした後、productionにリリースになったらデータ追跡することはしやすくないです。&lt;/p&gt;&lt;p&gt;でも、完璧なプログラムなら問題ないですが、人間が作ったプログラムなのでバグが必ずあるし、そのバグによって間違い演算してエラーが発生します。エラーが発生する時にデータを追跡ができなければならないですが、それがログ機能によってデータを探せるのができます。&lt;/p&gt;&lt;p&gt;javaではログライブラリが様々がありますが、その中でlog4jが一番簡単だし、楽なライブラリだと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ログはただエラー追跡だけではなく、ユーザアクションパターンやシステムメモリパターンなどを追跡して様々に統計データを活用することができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaでlog4jを使うためにmavenレポジトリを通ってlog4jライブラリを連携しなければならないです。&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core/2.13.1&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core/2.13.1&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=951&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=948&quot; data-filename=&quot;002.png&quot; style=&quot;width: 709px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実際にプログラムの中で作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=949&quot; data-filename=&quot;003.png&quot; style=&quot;width: 608px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=950&quot; data-filename=&quot;004.png&quot; style=&quot;width: 519px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://logging.apache.org/log4j/2.0/manual/api.html&quot; target=&quot;_blank&quot;&gt;https://logging.apache.org/log4j/2.0/manual/api.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;log4jはconsoleやファイルログ以外にメール送信、データベース設定などがあります。設定によって追加することができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=952&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://logging.apache.org/log4net/release/manual/configuration.html&quot; target=&quot;_blank&quot;&gt;https://logging.apache.org/log4net/release/manual/configuration.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaで使うログライブラリ(log4j)を使う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/183.html</guid><pubDate>Thu, 12 Mar 2020 00:54:39 +0900</pubDate></item><item><title>[Java] Jsonタイプのデータを使う方法(Gsonライブラリ)</title><link>https://www.nowonbun.com/182.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでjsonタイプのデータを使う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;jsonデータは「キー:値」になっているデータオブジェクトで人間が読めるテキスト形式の開放型標準フォーマットということです。&lt;/p&gt;&lt;p&gt;javaでデータオブジェクトをjsonタイプに変換するためにはgoogleで提供するgsonのライブラリを使います。&lt;/p&gt;&lt;p&gt;まず、mavenでgsonを登録してライブラリを連結しましょう。&lt;/p&gt;&lt;p&gt;reference - &lt;a href=&quot;https://mvnrepository.com/artifact/com.google.code.gson/gson&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/com.google.code.gson/gson&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=943&quot; data-filename=&quot;001.png&quot; style=&quot;width: 621px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;maven repositoryに接続してgsonの最新maven情報を読み込みます。&lt;/p&gt;&lt;p&gt;私はeclipseを利用するのでeclipseのpom.xmlに登録します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=944&quot; data-filename=&quot;002.png&quot; style=&quot;width: 466px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=945&quot; data-filename=&quot;003.png&quot; style=&quot;width: 438px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;登録した後、maven updateをしてライブラリを連結します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=947&quot; data-filename=&quot;004.png&quot; style=&quot;width: 734px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてテストクラスを作成して試してみましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=946&quot; data-filename=&quot;005.png&quot; style=&quot;width: 287px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前にシリアライズに関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/177.html&quot; target=&quot;_blank&quot;&gt;[java] シリアライズ(直列化: serializable)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;シリアライズとかjsonタイプに変換するのはデータをstringタイプに変換することができることです。&lt;/p&gt;&lt;p&gt;結果は違いますが、仕様によって各良い点があるし悪い点があるでしょう。&lt;/p&gt;&lt;p&gt;シリアライズはクラスのインスタンスをバイナリ化することなので、見えない変数(private)までデータが変換します。でも人間が読みにくいデータ構造に変換します。&lt;/p&gt;&lt;p&gt;jsonの場合はプロパティがないデータ(getterがない変数)ならjsonタイプに変換することは限界があります。でも人間が読みやすいテキストテキストに変換します。意味はデータ構造の直接に修正ができることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プロジェクトの仕様によってシリアライズかjsonタイプかに選択して使いましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでjsonタイプのデータを使う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/182.html</guid><pubDate>Wed, 11 Mar 2020 00:30:15 +0900</pubDate></item><item><title>[CSS] 色スタイル、グラデーション</title><link>https://www.nowonbun.com/135.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssで色のスタイルは色名で設定することもできるし、rgb表現式で設定もできるし、hexの値で設定もできます。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;style&gt;/*色名設定*/.color-1{  color:blue;}/*rgb表現式*/.color-2{  /*赤、緑、青*/  color:rgb(255,0,0);}.color-3{  color: #008000;}&lt;/style&gt;&lt;div class=&quot;color-1&quot;&gt;color-1&lt;/div&gt;&lt;div class=&quot;color-2&quot;&gt;color-2&lt;/div&gt;&lt;div class=&quot;color-3&quot;&gt;color-3&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;色の参照は下記のurlで参考できます。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.w3schools.com/cssref/css_colors.asp&quot; target=&quot;_blank&quot;&gt;https://www.w3schools.com/cssref/css_colors.asp&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿では基本色設定ではなく、グラデーションに関して調べてみました。&lt;/p&gt;&lt;p&gt;初めのdivタグのlinear-gradientは線形のグラデーションです。パラメータはグラデーションの変換角度で180度で設定すれば水平で上から下の段階でシルバー色から紫色に変わると意味で色の設定です。&lt;/p&gt;&lt;p&gt;二つ目は上右から下左の角度ですが、角度では45度ですね。初めは赤色で、真中は白色、最後は青色に設定されます。&lt;/p&gt;&lt;p&gt;三つ目のradial-gradientは丸系のグラデーションです。パラメータはcircle設定ですが初めは真中から外側に黄色から緑色に設定することです。&lt;/p&gt;&lt;p&gt;四つ目は丸の設定ですが、丸のサイズが横50px、縦50pxです。「at」の後は丸の位置ですね。右から80px、上から30pxの中心であずき色、オリーブ色、アクア色順になります。&lt;/p&gt;&lt;p&gt;五つ目のネイビー色20%、teal色80%、水平(0deg,180deg)角度で繰り返いしてグラデーションになります。&lt;/p&gt;&lt;p&gt;六つ目の角度(-45deg = 315deg)で繰り返いして初め白色から白色まで5px、黒色5pxから黒色10pxまでグラデーションになります。&lt;/p&gt;&lt;p&gt;七つ目のrepeating-radial-gradientは繰り返し丸系のグラデーションです。&lt;/p&gt;&lt;p&gt;ここのキーワードは四つがありますが、closest-side、closest-corner、farthest-side、farthest-cornerがありますね。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;キーワード&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;closest-side&lt;/td&gt;        &lt;td&gt;グラデーションの終了形状は、その中心に最も近いボックスの側面（円の場合）または中心に最も近い垂直および水平の両方の辺（楕円の場合）に一致します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;closest-corner&lt;/td&gt;        &lt;td&gt;グラデーションの終了形状は、ボックスの中心から最も近い角に正確に合うようにサイズ設定されます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;farthest-side&lt;/td&gt;        &lt;td&gt;最も近い側に似ていますが、終了形状は、ボックスの中心から最も遠い側（または垂直および水平側）に合うサイズになっています。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;farthest-corner&lt;/td&gt;        &lt;td&gt;グラデーションの終了形状は、ボックスの中心から最も遠いコーナーに正確に合うようにサイズが設定されます。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;筆者の場合はclosest-sideの設定なので、丸が繰り返して広がるこです。グレー色0pxからライム色20pxほど丸ができます。&lt;/p&gt;&lt;p&gt;最後は透明色から白色5px,フクシア色5pxからフクシア色10pxにグラデーションすることです。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;height: 110px;&quot;&gt;&lt;style&gt;	div.exam{	  display:inline-block;  width:9%;	  height:100px;	  border:1px solid #000;	  float:left;	}	div.exam:nth-of-type(1){	  background:linear-gradient(180deg,silver,purple);	}	div.exam:nth-of-type(2){  background:linear-gradient(to top right,red 0%,white 50%,blue 100%);	}	div.exam:nth-of-type(3){	  background:radial-gradient(circle,yellow,green);	}	div.exam:nth-of-type(4){  background:radial-gradient(50px 50px at 80px 30px,maroon,olive,あ);	}	div.exam:nth-of-type(5){  background:repeating-linear-gradient(navy 20%,teal 80%);	}	div.exam:nth-of-type(6){  background:repeating-linear-gradient(-45deg,white, white 5px,black 5px,black 10px);	}	div.exam:nth-of-type(7){  background:repeating-radial-gradient(circle closest-side,gray 0px, lime 20px);	}	div.exam:nth-of-type(8){	  background:repeating-radial-gradient(circle,transparent, white 5px,fuchsia 5px,fuchsia 10px);	}	&lt;/style&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;div class=&quot;exam&quot;&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;グラデーションは様々ところでよく使う色ですが、たくさん使うとやはりコンテンツの集中度を落とす効果が発生します。&lt;/p&gt;&lt;p&gt;色やポイントを与える時、広告する時には良いと思います。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/135.html</guid><pubDate>Tue, 10 Mar 2020 23:27:05 +0900</pubDate></item><item><title>[Java] cmdコマンドを実行するための方法</title><link>https://www.nowonbun.com/180.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjava環境でcmdコマンドを実行するための方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを作成する時にウェブアプリケーションや一般アプリケーションでほかのプログラムを実行するとか内部サーバをコントロールする時にあります。&lt;/p&gt;&lt;p&gt;例えば、jankinsの場合、ウェブ環境でgitやsvnのコマンドを操作するとかシェルコマンドでウェブ環境でサーバをコントロールするようなプログラムです。&lt;/p&gt;&lt;p&gt;このようにプログラムを通ってシェルコマンドを使う場合がありますが、その時に使うことができるソースコードです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=939&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の結果画面をみればコンソールに「cd」のコマンドと「dir」のコマンドを実行して結果を出力する結果のイメージです。最後に「exit」コマンドを実行してプログラムを終了します。&lt;/p&gt;&lt;p&gt;eclipse環境で文字化けがありますが、単純にeclipseのエンコーディング問題です。実際に変数をデバッグでみれば日本語が入力されています。それでも文字化けの問題が解決できなければinputstreamreaderにエンコーディングタイプを入れたら解決なります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjava環境でcmdコマンドを実行するための方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/180.html</guid><pubDate>Fri, 6 Mar 2020 18:01:10 +0900</pubDate></item><item><title>[Java] メール(javax.mail)を発送する方法</title><link>https://www.nowonbun.com/179.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでメール(javax.mail)を発送する方法に関する説明です。&lt;/p&gt;&lt;p&gt;プログラム上で我々がメール発送することは様々のところで使えることができます。会員登録する時に登録認証やパスワード探すことなどがあるし、システム上で様々なアラームメッセージをメール発送することもできます。&lt;/p&gt;&lt;p&gt;最近はsnsがたくさんあるのでsnsでメッセージを発送する方法もよく使いますが、それでもまだ、メール発送機能はなくならないでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私はgoogle mail(gmail)を通ってメールを発送する例です。&lt;/p&gt;&lt;p&gt;google mail - &lt;a href=&quot;https://support.google.com/a/answer/176600?hl=ja&quot; target=&quot;_blank&quot;&gt;https://support.google.com/a/answer/176600?hl=ja&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先にクロームに接続して右上のアカウント管理に行きましょう。(ログインができなかった状況なら先にログインしてから。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=933&quot; data-filename=&quot;001.png&quot; style=&quot;width: 346px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アカウント管理に移動して安全性の低いアプリのアクセスのタブに移動します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=935&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;安全性の低いアプリの許可を有効にします。&lt;/p&gt;&lt;p&gt;このチェックをしないと外部からグーグルメールを使用できないようにすることです。なので、idやpwの漏れがなければそんなに問題はありません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=936&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaでメールを発送するソースを作成するためにpom.xmlでメールライブラリを登録しなければならないです。&lt;/p&gt;&lt;p&gt;レポジトリ - &lt;a href=&quot;https://mvnrepository.com/artifact/javax.mail/mail&quot; target=&quot;_blank&quot;&gt;https://mvnrepository.com/artifact/javax.mail/mail&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=934&quot; data-filename=&quot;004.png&quot; style=&quot;width: 581px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;メール発送はconsoleに作成しても問題ないので、consoleで作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=937&quot; data-filename=&quot;005.png&quot; style=&quot;width: 836px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私がsessionのデバックモードに設定しましたのでメールサーバと送受信されるメッセージの状態が表示されます。もし、プロトコールで追加する内容があればこのログを見て追加すればよいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;メールを発送しましたので、自分のメールトレイにメールがあるかどうか確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=938&quot; data-filename=&quot;006.png&quot; style=&quot;width: 707px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;メールの送信がよくできました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでメール(javax.mail)を発送する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/179.html</guid><pubDate>Thu, 5 Mar 2020 20:07:49 +0900</pubDate></item><item><title>[Java] クラス複製(Clonable, Reflection)</title><link>https://www.nowonbun.com/178.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでクラス複製(clonable, reflection)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラス複製はプリミティブデータみたいにイコール記号(=)で簡単にデータを複製することができません。&lt;/p&gt;&lt;p&gt;クラスにはスタック値とヒープメモリがあります。クラスはヒープで割当て(インスタンス宣言)して、スタック値にポインタ参照を繋がれています。&lt;/p&gt;&lt;p&gt;ただ、イコール(=)でコピーするのはクラス複製じゃなくスタック値、つまり参照値をコピーすることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=932&quot; data-filename=&quot;001.png&quot; style=&quot;width: 272px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみればnodeクラスをa変数に割当しました。node b変数にイコールでデータをコピーしました。&lt;/p&gt;&lt;p&gt;b変数に「10」のデータを格納しましたが、a変数のデータも「10」に代わりました。&lt;/p&gt;&lt;p&gt;ここでハッシュコードをみれば同じデータに出力します。&lt;/p&gt;&lt;p&gt;つまり「node b = a」でクラスが新しく割当したことじゃなく、参照値(スタック値)だけコピーして結局、同じクラスを指すものになってしまいました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々が必要なことはクラスの複製です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=930&quot; data-filename=&quot;002.png&quot; style=&quot;width: 280px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、確かに「a」の変数と「b」の変数に各クラスが割当しています。&lt;/p&gt;&lt;p&gt;b変数にデータを格納してもa変数に影響がありません。ハッシュコードも別の値を出力するので確かに別のクラスです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の方法がjavaで一般的なクラスコピーです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でもすべてのクラスが「cloneable」を継承しているなら問題ないですが、実際には継承してないクラスもたくさんあります。&lt;/p&gt;&lt;p&gt;そのクラスはどのようにクラスを複製しましょうか。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=931&quot; data-filename=&quot;003.png&quot; style=&quot;width: 185px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はクラス複製関数を作成してコピーしました。クラスの場合は一般クラスで「cloneable」を継承してないです。&lt;/p&gt;&lt;p&gt;clone関数でクラスを新しくクラスを割当てしてメンバ変数をすべてコピーします。そのためクラス複製効果になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合はクラスの修正ができない状況かつ継承もできない状況では上の方法でクラス複製をよくします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでクラス複製(clonable, reflection)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/178.html</guid><pubDate>Thu, 5 Mar 2020 00:03:19 +0900</pubDate></item><item><title>[Java] シリアライズ(直列化: Serializable)</title><link>https://www.nowonbun.com/177.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのシリアライズ(直列化: serializable)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;シリアライズとは割当てしたクラス(インスタンス)をバイナリ化することをシリアライズ(直列化: serializable)といいます。&lt;/p&gt;&lt;p&gt;クラスのメモリ割当てはクラス内部のメンバー変数で構成しています。(関数の場合はメモリに割当てないです。)メンバー変数はプリミティブタイプやクラスになっています。&lt;/p&gt;&lt;p&gt;すなわち、クラスのデータをファイルやソケット通信で転送するためにはbyteタイプに変換しなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その方法でjsonタイプに変換してクラスのデータをstringタイプに変換してバイナリ化する方法もあります。&lt;/p&gt;&lt;p&gt;実際に、最近、その方法でよく使います。でも、クラスをjsonタイプに変換するのは限界があるし、クラス内部の見えないデータ(private)まで完全に変換されたとは言えません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それでこのシリアライズ機能を使ってクラスをバイナリ化するとクラスをデータを完全にbyteタイプに変換するのでよいでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、シリアライズよりjsonをよく使うのは下記とおりの理由があります。&lt;/p&gt;&lt;p&gt;1.シリアライズでバイナリ化になったデータは人間がそのままに見て理解しにくい構造になっています。つまり、逆シリアライズする前にはデータが正しいかの検証ができません。&lt;/p&gt;&lt;p&gt;でも、jsonタイプになったデータは人間が見やすいし、プログラムを利用せずに修正も簡単です。逆にそれがjsonよりいいことがセキュリティにはよいでしょう。&lt;/p&gt;&lt;p&gt;2.プラットフォームの制約があります。java言語でシリアライズしたデータはc#やpythonなどで逆シリアライズができません。&lt;/p&gt;&lt;p&gt;正確には出来ないことではないですが、データ漏れが発生します。&lt;/p&gt;&lt;p&gt;3.クラス修正があれば、以前シリアライズしたデータを逆シリアライズする時にデータ漏れが発生する可能性があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;シリアライズの利点はセキュリティがよいし、クラス自体をバイナリするため、クラス状態をログにして把握することでよいでしょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=927&quot; data-filename=&quot;001.png&quot; style=&quot;width: 644px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例は「node」クラスを割当てしてバイナリ化(byte[])にしてファイルに格納しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=928&quot; data-filename=&quot;002.png&quot; style=&quot;width: 705px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;格納したデータをまた読み込んでクラスに変換しました。jsonで一々にデータをstringタイプに変換することよりシリアライズ変換が簡単です。&lt;/p&gt;&lt;p&gt;上をみればシリアライズされたデータは構造把握が難しいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaでシリアライズされたことをc#で逆シリアライズしてみます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=929&quot; data-filename=&quot;003.png&quot; style=&quot;width: 793px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラス構造を「string data1」と「int data2」を作りましたが、データタイプが違うというエラーが発生します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのシリアライズ(直列化: serializable)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/177.html</guid><pubDate>Tue, 3 Mar 2020 00:03:33 +0900</pubDate></item><item><title>[Java] StringBuilderとStringBufferの差異</title><link>https://www.nowonbun.com/176.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのstringbuilderとstringbufferの差異に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaの中で文字列タイプのデータタイプは「string」があります。&lt;/p&gt;&lt;p&gt;「string」はプリミティブデータタイプ(primitive data type: int, char, double...)じゃなく、objectクラスから継承されたクラスタイプです。&lt;/p&gt;&lt;p&gt;すなわち、「string」の内部はbyte(unsigned char)タイプになっています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで我々が「string data1 = &quot;abc&quot;;」ということに宣言すれば内部は「byte[] data1 = new byte[] {&apos;a&apos;, &apos;b&apos;, &apos;c&apos;}」になります。&lt;/p&gt;&lt;p&gt;そのため、「string」タイプと「string」タイプの文字列を合わせると思えば、下記の処理になります。&lt;/p&gt;&lt;p&gt;stringで文字列を合併すれば上のフローとおりに文字列が合併されます。&lt;/p&gt;&lt;p&gt;つまりstringにstringを合併すれば新しいstringが割当します。&lt;/p&gt;&lt;p&gt;それなら「string test = &quot;abc&quot; + &quot;def&quot; + &quot;ghi&quot; + &quot;jkl&quot;;」は合併フローがすごく複雑になります。&lt;/p&gt;&lt;p&gt;そのため、stringとstringを合併することはパーフォーマンスに影響があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすれば上のarrayタイプじゃなく、連結リストタイプ(list)みたいに文字列を「add」関数で追加する方法がないかと疑問になります。&lt;/p&gt;&lt;p&gt;それがarrayタイプじゃなく、listタイプで文字列を合併するのが「stringbuffer」と「stringbuilder」です。&lt;/p&gt;&lt;p&gt;上の例だけでみれば差異がそんなになさそうです。&lt;/p&gt;&lt;p&gt;でも文字列の合併が多いほどパーフォーマンスの差異は確かに出ると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それなら「stringbuffer」と「stringbuilder」の差異はなにでしょうか。&lt;/p&gt;&lt;p&gt;同期化の差異です。stringbufferの場合はクラス内部で同期化しますが、stringbuilderの場合は同期化がありません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=926&quot; data-filename=&quot;001.png&quot; style=&quot;width: 362px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;初めのスレッドで10個、２つ目のスレッドで10個を入れたので全ての文字桁数は20個になるはずです。&lt;/p&gt;&lt;p&gt;結果はstringbuilderには20桁数にならないです。stringbufferの場合はマルチスレッド環境でも20桁数になります。&lt;/p&gt;&lt;p&gt;理由はstringbufferの場合は同期化(lock)機能が内部で動くのでその結果になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすればstringbuilderは使わず、stringbufferだけ使った方がいいと思われます。&lt;/p&gt;&lt;p&gt;上の結果はでません。&lt;/p&gt;&lt;p&gt;なぜならstringbufferの「lock」の機能でデッドロック(deadlock)に落ちてしまいました。&lt;/p&gt;&lt;p&gt;一番目のスレッドにはbuffer1にlockをかけてbuffer1にデータを入れようと思います。同じlockの領域なのでbuffer1.appendにはデッドロック(deadlock)に落ちてしません。&lt;/p&gt;&lt;p&gt;でも２番目のスレッドでbuffer1.appendの内部でlockを使うのでスレッド領域が違うスレッド1とスレッド2がお互い影響でデッドロックに落ちてしまう可能性が高いです。&lt;/p&gt;&lt;p&gt;実際に私もデッドロックに落ちてしまって実行中でプロセスが凍ってしまいました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;なのでマルチスレッド環境で基本的にstringbufferを使う方がデータ同期化のために良いですが、仕様によってlockがあればstringbuilderが良い時もあります。&lt;/p&gt;&lt;p&gt;stringbuilderとstringbufferは機能が似てますが、仕様によって使う方法は違います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿のポイントは&lt;b&gt;「stringbuilder」は「同期化機能がない」、「stringbuffer」は「同期化機能があり」&lt;/b&gt;ということです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのstringbuilderとstringbufferの差異に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/176.html</guid><pubDate>Mon, 2 Mar 2020 07:52:22 +0900</pubDate></item><item><title>[Java] Compare関数を使う方法</title><link>https://www.nowonbun.com/175.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaでcompare関数を使う方法に関する説明です。&lt;/p&gt;&lt;p&gt;javaで値を比較する関数で「equals」関数があります。このequals関数はobjectタイプにあり、全てのデータタイプで使うことができる関数です。&lt;/p&gt;&lt;p&gt;でもequals関数はただデータ値が同じか同じじゃないかと判断だけできるし、比較データがどっちがもっと大きいかは知ることができません。&lt;/p&gt;&lt;p&gt;もちろんif関数で「if (a &amp;gt; b) else if (a &amp;lt; b) else」でチェックしてもいいですが、少し品格があるように実装することはcompare関数を利用することがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=924&quot; data-filename=&quot;001.png&quot; style=&quot;width: 456px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;integerタイプでcompare関数のパラメータ基準で初めのパラメータをa、２つ目のパラメータをbと考えましょう。&lt;/p&gt;&lt;p&gt;aがbより小さいなら「-1」、同じなら「0」、大きいなら「1」の結果が出ます。つまり&amp;lt;=&amp;gt;順で-1,0,1の結果です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;integerではなくdateタイプで比較しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=925&quot; data-filename=&quot;002.png&quot; style=&quot;width: 543px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;dateタイプもクラスにcompare関数がありますが、今回はインスタンスから比較するcompareto関数を使用しました。&lt;/p&gt;&lt;p&gt;comparetoの場合は、インスタンス変数がa、パラメータデータがbと考えましょう。&lt;/p&gt;&lt;p&gt;aがbより前日なら「-1」、同日なら「0」、後日なら「1」の結果が出ます。つまり&amp;lt;=&amp;gt;順で-1,0,1の結果です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;compare関数は比較対象が比較値に比べてデータが小さいなら「-1」、同じなら「0」、大きいなら「1」の結果が出ます。つまり&amp;lt;=&amp;gt;順で-1,0,1の結果です。&lt;/p&gt;&lt;p&gt;このパターンをよく覚えばソート式や様々なアルゴリズムを組み立てる時、ソースが簡単に実装することができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaでcompare関数を使う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/175.html</guid><pubDate>Sat, 29 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[Java] 数字フォーマット(お金表示及び小数点以下表示)</title><link>https://www.nowonbun.com/174.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaで数字フォーマット(お金表示及び小数点以下表示)に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラム内で数字を扱う時にお金表示、つまり千単位でコンマがある表示を設定することが必要な時があります。&lt;/p&gt;&lt;p&gt;お金の場合は「0」が多い数字値だし、コンマ(,)表示がなければ迷う単位が多いからよく使うフォーマット変換だと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaは「int」や「double」、「float」タイプを「string」タイプに変換する時には「decimalformat」クラスを利用します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=921&quot; data-filename=&quot;001.png&quot; style=&quot;width: 490px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例で「#」はあれば表示するし、なければ表示しないことだし、「0」はなかったらデフォルトで「0」を表示するということでフォーマット設定になります。&lt;/p&gt;&lt;p&gt;そうすれば、上は小数点2桁までの設定でしだが、3桁になるとどうなるでしょうか？&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=922&quot; data-filename=&quot;002.png&quot; style=&quot;width: 473px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;四捨五入になって「0.127」から「0.13」になりました。&lt;/p&gt;&lt;p&gt;でも、状況によって四捨五入じゃなく、切り捨てする時もあります。その時にはフォーマットだけじゃなく、mathクラスを利用して計算するか、bigdecimalタイプに変換して切り捨て関数で計算するかの方法があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=923&quot; data-filename=&quot;003.png&quot; style=&quot;width: 444px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;個人的にbigdecimalを使うとメモリ使用がありますが、math.floorの場合はoverflowエラー可能性があるので、bigdecimalタイプに変換して切り捨てする方が良いと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaで数字フォーマット(お金表示及び小数点以下表示)に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/174.html</guid><pubDate>Fri, 28 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[Java] サーブレット環境で現在の実行ディレクトリを取得する方法</title><link>https://www.nowonbun.com/173.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのサーブレット環境で現在の実行ディレクトリを取得する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを作成する時に現在のディレクトリを知る時があります。特にeclipse環境で実行する時にはコンパイルして実行させる場所 を探しにくいので開発する時に困る時があります。&lt;/p&gt;&lt;p&gt;例えば、環境ファイルを読み込む時やプロジェクト仕様として各種ファイルやテンプレートを読み込む時に必要です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その時にローカルディレクトリを探す方法は２つあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実行しているクラスのファイルの場所で探す方法です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=919&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;threadクラスで現在に動いているスレッドのクラスの場所を探すと現在の実行パスを探すのが出来ます。&lt;/p&gt;&lt;p&gt;上の関数の処理では問題ないですが、lambda式やマルチスレッドなどで呼出すと結果が可笑しくなる可能性があります。その時に「thread.currentthread().getcontextclassloader()」ではなく、「this.getclass().getclassloader()」を呼出して取得ができます。&lt;/p&gt;&lt;p&gt;でも全てloaderを通って取得するから、マルチスレッドなら正確に取得出来ない可能性はあります。(可能性といってもすごく低いです。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々はサーブレットを作っているのでサーブレットのcontextを利用して取得する方法もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=920&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の場合はcontextインスタンスから取得するものなので、マルチスレッドやlambda式で間違って取得する問題はありません。&lt;/p&gt;&lt;p&gt;でも、サーブレットクラス(httpservletを継承したクラス)だけ取得ができることなので一般クラスで現在パスを取得するようには上のloaderを通って取得する方法しかないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合はwebserverを起動する時にインスタンス初期化する方法で「static」タイプの変数に実行パスを格納して使うことでよく使います。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/92.html&quot; target=&quot;_blank&quot;&gt;[java] java servletでインスタンスを初期する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのサーブレット環境で現在の実行ディレクトリを取得する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/173.html</guid><pubDate>Thu, 27 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[Java] 日本語をユニコードに変換して、ユニコードから日本語に変換する方法</title><link>https://www.nowonbun.com/172.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaで日本語をユニコードに変換して、ユニコードから日本語に変換する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaのプロパティや様々の設定ファイル、htmlのjsonコードなどで「\uxxxx」の形のコードを使う時があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=916&quot; data-filename=&quot;001.png&quot; style=&quot;width: 671px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「\uxxxx」はユニコードですが、英語や数字、つまりasciiコードの以外はユニコードで表示することです。グーグルで検索してユニコードをエンコードまたはデコードするライブラリやソースがありません。&lt;/p&gt;&lt;p&gt;私の検索能力が悪い可能性もありますが、一応私の場合はありませんでした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先はこのユニコードに関して確認しましょう。&lt;/p&gt;&lt;p&gt;英語とasciiコードは変換なしでそのまま表示されます。日本語になっている部分は「\u」が付けていて4文字の16進数コードになりました。&lt;/p&gt;&lt;p&gt;6^4+16^3+16^2+16^1の組み立てです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=917&quot; data-filename=&quot;002.png&quot; style=&quot;width: 430px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ユニコードが日本語に変換されてコンソールに表示しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、これをユニコードに変換する関数を作成しましょう。実は私が必要な関数はユニコード変換する関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=918&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最初、日本語に変換する前のユニコードと同じ結果になりました。eclipseのpropertiesファイルで自動変換する値が出ました。大文字、小文字の差異はありますが、フォーマットは「%04x」から「%04x」にかわれば大文字に変わります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaで日本語をユニコードに変換して、ユニコードから日本語に変換する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/172.html</guid><pubDate>Wed, 26 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[Java] コンソールからデータを受け取る方法(System.in)</title><link>https://www.nowonbun.com/171.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのコンソール環境でユーザからデータを入力させる方法に関する説明です。&lt;/p&gt;&lt;p&gt;javaのプログラミングをすると「system.out.println」関数をよく使います。「system.out.println」関数はデータをコンソールに表示する関数です。&lt;/p&gt;&lt;p&gt;eclipse(ide)の開発環境では「sysout」だけ入力しても自動変換(intellisense)機能で自動に変換されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;逆に「system.in」という関数は無いかと思ったら、逆にコンソールからデータを入力するスキャン関数であります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=914&quot; data-filename=&quot;001.png&quot; style=&quot;width: 207px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例をみればコンソールから「test」という値を受け取って、出力しました。&lt;/p&gt;&lt;p&gt;上のとおりに作成しても問題ないですが、バッファを設定することが気になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=915&quot; data-filename=&quot;002.png&quot; style=&quot;width: 207px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果は同じですが、コネクションがあるので、リソース管理がしやすいです。(コンソールもioなので結局リソースです。)&lt;/p&gt;&lt;p&gt;try ~　catchもなくなるし、バッファ設定がないので、コードがシンプルになりました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのコンソール環境でユーザからデータを入力させる方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/171.html</guid><pubDate>Tue, 25 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[Java] Servlet環境でWebSocket通信中、HttpSessionを取得する方法</title><link>https://www.nowonbun.com/170.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのservlet環境でwebsocket通信中、httpsessionを取得する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前の投稿でwebsocketに関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/168.html&quot; target=&quot;_blank&quot;&gt;[java] websocket (ウェブソケット)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/169.html&quot; target=&quot;_blank&quot;&gt;[java] websocketでweb sessionを使う方法(broadcast)とウェブチャットの例&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocketとは初め接続することはhttpプロトコルでhandshake処理をしてヘッダでwebsocketなら接続を続けて保持することになるし、一般http要請なら応答して接続を切断します。&lt;/p&gt;&lt;p&gt;websocketの要請は初め要請以外には続けて接続しているので、ソケットでメッセージを送受信するため、httpクッキー情報を貰うタイミングがありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;なので、初め接続する際にwebsocket sessionをキーにしてセッションオブジェクトを管理するリストにweb sessionを格納します。その後、メッセージを受信する時に「@onmessage」関数が呼ばれたらwebsocket sessionでリストからsessionを取得して使ったらよいでしょう。&lt;/p&gt;&lt;p&gt;websocket serverクラスを作成しましょう。&lt;/p&gt;&lt;p&gt;websocketを接続するようなhtmlドキュメントを作成しましょう。&lt;/p&gt;&lt;p&gt;webserverにセッションをテストするために、セッションにデータを格納するサーブレットとクリアするサーブレットを作成しましょう。&lt;/p&gt;&lt;p&gt;上のwebsocket serverでwebsessionを「testsession」キーで取得しましたので、格納する時に「testsession」キーで格納しました。&lt;/p&gt;&lt;p&gt;次はsessionをクリアするサーブレットを作成しましょう。&lt;/p&gt;&lt;p&gt;ここまでwebsocket serverからwebsessionを取得する部分とテストするためのサーブレットまで作成しました。&lt;/p&gt;&lt;p&gt;ブラウザもwebsocket serverに接続する前にはhttpプロトコールで要請します。その時、webページ要請かwebsocket接続かの判断することがhandshakeです。&lt;/p&gt;&lt;p&gt;なので、初めのhttpのプロトコールで要請する時に、サーブレットからrequestインスタンスをもらえるし、クッキーからセッションキーも取得ができるのでセッションの値の取得が可能です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocket serverにはhandshakeは最初に接続する時だけ行われることなので、websocket sessionをキーにしてマップにwebsessionインスタンスとcontextインスタンスを格納しました。&lt;/p&gt;&lt;p&gt;そうすると、ブラウザからメッセージか来る時たびに接続ユーザのwebsessionのインスタンスを取得できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=909&quot; data-filename=&quot;001.png&quot; style=&quot;width: 820px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;index.jspを接続しました。&lt;/p&gt;&lt;p&gt;index.jspにはwebsocketでwebsocket serverに接続します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=911&quot; data-filename=&quot;002.png&quot; style=&quot;width: 776px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;他のタブに「sessionin」サーブレットを要請して「param」データを「test okok!!!」というデータを送ります。&lt;/p&gt;&lt;p&gt;そうするとセッションに「testsession」キーで「test okok!!!」というデータが格納するでしょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=912&quot; data-filename=&quot;003.png&quot; style=&quot;width: 783px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;index.jspページに戻ってきて「send」ボタンを押下しました。&lt;/p&gt;&lt;p&gt;そうするとwebsocket serverはセッションに格納された「testsession」キーでデータをクライアントに送ります。上のイメージをみればサーバからデータを受信したことを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=913&quot; data-filename=&quot;004.png&quot; style=&quot;width: 807px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は「sessionout」サーブレットを要請してセッションをクリアしました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=910&quot; data-filename=&quot;005.png&quot; style=&quot;width: 781px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、index.jspページに戻って来て「send」ボタンを押下するとセッションが初期化されたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://stackoverflow.com/questions/17936440/accessing-httpsession-from-httpservletrequest-in-a-web-socket-serverendpoint&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/17936440/accessing-httpsession-from-httpservletrequest-in-a-web-socket-serverendpoint&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのservlet環境でwebsocket通信中、httpsessionを取得する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/170.html</guid><pubDate>Mon, 24 Feb 2020 07:47:20 +0900</pubDate></item><item><title>[Java] WebSocketでWeb Sessionを使う方法(Broadcast)とウェブチャットの例</title><link>https://www.nowonbun.com/169.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はwebsocketでweb sessionを使う方法(broadcast)とウェブチャットの例に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前の投稿でwebsocketを設定してブラウザから接続、メッセージを送信、受信、切断まで説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/168.html&quot; target=&quot;_blank&quot;&gt;[java] websocket (ウェブソケット)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;csプログラムでソケット通信すると思えば、サーバソケットで接続するとクライアントソケットを受け取ってリストで管理します。&lt;/p&gt;&lt;p&gt;それでサーバからクライアントに一括送信するものがあればリストからクライアントコネクションを受け取って繰り返してメッセージを送信します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocketにはsessionというリソースがあります。&lt;/p&gt;&lt;p&gt;このsessionはwebsession(サーバにクライアント別に情報を格納するリソース)とは違います。ただソケットのコネクションのリソースです。csプログラムだとclientsocketと同じ意味のインスタンスです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=905&quot; data-filename=&quot;001.png&quot; style=&quot;width: 308px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;基本的に以前websocketに説明した構造と同じです。今回は各リスナーからパラメータを「session」を受け取ります。&lt;/p&gt;&lt;p&gt;「session」データはソケット通信だと「socket」クラスと同じです。サーバとクライアント(ブラウザ)間にコネクション情報があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;messageを受け取る時に呼ばれる関数でメッセージを分析する流れがあります。&lt;/p&gt;&lt;p&gt;私が各セッションの区分のため、メッセージを「{{ユーザ名}}メッセージ」の形式でサーバにメッセージを送りました。それをユーザ名とメッセージ内容を分離する作業です。&lt;/p&gt;&lt;p&gt;セッションリストからセッションを受け取ってメッセージを送る時にメッセージを送ったセッションは抜いてメッセージを転送します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=906&quot; data-filename=&quot;002.png&quot; style=&quot;width: 308px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocketサーバにメッセージを転送する時に形式を「{{ユーザ名}}メッセージ」形で組み立てして送りました。　それをサーバ側からユーザ名とメッセージ内容を分離して区分することです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから起動しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=907&quot; data-filename=&quot;003.png&quot; style=&quot;width: 525px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;起動した後、私が各３つのブラウザを開いて接続しました。ユーザ名は各「test1」、「test2」、「test3」で決めてメッセージを送りました。&lt;/p&gt;&lt;p&gt;「test1」から送ったメッセージが「test2」、「test3」にも見えます。このようにウェブチャットプログラムが実装されました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=908&quot; data-filename=&quot;004.png&quot; style=&quot;width: 561px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;サーバ側のコンソールログはクライアント３つが接続して各メッセージを送ったことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでwebsocketでweb sessionを使う方法(broadcast)とウェブチャットの例に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/169.html</guid><pubDate>Sat, 22 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[Java] WebSocket (ウェブソケット)</title><link>https://www.nowonbun.com/168.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はjavaのservlet環境でwebsocketを使う方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;普通のweb環境はクライアントからwebサーバーにhtmlドキュメントを要請するとwebサーバは要請されたhtmlドキュメントを作成してクライアントに応答して後接続を切断する非同期ソケット通信です。&lt;/p&gt;&lt;p&gt;websocketとはクライアントの要請してwebサーバが応答した後、接続を切断することじゃなく、connectionをそのまま保持してクライアントの要請がなくてもデータを転送することが可能なプロトコールです。&lt;/p&gt;&lt;p&gt;例えば、チャット機能を考えば、ユーザがチャット内容を書いてサーバに転送することがあります。それはサーバにクライアントから要請することです。&lt;/p&gt;&lt;p&gt;でも、他のユーザがチャット内容を書いてサーバに転送すれば私の場合はサーバからデータを取得しなければならないです。&lt;/p&gt;&lt;p&gt;その場合はユーザから要請がなくてもサーバからクライアントにデータを転送する流れですが、既存のwebプロトコールで接続が切断する状況には転送することができないでしょう。&lt;/p&gt;&lt;p&gt;websocketの場合は接続が切断している状況じゃないので、サーバからクライアントにメッセージを転送することができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参考に既存の方法でも出来ないことじゃないです。ajax(webプロトコール)で5秒や10秒単位でメッセージ確認を要請すると可能です。&lt;/p&gt;&lt;p&gt;でも、頻繁な要請でwebサーバが負荷になる可能性もあるでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocketはhtml5から標準になりました。プロトコール要請は「ws://~」で始まります。webプロトコールの場合は「http://~」で始まります。&lt;/p&gt;&lt;p&gt;sslセキュリティタイプの場合は「wss://~」になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前にjava環境でサーブレットを構築する方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/74.html&quot; target=&quot;_blank&quot;&gt;[java] web serviceプログラムのservletを作成方法(eclipse)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;web servlet環境でクラスを生成してwebsocket serverを実装しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=903&quot; data-filename=&quot;001.png&quot; style=&quot;width: 302px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocketは別に複雑ではなく簡単に実装ができます。別にソケットサーバやプロトコール宣言なども必要ないです。&lt;/p&gt;&lt;p&gt;ただwebsocket ホスト設定のアノテーションとwebsocketとクライアント間のイベントをアノテーションで設定可能です。&lt;/p&gt;&lt;p&gt;関数名は任意で作成してもよいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocketに接続するために、jspファイルにjavascriptを実装しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=904&quot; data-filename=&quot;002.png&quot; style=&quot;width: 303px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;websocketというjavascript内部関数で宣言します。パラメータはwebsocketのアドレスを入力します。プロトコールは「ws://~」で始まります。&lt;/p&gt;&lt;p&gt;クライアントのリスナー関数は「onopen」、「onmessgae」、「onclose」、「onerror」があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「onopen」はwebsocketのサーバと接続する時に呼ばれます。「onmessage」はサーバからメッセージが受取る時に呼ばれます。&lt;/p&gt;&lt;p&gt;「onclose」はwebsocketのサーバと連結が切断する時に呼ばれます。「onerror」はエラーが発生する時に呼ばれます。&lt;/p&gt;&lt;p&gt;サーバを起動してブラウザで接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=902&quot; data-filename=&quot;003.png&quot; style=&quot;width: 398px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;接続すると「server connect...」メッセージが表示されます。&lt;/p&gt;&lt;p&gt;メッセージで「hello world」を送信しました。結果はサーバからエコメッセージで返事がきました。&lt;/p&gt;&lt;p&gt;最終にwebsocketの切断しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=901&quot; data-filename=&quot;004.png&quot; style=&quot;width: 356px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;サーバ側のログをみれば接続したログがあります。クライアントから「hello world」メッセージを受け取ってエコメッセージに返事しました。&lt;/p&gt;&lt;p&gt;最後、websocketの切断ログもあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでjavaのservlet環境でwebsocketを使う方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/168.html</guid><pubDate>Fri, 21 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[CakePHP] Errorページを設定する方法</title><link>https://www.nowonbun.com/167.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのcakeフレームワークでerrorページを設定する方法に関する説明です。&lt;/p&gt;&lt;p&gt;cakephpでデバッグモードでエラーが発生すると下記とおりのエラーページが表示されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=893&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の画面はphpで開発する時にエラー追跡するためのstack flowです。すごく有用な情報です。でも、我々が開発が終わった後、本番サーバーに転換する場合にエラーが発生する時、stack flow情報が表示されると困ります。&lt;/p&gt;&lt;p&gt;一応、ソースの内容がユーザに見えることになるし、ユーザの立場でエラーページが表示されることはサイトの信頼度を落ちることになるでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのため、本番サーバーではエラーが発生すれば、エラーページに遷移しなければならないです。&lt;/p&gt;&lt;p&gt;そうしたらconfigフォルダのapp.phpファイルを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=895&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;デバッグ設定するオプションがあります。初期設定は「true」になっていますが、「false」に設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=894&quot; data-filename=&quot;003.png&quot; style=&quot;width: 764px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、エラーページを見ると上のページが表示されます。(エラーページを表示するためにはソース上でthrowをするか、要請エラーが発生するページを要請すればよいです。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうするとエラーページを作成しましょう。&lt;/p&gt;&lt;p&gt;先にviewフォルダのappview.phpのソースから修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=896&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この部分を以前smarty設定する時に説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/159.html&quot; target=&quot;_blank&quot;&gt;[cakephp] mvcフレームワークのcakeをインストールする方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;上のソースをみれば、debugモードじゃない場合、エラーが発生すると「error」ページが表示するように設定しました。&lt;/p&gt;&lt;p&gt;「error」ページは各エラータイプ別で設定することも可能ですが、普通は一つのエラーページに統一します。それで我々は「error」ページだけ修正して派生ページは無視しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=900&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;既存のデフォルトで様々の文法が書いていますね。綺麗にクリアしてエラーページを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=897&quot; data-filename=&quot;006.png&quot; style=&quot;width: 404px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;appview.phpのコードで応答コードの値を「errormessage」キーとしてテンプレートページに渡しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=899&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、エラーを発生させてエラーページが正しく表示することを確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=898&quot; data-filename=&quot;008.png&quot; style=&quot;width: 597px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのcakeフレームワークでerrorページを設定する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/167.html</guid><pubDate>Thu, 20 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[CakePHP] Transactionを使う方法とEntityクラスを利用してInsert、Update、Deleteする方法</title><link>https://www.nowonbun.com/166.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのcakeフレームワークでtransactionを使う方法とentityクラスを利用してinsert、update、deleteする方法に関する説明です。&lt;/p&gt;&lt;p&gt;以前、cakephpのフレームワークを利用せずに、データベースにinsertやupdate、deleteに関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/163.html&quot; target=&quot;_blank&quot;&gt;[cakephp] データベース(mariadb(mysql))を接続する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、我々はデータ無欠性のため、トランザクションを使うし、fetch機能でオブジェクト単位でデータを追加する方法で実装しなければならないです。&lt;/p&gt;&lt;p&gt;テーブルの例は以前の投稿を続けて利用します。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/165.html&quot; target=&quot;_blank&quot;&gt;[cakephp] ormのテーブルfetch設定&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;userテーブルでデータを入力する後、派生テーブルのinfoテーブルのデータを入力します。そしてinfo2テーブルのデータを入力することで考えましょう。&lt;/p&gt;&lt;p&gt;userテーブルのキーとinfoテーブルの外部キーが自動生成するタイプじゃなく、nvarcharタイプのユーザかuserテーブルのキーとinfoテーブルの外部キーが自動生成するタイプじゃなく、nvarcharタイプのユーザから取得するデータなのでuserテーブルをinsertした後infoテーブルをinsertすることの順番で問題ありません。&lt;/p&gt;&lt;p&gt;でも、info2のテーブルの場合はinfoテーブルのキーで外部キーが結んでいますが、この場合は自動生成タイプなのでinfoテーブルがinsertした後、キーを検索してinfo2テーブルに入力しなければならないです。&lt;/p&gt;&lt;p&gt;この順番のテーブル入力する作業が多いと思えば、ソースがすごく複雑になるでしょう。&lt;/p&gt;&lt;p&gt;また、データベース処理する中でエラーが発生する時、全てをロールバックしなければならないですが、それ時にトランザクション(transaction)を利用すればできるでしょう。&lt;/p&gt;&lt;p&gt;cakephpフレームワークではトランザクションがオブザーバーパターンにもう実装されています。javaやc#はパターンを実装しましたが。。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;トランザクションを利用してデータを入力しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=890&quot; data-filename=&quot;001.png&quot; style=&quot;width: 396px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例でinfoテーブルの場合は外部キー(id)に入力するデータにはentityデータの「id」で設定するので別にデータベースから受取るのはありませんが、info2テーブルの場合はinfoテーブルの外部キーが自動生成のキーなのでinfoデータがinsertした後のデータをデータベースから受け取らければならないです。&lt;/p&gt;&lt;p&gt;実際にtransation中で「$info-&amp;gt;idx」キーがありませんが、「$info2-&amp;gt;info = $info-&amp;gt;idx」を設定することで、連携することが出来ます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はupdateとdeleteです。&lt;/p&gt;&lt;p&gt;updateとdeleteはデータベースからデータを修正や削除することで一応検索してデータを取得します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=891&quot; data-filename=&quot;002.png&quot; style=&quot;width: 486px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のデータを取得してentityインスタンスのnameのデータを修正してsave関数を呼出したらデータベースに格納されています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=892&quot; data-filename=&quot;003.png&quot; style=&quot;width: 377px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;削除されたことを確認できました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのcakeフレームワークでtransactionを使う方法とentityクラスを利用してinsert、update、deleteする方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/166.html</guid><pubDate>Wed, 19 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[CakePHP] ORMのテーブルFetch設定</title><link>https://www.nowonbun.com/165.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのcakeフレームワークでormのテーブルfetch設定に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前にはcakephpでorm query式でデータ検索することに関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/164.html&quot; target=&quot;_blank&quot;&gt;[cakephp] cakeフレームワークでデータベースに接続する時に使うquery式とentityクラス、tableクラス、resultset&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;orm fetchとはテーブルでreferenceされたテーブルのデータを連結することです。例えば、userテーブルに派生テーブルinfoがあり、infoテーブルでuserテーブルのidをforeign keyで結ばれたと思えば、プログラムからuserテーブルを検索するとinfoテーブルのデータもリストタイプに検索される機能です。&lt;/p&gt;&lt;p&gt;1:1の関係ならクラス内部で一つのインスタンスで変数に派生テーブルデータがあり、1:n関係ならリストタイプでデータがあります。&lt;/p&gt;&lt;p&gt;javaのormでも同じ概念で説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/83.html&quot; target=&quot;_blank&quot;&gt;[java] jpaのentityクラス設定(cascade, fetch)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;テストのため、データベースにテーブルを新しく生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=886&quot; data-filename=&quot;001.png&quot; style=&quot;width: 461px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;テーブルの生成が完了したらcakephpにもtableクラスとentityクラスを生成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=885&quot; data-filename=&quot;002.png&quot; style=&quot;width: 273px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cakephpの機能ではfetch機能でjoinを利用してデータを取得する方法にもあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3/ja/orm/retrieving-data-and-resultsets.html#changing-fetching-strategies&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3/ja/orm/retrieving-data-and-resultsets.html#changing-fetching-strategies&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、joinを利用する方法はすごく複雑です。entityクラスで処理することじゃなく、controllerで$table-&amp;gt;find()関数を利用してデータを取得することに紹介しています。&lt;/p&gt;&lt;p&gt;ormでデータを組み込むことじゃなく、controllerがデータによって複雑に実装することだけです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それでfetch設定をしてデータを取得するように実装しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/164.html&quot; target=&quot;_blank&quot;&gt;[cakephp] cakeフレームワークでデータベースに接続する時に使うquery式とentityクラス、tableクラス、resultset&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=887&quot; data-filename=&quot;003.png&quot; style=&quot;width: 547px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応、permissionは後で説明して上のinfoだけ確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=888&quot; data-filename=&quot;004.png&quot; style=&quot;width: 563px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;infosのプロパティのデータを確認すればuserテーブルから連携されたinfoのデータが表示されますね。&lt;/p&gt;&lt;p&gt;userテーブルを検索すればinfoテーブルを検索しなくても、userテーブルで連結されてデータがあることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみればpermissionmapを検索してpermissionのデータを検索すればpermissionデータがあることです。&lt;/p&gt;&lt;p&gt;permissionmapテーブルも同じパターンでidはuserテーブル、codeはpermissionテーブルに連携しています。&lt;/p&gt;&lt;p&gt;なので、userテーブルでpermissionmapを取得してpermissionプロパティを呼出しすればpermissionデータが検索されることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=889&quot; data-filename=&quot;005.png&quot; style=&quot;width: 649px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のことを実はすべてjoinして検索したことじゃなく、キーによって再検索するタイプなのでパフォーマンスを少し落ちる可能性があります。&lt;/p&gt;&lt;p&gt;でも、可読性が直感なのでプログラムを作成して管理することでは楽だと思います。&lt;/p&gt;&lt;p&gt;cakephpはtableクラスで自由にクエリを組み込むができるので必要なら別途でクエリを作成する方もいい方法だと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのcakeフレームワークでormのテーブルfetch設定に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/165.html</guid><pubDate>Tue, 18 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[CSS] Columnスタイル</title><link>https://www.nowonbun.com/131.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はcolumn要素に関して調べます。&lt;/p&gt;&lt;p&gt;column要素は筆者もよく使わない機能ですが、仕様によって使うところもあると思うのでまとめておきました。&lt;/p&gt;&lt;p&gt;スタイル種類は下記とおりになります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;スタイル&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-count&lt;/td&gt;        &lt;td&gt;カラムの列数を指定する。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-width&lt;/td&gt;        &lt;td&gt;カラムの列幅を指定する（実際の列の幅は、領域のサイズに応じて変化）&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;columns: -width -count&lt;/td&gt;        &lt;td&gt;上記2つのスタイルのshorthandスタイル&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-gap&lt;/td&gt;        &lt;td&gt;カラムの間の間隔&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-span&lt;/td&gt;        &lt;td&gt;複数のカラムを横断要素&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-rule-width&lt;/td&gt;        &lt;td&gt;各列を区別する線の太さ&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-rule-style&lt;/td&gt;        &lt;td&gt;各列を区切る線の種類&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-rule-color&lt;/td&gt;        &lt;td&gt;各列を区切る線の色&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;column-rule&lt;/td&gt;        &lt;td&gt;上記3つのshorthandスタイル&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;break-before&lt;/td&gt;        &lt;td&gt;ページ指定のスタイル（前）&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;break-after&lt;/td&gt;        &lt;td&gt;ページ指定のスタイル（後）&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;break-inside&lt;/td&gt;        &lt;td&gt;ページの指定のスタイル&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=693&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;columnsのサイズはブラウザの幅によって変更するので、calc(10vw)に設定しても幅の(30%)になると思います。カラム数を3で設定しましたので、三つが表示されました。&lt;/p&gt;&lt;p&gt;column-gapは線の基準で余白設定です。線は2pxで実線、青色で設定しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;h1タグの場合はcolumn要素を無視して表示することです。&lt;/p&gt;&lt;p&gt;hrタグで次のカラムから作成の意味です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者がcolumn例を作りながら、いろいろテストしましたが、カラム別のスタイル適用か段落でスタイルことで使いにくいですね。&lt;/p&gt;&lt;p&gt;イメージで使うといいと思いますが、divタグで個別スタイルが扱いやすいと思います。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/131.html</guid><pubDate>Mon, 17 Feb 2020 22:35:21 +0900</pubDate></item><item><title>[CakePHP] Cakeフレームワークでデータベースに接続する時に使うQuery式とEntityクラス、Tableクラス、ResultSet</title><link>https://www.nowonbun.com/164.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのcakeフレームワークでデータベースに接続する時に使うquery式とentityクラス、tableクラス、resultsetに関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前にcakeフレームワークでデータベースを接続する方法に関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/163.html&quot; target=&quot;_blank&quot;&gt;[cakephp] データベース(mariadb(mysql))を接続する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cakephpにはormフレームワークが含めているので簡単にデータベースに接続するしクエリを構成してデータを検索することができます。&lt;/p&gt;&lt;p&gt;cakephpのormはデータを取得する時に単純にsqlクエリじゃなく、query式という関数があります。それでstringタイプのクエリじゃなく、php言語の関数みたいにクエリを組立てすることができます。&lt;/p&gt;&lt;p&gt;上の例をみればc#のlinq式とjavaのstream式とすごく似てます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=883&quot; data-filename=&quot;001.png&quot; style=&quot;width: 690px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでは以前の投稿にも説明しました。&lt;/p&gt;&lt;p&gt;差があるといえば以前は$connection-&amp;gt;newquery()関数でquery式を取得しましたが、今回はtableregistryからレジストリを取得してfind関数でquery式を取得しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;connectionのnewqueryとtableregistry:getしてfind関数で取得することは文法は別に差がなさそうですが、実際にnewqueryはsqlクエリを組立てするために関数ならレジストリから取得したことはorm上でデータをオブジェクト化することです。&lt;/p&gt;&lt;p&gt;単純にみてもnewqueryはコネクションのオブジェクトで扱うことなのでリソース管理をみても良くないでしょう。&lt;/p&gt;&lt;p&gt;そうするとデータをオブジェクトにするようにtableクラスとentityクラスを作成します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ideのdirectory explorerをみればmodelのフォルダの中にentityフォルダとtableフォルダがあることを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=882&quot; data-filename=&quot;002.png&quot; style=&quot;width: 304px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラス名は「テーブル名+table」になります。私の場合はテーブル名が「testtable」なので「testtabletable」という可笑しい命名になりました。&lt;/p&gt;&lt;p&gt;クラス名は必ず「テーブル名+table」という命名方法に従う必要はありませんが、必ず語尾に「table」は付けなければならないです。&lt;/p&gt;&lt;p&gt;そしてentityクラスをentityフォルダに作成します。entityクラスはテーブル名のままになります。&lt;/p&gt;&lt;p&gt;他の言語の場合はカラムによって変数があるし、getter setterのプロパティがあります。phpの場合は変数やgetter setterプロパティを宣言しなくてもただカラム名で取得ができます。&lt;/p&gt;&lt;p&gt;上の例はテーブルにfull_dataというカラムは無いですが、full_dataのプロパティにidxとdataのデータが出力するように作成しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=881&quot; data-filename=&quot;003.png&quot; style=&quot;width: 594px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;query式でデータベースからデータを取得して$result変数に入れました。$resultを$item変数にイタレーションして結果を画面によく出力しました。&lt;/p&gt;&lt;p&gt;上のentityクラスに宣言したfull_dataプロパティもよく出力されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今までquery式で取得する関数でtolist()関数を使いましたが、first関数を使えば一つのレコード取得もできます。&lt;/p&gt;&lt;p&gt;結果が一つならtolistではなくfirst関数で取得すればソースを綺麗に作成できるでしょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=884&quot; data-filename=&quot;004.png&quot; style=&quot;width: 811px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データ取得関数は様々がありますが、実際によく使うのは「tolist」、「first」、「count」関数です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3.0/ja/orm/query-builder.html&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3.0/ja/orm/query-builder.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3.0/ja/orm/table-objects.html&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3.0/ja/orm/table-objects.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3.0/ja/orm/entities.html&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3.0/ja/orm/entities.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3.0/ja/orm/retrieving-data-and-resultsets.html&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3.0/ja/orm/retrieving-data-and-resultsets.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのcakeフレームワークでデータベースに接続する時に使うquery式とentityクラス、tableクラス、resultsetに関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/164.html</guid><pubDate>Mon, 17 Feb 2020 08:16:23 +0900</pubDate></item><item><title>[CakePHP] データベース(MariaDB(Mysql))を接続する方法</title><link>https://www.nowonbun.com/163.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのcakeフレームワークでデータベース(mariadb(mysql))を接続する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、バニラphpバージョンでmysqliのモジュールを拡張してデータベースに接続、検索、格納、削除などに関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/150.html&quot; target=&quot;_blank&quot;&gt;[php] データベース(mariadb)を連結して使う方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cakeフレームワークでデータベースを接続してデータ管理することは以前バニラphpバージョンよりいいです。&lt;/p&gt;&lt;p&gt;ormフレームワークでデータを管理するし、取得することもc#のlinq式みたいな感じの実装するので接近性がよくなりました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3/ja/orm/database-basics.html&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3/ja/orm/database-basics.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先にデータベースにクエリを作ってデータを準備しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=876&quot; data-filename=&quot;001.png&quot; style=&quot;width: 473px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前にテストで使ったデータをそのままに使います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてデータベースに接続するために設定情報ファイルを修正します。&lt;/p&gt;&lt;p&gt;設定情報ファイルはcakeフレームワークのconfigフォルダの中にapp.phpファイルがあります。app.phpファイルの中でデータベースコネクション情報を設定するところがあります。&lt;/p&gt;&lt;p&gt;それをデータベース設定環境に合わせて修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=880&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データベース設定が完了したらhomecontrollerのクラスからデータベースのデータを取得します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=878&quot; data-filename=&quot;003.png&quot; style=&quot;width: 496px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の結果をみれば、データベースからデータを取得したことを確認できました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のクエリをみれば、単純に「select * from testtable」式を飛ばしてassocを連関配列で取得したことで以前の方式と別に差がありません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=877&quot; data-filename=&quot;004.png&quot; style=&quot;width: 537px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば$connectionからクエリオブジェクト$($query)を受け取ります。$queryオブジェクトは「from」、「where」、「order」、「select」の関数でクエリを組み立てます。&lt;/p&gt;&lt;p&gt;この関数は「excute」関数で組み立てるので順番が変わっても結果は同じです。&lt;/p&gt;&lt;p&gt;fetchallでデータベースからデータを受け取ります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=879&quot; data-filename=&quot;005.png&quot; style=&quot;width: 490px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果はidxが偶数だけあります。60の場合は10倍数なので「new!!!」変更されたことを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$connectionにはinsert、update、deleteの関数があります。&lt;/p&gt;&lt;p&gt;insertの場合は初めのパラメータはテーブル名で２つ目は連関配列によってデータを入れることでinsertが行います。&lt;/p&gt;&lt;p&gt;updateの場合は初めのパラメータはテーブル名で２つ目は更新するデータを連関配列、３つ目はデータ更新条件です。&lt;/p&gt;&lt;p&gt;deleteの場合は初めのパラメータはテーブル名で２つ目は削除条件です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;確かに以前にモジュールだけデータベースを使うことよりormフレームワークがあればデータベース管理がしやすいみたいです。&lt;/p&gt;&lt;p&gt;次の投稿にentityやtableクラスに関してもっと詳細に説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのcakeフレームワークでデータベース(mariadb(mysql))を接続する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/163.html</guid><pubDate>Fri, 14 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] namespaceとuse</title><link>https://www.nowonbun.com/162.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのnamespaceとuseキーワードに関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;現在cakephpフレームワークに関する分析や説明をしていますが、急にphp基礎文法に戻りました。&lt;/p&gt;&lt;p&gt;実はphpの中でnamespaceやuseをよく使いならソース管理に良いですが、ライブラリ開発じゃない以上、すごく大事なところじゃなかったので省略しようと思いました。&lt;/p&gt;&lt;p&gt;でも、やはりmvcモデルで開発するためにはパッケージ区分が必要と思って説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;namespaceとuseとはc#の場合はnamespaceとusing、javaの場合はpackageとimportと同じ意味です。&lt;/p&gt;&lt;p&gt;最近、プロジェクトサイズが以前より大きいし様々なライブラリを参照しています。それでクラス名をプロジェクト中で雄一なことに決めることが難しいです。&lt;/p&gt;&lt;p&gt;例えば、データベースを２つを扱うプロジェクトということに考えてみましょう。&lt;/p&gt;&lt;p&gt;そのデータベースの種類がmysqlとoracleといえばrdbmsのタイプなのでライブラリがすごく似ていると思います。そのため、コネクションするクラス名がmysqlライブラリは「connection」という名を、oracleライブラリでも「connection」と実装されていると思えばユーザがconnectionクラスを割当てする時にプログラムはどのconnectionを宣言するか競合エラーになるはずです。&lt;/p&gt;&lt;p&gt;他の例ではxmlデータを扱うライブラリでオブジェクトを作成するbuildクラスがあるし、jsonデータを扱うライブラリでもオブジェクトを作成するbuildクラスがあると思えば、buileクラスを割当てする時にプログラムはどのクラスを宣言するかを分からないです。&lt;/p&gt;&lt;p&gt;そうすると、全てもphpのライブラリのクラス名は固有名で作成しなければならないですが、現実的にありえないことでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;同じクラス名でも区別するためにnamespaceがあります。&lt;/p&gt;&lt;p&gt;useの場合はnamespaceをパッケージを使用する明示的に宣言することです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=873&quot; data-filename=&quot;001.png&quot; style=&quot;width: 495px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例はtestclassが２つあります。namespaceは各test1とtest2にあるので、別のクラスです。&lt;/p&gt;&lt;p&gt;もし、namespaceを使ってないなら同じクラス名が重複されたというエラーメッセージがでます。エラーメッセージが出ない(エラーオプション設定で。)と言ってもcontrollerでtestclassを割当てすると思えばなにを割当てするかしらないでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;homeconrollerでnew testclassを宣言する時に、useで使うnamespaceを予約宣言しましたので、testclassはtest2/testclassのことを分かることでしょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=875&quot; data-filename=&quot;002.png&quot; style=&quot;width: 534px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=874&quot; data-filename=&quot;003.png&quot; style=&quot;width: 502px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はuseを予約宣言クラスをtest2\testclassに修正しました。結果は「test２」が得ることを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例では一つのページで様々なnamespaceを宣言しましたが、実際にはフォルダ構造としてnamespaceが決めます。&lt;/p&gt;&lt;p&gt;/commonフォルダに共通クラスを集める構造だと、util関係なクラスはnamespaceをcommonに決めることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々がphpを使うことなら普通はウェブサイトを構築するために使います。&lt;/p&gt;&lt;p&gt;なので様々なライブラリを参照して使う立場なのでnamespaceとuseは知らなくてもphpでサイト運用で問題ないと思いました。でもcakephpには管理するクラスが多いし、cakephpのフレームワークが大きいからプロジェクトサイズが大きくなるのでnamespaceとuseキーワードを使わないことができないです。&lt;/p&gt;&lt;p&gt;そのため、調査して説明しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/language.namespaces.basics.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/language.namespaces.basics.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのnamespaceとuseキーワードに関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/162.html</guid><pubDate>Thu, 13 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[CakePHP] RequestとResponseに関して</title><link>https://www.nowonbun.com/161.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのcakeフレームワークのrequestとresponseに関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;requestとはウェブブラウザからウェブサーバに要請したデータ(headerとbody)です。responseとはウェブサーバからウェブブラウザに応答するデータ(headerとbody)です。&lt;/p&gt;&lt;p&gt;要請するタイプには「get」タイプと「post」タイプがあります。そのことでgetのquery stringは「$_get」から取得するしpostのform dataは「$_post」から取得することを説明したことがあります。&lt;/p&gt;&lt;p&gt;また、headerのデータは$_serverから取得することも説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/145.html&quot; target=&quot;_blank&quot;&gt;[php] $_server, $globals, $_get, $_post, $_request, $_cookie, $_session, $_files, $_env(getenv())&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、説明したデータをcakephpフレームワークでももちろん使えます。でもデータ流れの構造を設計、管理するcakephpフレームワークを使っているから内部オブジェクトでheaderデータを取得しましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3/ja/controllers/request-response.html&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3/ja/controllers/request-response.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;request&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;ウェブブラウザからウェブサーバに接続する時の要請上です。ヘッダ情報や、セッション情報があります。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getrequest()-&amp;gt;getattributes()と$this-&amp;gt;getrequest()-&amp;gt;getparam(キー)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;getparamの関数の情報はgetattributesの「params」のデータになっています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=866&quot; data-filename=&quot;001.png&quot; style=&quot;width: 689px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実はgetattributes()関数はroutes.phpからcontrollerを呼出す時にデータを渡すパラメータです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=865&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例の場合はcontroller、actionしかありませんが、connect関数にパラメータを付けるとgetattributes()関数で取得ができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getrequest()-&amp;gt;getquery()&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;このデータはhttpメソッドがgetの時に受取るquery stringの値です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=864&quot; data-filename=&quot;003.png&quot; style=&quot;width: 482px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参考にgetquery関数で初めのパラメータはキー名、２つ目のパラメータはデフォルト値です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=863&quot; data-filename=&quot;004.png&quot; style=&quot;width: 621px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getrequest()-&amp;gt;getdata()&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;この関数はhttpメソッドがpostの時に受取るformデータです。&lt;/p&gt;&lt;p&gt;使用方法はgetqueryと同じです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=867&quot; data-filename=&quot;005.png&quot; style=&quot;width: 576px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getrequest()-&amp;gt;is()&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;この関数は要請メソッドタイプチェック関数です。つまり、is(&apos;post&apos;)の場合はpostはtrueを、そうじゃないならfalseを返却します。&lt;/p&gt;&lt;p&gt;探索可能なキーワードは「get」、「put」、「patch」、「post」、「delete」、「head」、「options」、「ajax」、「ssl」、「flash」、「requested」、「json」、「xml」があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=869&quot; data-filename=&quot;006.png&quot; style=&quot;width: 576px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getrequest()-&amp;gt;session()&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;セッションデータを取得する関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=870&quot; data-filename=&quot;007.png&quot; style=&quot;width: 637px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;request-&amp;gt;getcookieparams()、$this-&amp;gt;getrequest()-&amp;gt;getcookie()&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;クッキーを取得する関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=868&quot; data-filename=&quot;008.png&quot; style=&quot;width: 544px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;セッションキー値はcookieには見えないですね。クッキーの中でcsrftokenキー見えますね。ページのセキュリティでtoken設定するものですが、設定は複雑ですがそんなに有用なミドルウェアじゃないです。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;response&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;ウェブサーバからウェブブラウザに応答する情報です。基本的にcakephpはヘッダからバディまで自動に作成してくれます。&lt;/p&gt;&lt;p&gt;別にユーザが修正する領域はないですが、エラーコード管理やブラウザにサーバ側のクッキー設定(set-cookie)をする時使います。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getresponse()-&amp;gt;withtype() , $this-&amp;gt;getresponse()-&amp;gt;withstringbody()&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;withtypeはcontext-typeを設定します。&lt;/p&gt;&lt;p&gt;withstringbodyは応答のボディを設定します。&lt;/p&gt;&lt;p&gt;※phpは基本的にポインタレファレンスがなくて、全て値レファレンスですね。$this-&amp;gt;getresponse()で出るresponseの関数で格納や修正、設定すると返却は全てresponse値です。でも入力、返却値が違います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=862&quot; data-filename=&quot;009.png&quot; style=&quot;width: 464px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getresponse()-&amp;gt;withstatus(error code);&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;ブラウザ応答のエラーコードを設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=871&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$this-&amp;gt;getresponse()-&amp;gt;withcookie(cookie class);&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;サーバ側からクッキーを設定する。&lt;/p&gt;&lt;p&gt;参考:クッキーはブラウザに格納データですが、サーバから格納する時にはブラウザ応答する時にヘッダに「set-cookie」を入れてブラウザにクッキーが設定するようにします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=872&quot; data-filename=&quot;011.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;その以外にrequestとresponseが提供する関数はもっと多いです。でも、よく使わないし、この投稿で全て説明するのは大変ですね。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://book.cakephp.org/3/ja/controllers/request-response.html&quot; target=&quot;_blank&quot;&gt;https://book.cakephp.org/3/ja/controllers/request-response.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのcakeフレームワークのrequestとresponseに関する説明でした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/161.html</guid><pubDate>Wed, 12 Feb 2020 03:00:02 +0900</pubDate></item><item><title>[CakePHP] PHPのCakeからAjax要請がある時、jsonタイプ(json_encode関数)でResponseする方法とControllerでViewを選択する方法</title><link>https://www.nowonbun.com/160.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この投稿はphpのcakeからajax要請がある時、jsonタイプ(json_encode関数)でresponseする方法とcontrollerでviewを選択する方法に関する説明です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿でcake+smartyの組み合わせでウェブブラウザから要請がくるとcontrollerを通ってviewを読み込んでresponseする方法に関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/159.html&quot; target=&quot;_blank&quot;&gt;[cakephp] mvcフレームワークのcakeをインストールする方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスでは必ずhtmlドキュメント形式でresponseすることじゃありません。例えば、ajaxの機能ならjsonタイプのデータを受取る時もあるし、ファイルをダウンロードする時もあります。&lt;/p&gt;&lt;p&gt;その時にはactionメソッドでリターン値がテキストやバイナリタイプで受け取ってブラウザ側にresponseしなければならないです。&lt;/p&gt;&lt;p&gt;javaだとresponsebodyアノテーションを設定してstring値にリターンすることと同じ意味です。&lt;/p&gt;&lt;p&gt;これからactionメソッドからajax値を受け取りましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;controllerを追加します。ajaxcontrollerを追加してajaxデータを生成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=857&quot; data-filename=&quot;001.png&quot; style=&quot;width: 420px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=858&quot; data-filename=&quot;002.png&quot; style=&quot;width: 396px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例でjson_encodeの関数はarrayをjson形式に変換する関数です。参考にobjectタイプはjsonタイプに変換しません。&lt;/p&gt;&lt;p&gt;java(gson)やc#(newton)はライブラリに提供しますが、phpの場合は内部関数で提供します。phpの長所は細かい内部関数が多いことです。別にライブラリがなくてもプログラムを立ち上げることで無理がありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、ソースに戻してhomeのindexのビューでjavascriptでajaxを呼出す関数を作って確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=861&quot; data-filename=&quot;003.png&quot; style=&quot;width: 774px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ajaxから「/ajax/index」を呼出します。ajaxcontrollerのindex関数が呼ばれます。&lt;/p&gt;&lt;p&gt;jsonタイプで要求しています。idがdataのオブジェクトにはjsonのdataの値を、data1のオブジェクトにはjsonのdata1の値を入れました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;actionメソッドのリターン値で許すデータはnullと$this-&amp;gt;response値だけです。その以外のデータはエラーが発生します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうするとcontrollerのactionとテンプレートのファイル名はいつも一致しなければならないかと考えるとそうじゃありません。&lt;/p&gt;&lt;p&gt;なぜならその結果は似てるなビューページがある時、例えば掲示板のサイトで追加、修正ページの場合はページ形が似ているがそうするとviewページを２つに作成して一つはコピーするという意味になります。&lt;/p&gt;&lt;p&gt;でもcakeフレームワークにはビューページを選択できるようにrenderという関数があります。&lt;/p&gt;&lt;p&gt;other関数をみるとrender関数を利用してindex.ctlページを呼出すように設定しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=860&quot; data-filename=&quot;004.png&quot; style=&quot;width: 406px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;actionメソッドとviewファイル名は必ず一致しなくてもいいという意味になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=859&quot; data-filename=&quot;005.png&quot; style=&quot;width: 754px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のajaxの例を同じ結果になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでphpのcakeからajax要請がある時、jsonタイプ(json_encode関数)でresponseする方法とcontrollerでviewを選択する方法に関する説明でした。&lt;/p&gt;&lt;p&gt;ご不明なところや間違いところがあればコメントしてください。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/160.html</guid><pubDate>Tue, 11 Feb 2020 20:15:22 +0900</pubDate></item><item><title>[CakePHP] MVCフレームワークのCakeをインストールする方法</title><link>https://www.nowonbun.com/159.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで、reflectionやspl_autoload_register、smarty、.htaccessなどを説明しましたが、それは全てphpのmvcフレームワークを構成するための準備作業だと言えます。&lt;/p&gt;&lt;p&gt;cakeとはphp側で有名なフレームワークです。javaだとspring、c#だとmvc frameworkと似ているな概念のmvcフレームワークです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://cakephp.org&quot; target=&quot;_blank&quot;&gt;https://cakephp.org&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;大勢方がcakeフレームワークがどんなフレームワークより使いやすいし、様々機能があってセキュリティやデータ管理などが強いといいますが、個人的にjavaとc#のフレームワークに馴れているからかな、以外に複雑ですね。&lt;/p&gt;&lt;p&gt;実はこの投稿を作成しながらもずいぶん迷ういました。一応、目標として、インストールまで完了してブラウザに「hello world」を出力することで始まります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cakeフレームワークを使うためにはいくつかのモジュールを設定(extension)しなければならないです。&lt;/p&gt;&lt;p&gt;php.iniを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=849&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の３つのモジュールのコメント(;)を解除されていることを確認しなければならないです。&lt;/p&gt;&lt;p&gt;解除されているのを確認したらcomposerでcakeフレームワークをダウンロードしましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/138.html&quot; target=&quot;_blank&quot;&gt;[php] composer設定&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=856&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合は一回ダウンロードした状況なので「loading from cache」で表示されます。初めにダウンロードするとライブラリが少しありますので、時間がかかります。&lt;/p&gt;&lt;p&gt;フォルダを見ればappフォルダがあることを確認できます。私の場合はrootで作業するつもりなのでappフォルダにあるファイルを全てrootフォルダに移動します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=839&quot; data-filename=&quot;003.png&quot; style=&quot;width: 270px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして.githubフォルダとappフォルダは必要ないので削除しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=845&quot; data-filename=&quot;004.png&quot; style=&quot;width: 398px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてcakeフレームワークもビューのテンプレートがありますが、我々はsmartyテンプレートに変わりましょう。&lt;/p&gt;&lt;p&gt;(cakeのテンプレートは別にphpスクリプトファイルと差がないです。)&lt;/p&gt;&lt;p&gt;composer.jsonのrequireにsmartyライブラリを追加しましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/156.html&quot; target=&quot;_blank&quot;&gt;[php] phpのコーディング領域とデザイン領域を分離するテンプレートライブラリ smarty&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=847&quot; data-filename=&quot;005.png&quot; style=&quot;width: 741px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのあとでcomposer updateをしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=848&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここでcakeフレームワークを使うための準備は完了しました。使う前に簡単な構造的な説明と初期設定に関して調べましょう。&lt;/p&gt;&lt;p&gt;フォルダ構造をみれば主に使うフォルダは「config」、「src」、「webroot」フォルダがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=844&quot; data-filename=&quot;007.png&quot; style=&quot;width: 367px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;configフォルダはcakeフレームワークの設定ファイルがあるところです。route設定やデータベース接続設定などがあります。&lt;/p&gt;&lt;p&gt;srcフォルダはcontroller(仕様ソース)とmodelソース、viewソースがあるところです。&lt;/p&gt;&lt;p&gt;webrootフォルダはjavascriptファイル、cssファイルなどのファイルがあります。response側のrootはwebrootに設定されています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;configフォルダにroutes.phpファイルあります。&lt;/p&gt;&lt;p&gt;routes.phpはrequestによってcontrollerクラスを呼出すクラスです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=853&quot; data-filename=&quot;008.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;初期設定は「/」に要請されている場合、controllerはpages、actionは「display」に設定されています。つまりcontrollerはpagescontrollerを割当てしてactionでdisplay関数を呼出すことです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=850&quot; data-filename=&quot;009.png&quot; style=&quot;width: 744px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合は上のroutesを少し変更します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=851&quot; data-filename=&quot;010.png&quot; style=&quot;width: 753px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;既存のソースは全てコメントしました。$_serverからrequest urlを受け取ってディレクトリパターンによってcontrollerとactionの呼出す部分を修正しました。&lt;/p&gt;&lt;p&gt;上のパターンはc#のmvc frameworkを真似しましたが、他のパターンにしてもよいです。&lt;/p&gt;&lt;p&gt;controllerとactionの基本値は「home」、「index」になっています。でも「localhost/pages/get」に要請があればconnect関数を利用してpagescontollerのget関数を呼出します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからhomecontrollerクラスを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=852&quot; data-filename=&quot;011.png&quot; style=&quot;width: 421px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=842&quot; data-filename=&quot;012.png&quot; style=&quot;width: 424px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のindexクラスはウェブブラウザから「localhost/」や「localhost/home/index」に要請するとroutes関数が呼ばれます。&lt;/p&gt;&lt;p&gt;routes関数からhomecontollerのindex関数を呼出します。&lt;/p&gt;&lt;p&gt;index関数でset関数してビューにdataキーで「hello world」値を格納します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからcontrolからviewを呼出してビューを作成しなければならないです。&lt;/p&gt;&lt;p&gt;controllerを探す関数で「routes」ならviewを探す関数は「appview」クラスがあります。&lt;/p&gt;&lt;p&gt;appviewクラスは「src/view」フォルダにあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=855&quot; data-filename=&quot;013.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;イメージではeclipseのエラーがありますが、eclipseのphp解析機能のバグなので無視してもよいです。&lt;/p&gt;&lt;p&gt;appviewはcontrollerからviewを呼出す前にデータ設定する部分です。&lt;/p&gt;&lt;p&gt;既存cake templateからsmartyに変更しました。&lt;/p&gt;&lt;p&gt;これからviewソースを修正しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;viewソースはtemplateフォルダの中にあります。一応、そのまま使うとエラーが発生します。&lt;/p&gt;&lt;p&gt;なぜなら、cake templateで作成しているからです。先にlayoutのページを修正しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=843&quot; data-filename=&quot;014.png&quot; style=&quot;width: 650px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このレイアウトはc#のマスターページと同じ概念です。htmlファイルが作成されることはマスターページが呼ばれて中にviewのページが入ることの形です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;viewページ作成します。&lt;/p&gt;&lt;p&gt;templateフォルダにhomeフォルダがありません。なのでhomeフォルダから生成して「index.ctp」ファイルを生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=846&quot; data-filename=&quot;015.png&quot; style=&quot;width: 404px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;index.ctlにはcontrollerから渡してもらった「data」をviewで作成するようにコードを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=841&quot; data-filename=&quot;016.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで設定したらブラウザ画面にhello worldをでるように準備が終わりました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ブラウザに「localhost」のurlで接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=840&quot; data-filename=&quot;017.png&quot; style=&quot;width: 604px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;画面上に「hello world」が表示されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は設定してないurlで接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=854&quot; data-filename=&quot;018.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「/test」に接続するとページがないというメッセージが表示します。上のページはcake templateの画面ですが、$dataforview[&quot;error&quot;]のnullチェックで既存cake template画面がでるように設定したことです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://github.com/yukikikuchi/cakephp3-smartyview&quot; target=&quot;_blank&quot;&gt;https://github.com/yukikikuchi/cakephp3-smartyview&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから一つずつcakeを分析してしましょう。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/159.html</guid><pubDate>Fri, 7 Feb 2020 03:00:02 +0900</pubDate></item><item><title>[PHP] 自動require及びincludeをする方法(spl_autoload_register)</title><link>https://www.nowonbun.com/158.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;全樹でrequireとincludeに関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/148.html&quot; target=&quot;_blank&quot;&gt;[php] requireとinclude、そして「@」の使用方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者が考えてphpでプログラミングする時に、一番不便なことがrequireとinclude宣言です。&lt;/p&gt;&lt;p&gt;小さいプロジェクトならそんなに不便とは感じられない可能性もありますが、大きいプロジェクトなら様々なところでクラスを呼出すし関連ページを全て呼び出さなければならないので、すごく大変になるでしょう。&lt;/p&gt;&lt;p&gt;javaやc#の場合はパッケージ単位、namespace単位で宣言します。それでもソースの上にimportやusingキーワードが多くなることがあります。&lt;/p&gt;&lt;p&gt;まして、クラス単位であるphpページならすごく多くなるでしょう。&lt;/p&gt;&lt;p&gt;筆者は以前に参加したプロジェクトでrequireだけで何百行目になったことも見たことがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これを解決する関数で「spl_autoload_register」ということがあります。実はこの関数はphp 5.3から提供していますが、筆者の場合は「7.0」から認識しました。&lt;/p&gt;&lt;p&gt;それで以前にはphpの場合はパッケージ管理が難しいという認識がありましたが、実はそれじゃなかったんです。やはり、ソースパフォーマンスや可読性は開発者の能力の違いですね。言語は以前から提供しましたが。。。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.spl-autoload-register.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.spl-autoload-register.php&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=837&quot; data-filename=&quot;001.png&quot; style=&quot;width: 424px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=838&quot; data-filename=&quot;002.png&quot; style=&quot;width: 736px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、ページの中でクラスだけあるファイルは「.class.php」の拡張子で作成しました。これは標準規約じゃなく、私が楽に区分するように決めた規則です。&lt;/p&gt;&lt;p&gt;ソースでspl_autoload_registerの関数以外にはincludeやrequireがありません。でもclass1をインスタンス生成する時(newで割当て)、spl_autoload_registerの関数が呼出してclass1.class.phpファイルを読み込みます。&lt;/p&gt;&lt;p&gt;ここでinclude_onceで読み込みましたので重複読み込みはありません。class1クラスはextendsキーワードでabstractclassを経書しました。それで「abstractclass.class.php」ファイルも読み込みました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;class2.class.phpの場合は、「abstractclass.class.php」を読み込んだことがあるので、再読み込みはしません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;htmlページではrun関数を呼出しました。run関数では派生クラスのgetdata関数を呼出しますね。&lt;/p&gt;&lt;p&gt;それでclass1の場合は「this is class1」、class2の場合は「this is class2」という結果が表示されます。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/158.html</guid><pubDate>Wed, 5 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] 匿名関数(ラムダ式)とクロージャ(closure)</title><link>https://www.nowonbun.com/157.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はphpの匿名関数(ラムダ)とクロージャに関して調べてみました。&lt;/p&gt;&lt;p&gt;匿名関数は既存phpで宣言した「function methodname($param)」の形じゃなく、「function($param)」という関数名がないことです。関数名がないというのは一回性の関数で「javascript」とコールバック関数とにみたいな流れの関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=835&quot; data-filename=&quot;001.png&quot; style=&quot;width: 473px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみればruntest関数に２つのメソッド名がないメソッドを渡します。この関数では「$add」と「$substract」に結果を渡すための一回性の関数です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クロージャとは「java」と「c#」、「javascript」のクロージャと同じ概念です。クロージャと言うのは関数内部じゃないところで宣言した変数を関数の中で使えることです。&lt;/p&gt;&lt;p&gt;実際にメモリ上では別のメモリ領域なので共有ができないですが、ソース上でメモリを共有するような機能になっています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=836&quot; data-filename=&quot;002.png&quot; style=&quot;width: 650px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば$message変数に「hello」という値を入力しました。各匿名関数「$example1」と「$example2」を作成しました。&lt;/p&gt;&lt;p&gt;$example1の関数では「$message」変数を参照するとエラーが発生します。エラー内容は宣言してない変数使用ということになっています。&lt;/p&gt;&lt;p&gt;なぜなら$messageの変数は$example1関数外で宣言したものからです。でも、$example2では$messageを使いますね。&lt;/p&gt;&lt;p&gt;useキーワードを利用して関数外の変数を使えるようにしたからです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/functions.anonymous.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/functions.anonymous.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/closure&quot; target=&quot;_blank&quot;&gt;https://www.php.net/closure&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/157.html</guid><pubDate>Tue, 4 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] PHPのコーディング領域とデザイン領域を分離するテンプレートライブラリ Smarty</title><link>https://www.nowonbun.com/156.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで、我々はphpを作成する時にphpコードとhtmlコードを混ぜて作成しました。&lt;/p&gt;&lt;p&gt;簡単な仕様ならhtmlデザインパートとスクリプトパートが一緒にあるから楽かも知りませんが、少し複雑になるし大きくなるとソースコードが複雑になるでしょう。&lt;/p&gt;&lt;p&gt;昔はphpにもクラス概念がある前には単一ページ作成方法(phpスクリプトとhtmlコードが混在)でよく作成しました。(必ずそのことではないけど、普通はそうだったです。)&lt;/p&gt;&lt;p&gt;最近はhtmlタグ構成、cssスタイルコード、javascriptコードも複雑になってその上でphpコードまであるとすごく複雑なソースことになるでしょう。&lt;/p&gt;&lt;p&gt;開発する時に可読性は重要な部分なので、その時にはスクリプトコードとhtmlコードを分ける必要があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;java(spring)やc#(mvc)にはmvcモデルのフレームワークがあります。mvcモデルとはmodel(オブジェクト)、view(htmlデザイン)、controller(ロジック)を分けて作成する方法です。&lt;/p&gt;&lt;p&gt;phpにもcakeというmvcモデルがあります。でも、cakeにもコントロールとビューが分けていますが、ビューがphpコードになっているので、完全な分離だと思いません。&lt;/p&gt;&lt;p&gt;それでphpにはテンプレートフレームがありますが、それがsmartyとtwigです。&lt;/p&gt;&lt;p&gt;筆者はtwigよりsmartyが手に慣れているので、smartyを使っています。smartyとtwigは使用方法が全然違うテンプレートですが、パフォーマンスや概念は似ています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.smarty.net/&quot; target=&quot;_blank&quot;&gt;https://www.smarty.net/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;smartyを利用するためにcomposerでsmartyをダウンロードしましょう。&lt;/p&gt;&lt;p&gt;repository - &lt;a href=&quot;https://packagist.org/packages/smarty/smarty&quot; target=&quot;_blank&quot;&gt;https://packagist.org/packages/smarty/smarty&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=831&quot; data-filename=&quot;001.png&quot; style=&quot;width: 643px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=830&quot; data-filename=&quot;002.png&quot; style=&quot;width: 427px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;eclipseのexplorerでたまにエラーマークが表示される時があります。実際にエラーではないので気にしなくてもよいです。eclipseがphpソースを完全に解読できないらしいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=833&quot; data-filename=&quot;003.png&quot; style=&quot;width: 795px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;index.phpファイルでsmartyクラスを宣言してテンプレートディレクトリ設定をします。キャッシュ設定もありますが、しなくても構いません。&lt;/p&gt;&lt;p&gt;その後、smartyインスタンスでdisplay関数で「index.tpl」ファイルを読み込みます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=832&quot; data-filename=&quot;004.png&quot; style=&quot;width: 439px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpファイルでhtmlテンプレートファイルを読み込んでresponseするのは理解しました。&lt;/p&gt;&lt;p&gt;そうするとphpのデータ値をテンプレートに渡す方法とsmarty文法に関して確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=834&quot; data-filename=&quot;005.png&quot; style=&quot;width: 478px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpからsmartyテンプレートに値を渡す時にはasign関数を利用するとできます。上の例は変数を２つを渡しました。&lt;/p&gt;&lt;p&gt;titleの変数はstringタイプでdataのタイプはクラスオブジェクトタイプで渡しました。&lt;/p&gt;&lt;p&gt;tplページをみればstringタイプの場合はそのまま表示すると表示できます。オブジェクトの場合はphpの中のオブジェクト参照方法みたいにやじるしで参照します。&lt;/p&gt;&lt;p&gt;foreachとif文法の使用方法もあります。&lt;/p&gt;&lt;p&gt;foreachの場合、fromでイタレーション配列を入れ、一つのデータをitemで取得します。&lt;/p&gt;&lt;p&gt;ifの場合はgetdata3から取得したデータがブール値です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;smarty文法に関しては下記のホームページから説明しています。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.smarty.net/docs/ja/&quot; target=&quot;_blank&quot;&gt;https://www.smarty.net/docs/ja/&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/156.html</guid><pubDate>Sun, 2 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] Reflection - Variable編</title><link>https://www.nowonbun.com/155.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でreflectionのclassとmethodを扱う方法に関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;http://www.nowonbun.com/153.html&quot; target=&quot;_blank&quot;&gt;[php] reflection - class編&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;http://www.nowonbun.com/154.html&quot; target=&quot;_blank&quot;&gt;[php] reflection - method編&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflection機能はプログラムを動的に実装するように使うこともありますが、テストのために使うこともあります。&lt;/p&gt;&lt;p&gt;特にreflectionの変数を扱うことではクラスのメンバー変数に直接に参照と修正ができるのでそれぞれのテストケースを作ってunitテストが可能です。&lt;/p&gt;&lt;p&gt;その話はコンパイルが可能なjavaとc#の話です。phpはコンパイルが必要ないスクリプト言語なので、実は私の考えではreflectionのvariable機能はそんなに必要が無いと思います。&lt;/p&gt;&lt;p&gt;クラスのデータの流れを確認するようにはvar_dump関数を利用するとprivateデータまでよくみえるからもっと使うところがないと思いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;普通はクラスを作れば変数はprivateに設定するほうが基本コーディング規約です。なので、privateタイプの変数にデータを格納、取得することだけ知れば良いと思います。&lt;/p&gt;&lt;p&gt;上の例をみれば、exclassの中で「data」のメンバー変数はprivateに設定されています。まず、そのデータを取得するようにexclassのインスタンスを生成します。&lt;/p&gt;&lt;p&gt;getproperty関数で変数のオブジェクトを取得してsetaccessible関数で「private」のアクセス修飾子を無効化します。&lt;/p&gt;&lt;p&gt;bodyタグの中でgetvalueを利用してobjのインスタンスのdata変数を取得して出力します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=829&quot; data-filename=&quot;001.png&quot; style=&quot;width: 495px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;取得しましたから今回は格納してみましょう。&lt;/p&gt;&lt;p&gt;上の例はインスタンスをreflectionで生成したことじゃなく、newキーワードで生成しました。普通の文法ならインスタンスを「new」で生成します。&lt;/p&gt;&lt;p&gt;getvalueでメンバー変数を取得できたら、setvalueではデータが格納できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=828&quot; data-filename=&quot;002.png&quot; style=&quot;width: 456px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果はexclassのdata変数は「change」という値に変更されたことを確認できます。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/class.reflectionproperty.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/class.reflectionproperty.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflectionまで纏めて説明しました。次の投稿からは.htaccessと上のreflectionを利用してapache+php環境でmvcパターンを構成しようと思います。&lt;/p&gt;&lt;p&gt;phpでmvcモデルに作成が出来たら、javaやc#みたいにプロジェクト管理がしやすくなると思います。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/155.html</guid><pubDate>Sat, 1 Feb 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] Reflection - Method編</title><link>https://www.nowonbun.com/154.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でreflectionでクラス&amp;lt;を探してインスタンスを生成する方法、インスタンスの中で変数や関数を探す方法まで説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/153.html&quot; target=&quot;_blank&quot;&gt;[php] reflection - class編&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はreflectionを利用してクラスで関数を探して実行する方法まで調べてみます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=823&quot; data-filename=&quot;001.png&quot; style=&quot;width: 547px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=824&quot; data-filename=&quot;002.png&quot; style=&quot;width: 424px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=825&quot; data-filename=&quot;003.png&quot; style=&quot;width: 496px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の結果をみればquery stringのパラメータによって呼出す関数を違うし結果も別で表示されます。&lt;/p&gt;&lt;p&gt;もし、reflectionがなければ下記とおりに作成したと思います。&lt;/p&gt;&lt;p&gt;ここでexclassのクラスの関数が仕様によって増えると考えば「if ~ else」も増えますよ。上の場合は簡単な例なので差をそんなに体感されないですが、拡張的に考えたらもっと複雑なプログラムならすごく複雑なロジックになるでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflection機能でこの関数を動的に呼出すだけではないです。関数がpublicではないアクセス修飾子も呼出すことができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=826&quot; data-filename=&quot;005.png&quot; style=&quot;width: 579px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば「test2」と「test3」関数はpublicではなく、privateやprotectedに設定されています。&lt;/p&gt;&lt;p&gt;そうすると基本的にクラス外部では呼出すことができません。でも、reflectionの「setaccessible」関数を利用してアクセスができるように設定して呼出しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=827&quot; data-filename=&quot;004.png&quot; style=&quot;width: 833px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpの場合はクラスのメソッドのオーバーロード（同じメソッド名にパラメータのタイプと個数で関数を区別すること）がありません。&lt;/p&gt;&lt;p&gt;それで特にreflectionでメソッドを検索する時にパラメータのタイプや個数の情報はいらないです。invoke関数を呼び出す時にパラメータの数が一致しないとエラーが発生するため、パラメータの検証が必要になる場合があります。&lt;/p&gt;&lt;p&gt;phpの場合は別に変数の型がないので、変数名と個数で検証処理をすれば良いと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/class.reflectionmethod.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/class.reflectionmethod.php&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/154.html</guid><pubDate>Fri, 31 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[CSS] 整列スタイル (float)</title><link>https://www.nowonbun.com/130.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;html中で基本的にタグが優先でウェブページを作りますが、タグだけでは画面スタイルで要素配置が限界があります。&lt;/p&gt;&lt;p&gt;タグ以外のもっと動的な配置するようには「float」のスタイルを利用してもっと綺麗に配置ができます。&lt;/p&gt;&lt;p&gt;上の例をみれば「p」タグの幅が「40%」で、「1」の「p」タグ隣に「2」の「p」タグがあることまで十分に予想できます。&lt;/p&gt;&lt;p&gt;「3」の「p」タグの位置ですが、普通なら「1」の「p」タグの下にあることが正常です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=689&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも、実際には「1」タグ隣に「2」、「3」の「p」タグがあります。&lt;/p&gt;&lt;p&gt;なぜ、その結果になるかというと「float」タグのことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の「p」タグを「float」設定をすべて「left」に設定します。上、右からテトリスになると思ったらよいです。&lt;/p&gt;&lt;p&gt;「1」番が右に先に整列します。「2」番を整列します。「3」番は「2」番の下に空間があるので、そこで表示します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;同じく下に「4」番のことに置くとどのようになるか？&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=688&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「1」番の下に「4」番が置くことになります。でも上の例は私が「3」番の高さを「40px」に設定しますね。&lt;/p&gt;&lt;p&gt;「1」番と「4」番の間が余白がなりました。ここで「1」番の下に余白なしで置く仕方はないかな。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=692&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「1」番と「2」番の「p」タグは「float」が「left」でしたが、「3」、「4」番は「right」に変更しました。&lt;/p&gt;&lt;p&gt;つまり、「3」番からテトリスが上、左に変わることですね。なので「3」、「4」番が上の例みたいになります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;普通は「float」要素を「left」、「right」を混在して使わないです。&lt;/p&gt;&lt;p&gt;「float」がポータルでダッシュボードのウィジェットを作ることでよく使うスタイルですが、逆にスタイルを崩れやすいのでサイズをよく考えながら使わなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=691&quot; data-filename=&quot;004.png&quot; style=&quot;width: 731px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「float」を使いながら解除したいときには「clear:both;」タグで解除ができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=690&quot; data-filename=&quot;005.png&quot; style=&quot;width: 729px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「4」と「5」番の「p」タグは「clear: both」タグで「float」を解除しました。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/130.html</guid><pubDate>Fri, 31 Jan 2020 00:13:16 +0900</pubDate></item><item><title>[PHP] Reflection - Class編</title><link>https://www.nowonbun.com/153.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflectionは以前javaとc#でも説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/34.html&quot; target=&quot;_blank&quot;&gt;[c#] reflection(リフレクション)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/68.html&quot; target=&quot;_blank&quot;&gt;[java] reflection - class編&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflectionとはプログラム構造を投影して再構築する方法のプログラム技法です。&lt;/p&gt;&lt;p&gt;その意味は我々がクラスを「$obj = new class()」形で宣言しますが、その宣言するクラスを動的宣言方法で使いたいことです。&lt;/p&gt;&lt;p&gt;つまり、パラメータで「aタイプのクラスを宣言して」というデータがあればaタイプクラスを、「bタイプのクラスを宣言して」というとbタイプのクラスを宣言することです。&lt;/p&gt;&lt;p&gt;上の例はreflectionではなく、我々がよく知っている形でクラスを宣言した方法です。パラメータでaを受取るとaクラスを宣言するしbを受取るとbクラスを宣言します。&lt;/p&gt;&lt;p&gt;普通だし、問題ないプログラムコーディングですが、もしクラスがaクラス、bクラスだけではなくたくさんある場合にはどうでしょうか？&lt;/p&gt;&lt;p&gt;後、プロジェクトが大きくなるほど上のパラメータが増えると言えばどうでしょうか？&lt;/p&gt;&lt;p&gt;その時には「$obj = new $type.class()」の形で作成したらどうかと思う時がありますね。&lt;/p&gt;&lt;p&gt;それがreflectionです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=820&quot; data-filename=&quot;001.png&quot; style=&quot;width: 489px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=821&quot; data-filename=&quot;002.png&quot; style=&quot;width: 523px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例ではパラメータから「type」を受け取ってreflectionを利用してクラスを宣言しました。&lt;/p&gt;&lt;p&gt;結果はブラウザのアドレスにquery stringの「type」に「a」を入れるとaclassのprintを呼出して「aclass」という結果が表示されました。&lt;/p&gt;&lt;p&gt;「type」に「b」を入れるとbclassのprintの関数で「bclass」の結果が表示されました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=822&quot; data-filename=&quot;003.png&quot; style=&quot;width: 492px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflectionの「getproperties」と「getmethods」の関数でクラス内部のメンバー変数と関数の構成を確認できます。&lt;/p&gt;&lt;p&gt;上の結果を見ると変数には「data」が表示するし、関数には「print」、「test」、「get」がみえます。&lt;/p&gt;&lt;p&gt;アクセス修飾子も関係ずにデータがすべてみえますね。でもアクセス修飾子の情報と関数の場合はパラメータ返却情報がないですね。&lt;/p&gt;&lt;p&gt;実はあるのに、私がまだ知らない状況の可能性もあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/class.reflectionclass.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/class.reflectionclass.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflectionに関して続けて調べてみます。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/153.html</guid><pubDate>Thu, 30 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[CSS] 位置(position),表示(display)スタイル</title><link>https://www.nowonbun.com/129.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述からcssのスタイルに関して纏めています。&lt;/p&gt;&lt;p&gt;今回は要素の表示タイプと位置(postision）に関して調べてみます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=687&quot; data-filename=&quot;001.png&quot; style=&quot;width: 582px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例を見ればスタイルで「display」を使いました。&lt;/p&gt;&lt;p&gt;displayは要素のスタイルの形態を決めるものです。&lt;/p&gt;&lt;p&gt;displayの要素の値には下記とおりにあります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;値&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;inline&lt;/td&gt;        &lt;td&gt;要素をインライン要素（&amp;lt;span&amp;gt;など）として表示します。 高さと幅のプロパティは効果がありません。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;block&lt;/td&gt;        &lt;td&gt;要素をブロック要素（&amp;lt;p&amp;gt;など）として表示します。 新しい行から始まり、幅全体を占有します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;contents&lt;/td&gt;        &lt;td&gt;コンテナを非表示にし、要素の子要素をdomの次のレベルに上げます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;flex&lt;/td&gt;        &lt;td&gt;ブロックレベルのフレックスコンテナとして要素を表示します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;grid&lt;/td&gt;        &lt;td&gt;要素をブロックレベルのグリッドコンテナとして表示します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;inline-block&lt;/td&gt;        &lt;td&gt;要素をインラインレベルのブロックコンテナとして表示します。 要素自体はインライン要素としてフォーマットされますが、高さと幅の値を適用できます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;inline-flex&lt;/td&gt;        &lt;td&gt;要素をインラインレベルのフレックスコンテナとして表示します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;inline-grid&lt;/td&gt;        &lt;td&gt;要素をインラインレベルのグリッドコンテナとして表示します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;inline-table&lt;/td&gt;        &lt;td&gt;要素はインラインレベルの表として表示されます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;list-item&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;li&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;run-in&lt;/td&gt;        &lt;td&gt;コンテキストに応じて、要素をブロックまたはインラインとして表示します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;table&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-caption&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;caption&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-column-group&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;colgroup&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-header-group&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;thead&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-footer-group&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;tfoot&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-row-group&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;tbody&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-cell&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;td&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-column&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;col&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;table-row&lt;/td&gt;        &lt;td&gt;要素を&amp;lt;tr&amp;gt;要素のように動作させます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;none&lt;/td&gt;        &lt;td&gt;要素は完全に削除されます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;initial&lt;/td&gt;        &lt;td&gt;このプロパティをデフォルト値に設定します。 初期について読みます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;inherit&lt;/td&gt;        &lt;td&gt;親要素からこのプロパティを継承します。 継承について読みます。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;「div」タグは基本displayが「block」に設定されています。「block」の場合は「width」が基本「100%」です。&lt;/p&gt;&lt;p&gt;なので上の例では「display」を「initial」に設定して「width」を設定しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また「position」のスタイルは要素の位置を決めるものです。&lt;/p&gt;&lt;p&gt;基本的にhtmlタグはとキュメンとスタイルで上から下、左から右方法で作成します。でも要素によって位置を変わりたい時がありますね。その時に使います。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;値&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;static&lt;/td&gt;        &lt;td&gt;デフォルト値。 文書フローに表示されるように、要素は順番にレンダリングされます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;absolute&lt;/td&gt;        &lt;td&gt;要素は最初に配置された（静的ではない）親要素に対して配置されます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;fixed&lt;/td&gt;        &lt;td&gt;要素はブラウザウィンドウに対して相対的に配置されます。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;relative&lt;/td&gt;        &lt;td&gt;要素は通常の位置を基準にして配置されるため、「left：20px」は要素の左位置に20ピクセルを追加します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;sticky&lt;/td&gt;        &lt;td&gt;要素は、ユーザーのスクロール位置に基づいて配置されます。&lt;br&gt;スティッキー要素は、スクロール位置に応じて、相対要素と固定要素を切り替えます。 ビューポートで指定されたオフセット位置が満たされるまで相対的な位置に配置されます-そして、（position：fixedのように）所定の位置に「固定」されます。&lt;br&gt;注：ie / edge 15以前ではサポートされていません。 -webkit-プレフィックス付きのバージョン6.1のsafariでサポートされています。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;initial&lt;/td&gt;        &lt;td&gt;このプロパティをデフォルト値に設定します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;inherit&lt;/td&gt;        &lt;td&gt;親要素からこのプロパティを継承します。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;上の例は「absolute」で設定しました。「div」の親要素は「body」なので、画面の一番上、左、基準で「top」が「100px」、「left」が「100px」を設定します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「position」と「display」はよく使わないみだいですが、たくさん使うしすごく大事なスタイル設定です。&lt;/p&gt;&lt;p&gt;特に「display」で「none」設定を利用して見えたり、見えなかったりする動的な設定を作ることができるし、「position」で「fixed」や「absolute」を設定してメニューの位置を決めるし動的に動くこともできます。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;例&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;style&gt;  .test:hover {    display:none;  }.table-responsive table td:nth-child(1),.table-responsive table th:nth-child(1){  white-space:nowrap;}&lt;/style&gt;&lt;div style=&quot;height:40px;&quot;&gt;&lt;input type=&quot;button&quot; class=&quot;test&quot; value=&quot;これをクリックできますか？&quot; onclick=&quot;alert(&apos;まじで？&apos;);&quot;&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;上の例はマウスをボタンの上に置くとhoverの選択子によって「display」を「none」に設定します。&lt;/p&gt;&lt;p&gt;つまり、マウスを上に置くとボタンがなくなりますね。お試してください。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/129.html</guid><pubDate>Wed, 29 Jan 2020 22:58:35 +0900</pubDate></item><item><title>[PHP] エラーページ処理方法(追加: ob_cleanとdie関数使用方法)</title><link>https://www.nowonbun.com/152.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でphpでエラーメッセージを処理する方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/147.html&quot; target=&quot;_blank&quot;&gt;[php] fatal及びnotice,、warningメッセージ処理する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを開発する時にはこのエラーメッセージは重要です。エラーメッセージを見て間違ったことを修正するし、予想以外が発生することを確認しなければならないです。&lt;/p&gt;&lt;p&gt;でも、本番のサービスは違います。実際にインタネット上でエラーが発生することだと思えばログではエラーを残るけれども、画面上ではみえないようにしなければならないです。&lt;/p&gt;&lt;p&gt;一番、いい条件は初めからエラーが発生しないことがよいですが、全てのユーザの行動パターンを予測できないし作業者のミスや様々な条件で、エラーが必ず発生します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;なので、本番でエラーメッセージが見えることは実際にエラーメッセージでシステム情報や見えたらためな情報が見える可能性もあるし、ユーザがみて完成になれなかったことで見えるのでユーザによってサイトの信頼感が落ちることになります。&lt;/p&gt;&lt;p&gt;サイト内でエラーが発生するとエラーページに遷移しなければならないですが、その設定を「.htaccess」で設定可能です。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/151.html&quot; target=&quot;_blank&quot;&gt;[php] 分散設定ファイル(.htaccess) 使用方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://ja.wikipedia.org/wiki/http%e3%82%b9%e3%83%86%e3%83%bc%e3%82%bf%e3%82%b9%e3%82%b3%e3%83%bc%e3%83%89&quot; target=&quot;_blank&quot;&gt;httpステータスコード&lt;/a&gt;&lt;/p&gt;&lt;p&gt;(エラーコードをみながらみると理解しやすいです。)&lt;/p&gt;&lt;p&gt;上のエラーは我々がよく知っている「404」エラーに関して対応しました。404エラーはウェブページで当該なページが無い場合に発生することです。&lt;/p&gt;&lt;p&gt;先「.htaccess」をみれば「404」エラーが発生すると「/error?code=404」にrewriteします。&lt;/p&gt;&lt;p&gt;また、rewriteruleによって「index.php?htaccess=error&amp;amp;code=404」に変換して遷移します。index.phpの中でエラーがある場合にエラーコードによってページを読み込んで画面に掲示します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=817&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;imageフォルダ中で実際に「test」ファイルは存在しません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=816&quot; data-filename=&quot;002.png&quot; style=&quot;width: 431px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;なので「404」エラーが発生します。&lt;/p&gt;&lt;p&gt;上の例はサーバ上でエラーが発生したことで、ソース内部でエラーが発生する時の処理です。&lt;/p&gt;&lt;p&gt;上の例はパラメータがnullかどうかでエラーが表示されるように実装しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=818&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の結果はdataのパラメータに「1」というデータを入れるとhttp statusが200になりますね。200は正常です。&lt;/p&gt;&lt;p&gt;ウェブページも「1」という結果が表示されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=819&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の結果はdataのパラメータにnullをいれる(何も入力してない状況)と「404」エラーになります。&lt;/p&gt;&lt;p&gt;上のソースで「response_error」関数に404のデータを入力したから「404error」ページが表示されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここでphp組込関数として「ob_clean」と「die」関数を使いました。&lt;/p&gt;&lt;p&gt;phpは「&lt;!--?hp ?--&gt;」領域の以外にはhtmlマークで作成します。&lt;/p&gt;&lt;p&gt;そのhtmlマークはサーバからresponseする時バッファにstringタイプで格納していますよ。なので途中でincludeやphp計算式でバッファにbodyデータを書き込むと上から順番処理で格納されることです。&lt;/p&gt;&lt;p&gt;そのバッファをクリアする関数がob_cleanです。つまり、htmlタグをたくさん書いてもphpファイルの一番下に「ob_clean」を呼出すと空ページが表示されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「die」の場合は意味としてはエラーが発生するらしいな関数ですが、実は「die」が呼出したところで処理を止まって画面に表示するという意味です。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.ob-clean.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.ob-clean.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/die&quot; target=&quot;_blank&quot;&gt;https://www.php.net/die&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/152.html</guid><pubDate>Wed, 29 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] 分散設定ファイル(.htaccess) 使用方法</title><link>https://www.nowonbun.com/151.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述まではブラウザでphpファイルを接続しようと思ったら「ホスト名+ファイル名」で接続しました。つまり「index.php」ファイルを作成したら「http://localhost/index.php」で接続しました。&lt;/p&gt;&lt;p&gt;そのままにウェブサービスを開始しても問題ないですが、phpファイルでクラスだけあるファイルなら空ページが見えるし、ウェブサービス側のディレクトリが漏れるのでセキュリティに考えては良くないです。&lt;/p&gt;&lt;p&gt;そうしたら直接にファイルを接続する方法ではなく、c#のmvcみたいにアドレスのディレクトリだけでphpを接続できるような設定ファイルがありますが、それが分散設定ファイル(.htaccess)です。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/howto/htaccess.html&quot; target=&quot;_blank&quot;&gt;https://httpd.apache.org/docs/2.4/en/howto/htaccess.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先に分散設定ファイルを使うように「.htaccess」の構造に関してしらべましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=808&quot; data-filename=&quot;001.png&quot; style=&quot;width: 400px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のイメージみたいにファイル名はなしで拡張子だけ「.htaccess」に生成しましょう。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;options -multiviews&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;このオプションはrequestデフォルト要請設定と関係があります。要請urlがルート(root)、つまり「ホスト名/」で要請すると「index.php」や「index.html」を探す機能です。&lt;/p&gt;&lt;p&gt;そのデフォルトページは「httpd.conf」に設定しています。&lt;/p&gt;&lt;p&gt;「options +multiviews」にすると当該な機能が設定されますが、「options -multiviews」にするとデフォルトページを探さないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;rewritebase /&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;rewritebaseはサーバのルート(root)ディレクトリを設定することです。&lt;/p&gt;&lt;p&gt;基本的に「httpd.conf」で設定されている「documentroot」でルートに設定されていますが、フレームワークによって下位ディレクトリに設定する場合に設定することです。&lt;/p&gt;&lt;p&gt;上の例では詳細していますが、詳細した場合は「httpd.conf」に設定しているままで動きます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;rewriteengine on&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;rewriteengine onは既存のurlパス構造を再構成してurlからデータを受取ることです。&lt;/p&gt;&lt;p&gt;例で「localhost/index.php?idx=1」のurl要請があります。&lt;/p&gt;&lt;p&gt;index.phpページにget方式のidxパラメータに1を入れるという意味です。&lt;/p&gt;&lt;p&gt;でも、rewriteengine on設定すれば「index.php」が「index.php」のページを開く意味ではなく、rewriteruleによって意味が変わります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;options -indexes&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;options -indexesの場合は要請ページがなければディレクト構造を見えるように設定することです。&lt;/p&gt;&lt;p&gt;このオプションが省略するか「options +indexes」に設定した場合に要請ページがないとディレクト構造が見えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=810&quot; data-filename=&quot;002.png&quot; style=&quot;width: 398px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;imageフォルダにno_photo.pngファイルを入れてブラウザで「localhost/image」を接続すると下記の結果になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;##003##&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;rewritecond&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;rewritecondは下のrewriteruleのurl再設定になるようなフィルタの役です。&lt;/p&gt;&lt;p&gt;つまり、「.htaccess」ファイルで上から下の方向で処理しますが、rewritecondの結果がtrueになると「rewriterule」で反映するし、falseになると再設定なしで、urlアドレスままで読み込むことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例えば、すべてのurlのはrewriteruleによって再設定するが、「phpinfo.php」ファイルだけ「rewriterule」を再設定しなずに、そのまま「localhost/phpinfo.php」にしたいと思うと下記とおりに設定になります。&lt;/p&gt;&lt;p&gt;rewritecondのパラメタはサーバ変数、正規表現になります。&lt;/p&gt;&lt;p&gt;使用可能なサーバ変数は下記のapacheマニュアルを参照してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewritecond&quot; target=&quot;_blank&quot;&gt;http://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewritecond&lt;/a&gt;&lt;/p&gt;&lt;p&gt;様々な変数がありますが、筆者もすべて使ったことがありません。普通は「request_filename」と「request_url」が全てです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;request_uriの場合は要請されたurlのアドレス構成要素(例：/index.html)でgetの方法のquery stringは省略されます。&lt;/p&gt;&lt;p&gt;つまり、「localhost/test.php?data=123」で要請されると「/test.php」に表示されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;request_filenameの場合は要請したurlと一致するファイルのパス及びスクリプトの全体ローカルパスです。&lt;/p&gt;&lt;p&gt;request_filenameの場合は検査式で正規表現ではなく、「-d」、「-f」、「-l」で表現しますが、「-d」はディレクトリ、「-f」はファイルの意味になります。&lt;/p&gt;&lt;p&gt;上の例で「request_uri」でphpinfo.phpをフィルタしましたが、「rewritecond %{request_filename} !-f」でオプションを追加すると「phpinfo.php」ファイルが存在する場合にfalseになります。&lt;/p&gt;&lt;p&gt;でも、この場合は特定なphpファイルだけではなく、すべてのphpファイルがフィルタに対象なので、少し意味が違いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;rewriterule&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;rewriteruleとは分散設定ファイルで一番重要な要請urlを最高性することです。&lt;/p&gt;&lt;p&gt;例えば、「localhost/123」ということで要請されると「localhost/index.php?index=123」みたいに要請ルールを変更することです。&lt;/p&gt;&lt;p&gt;再構成しよう正規表現のパターンで分けるパターンの値が$1,$2,$3でデータが分けます。&lt;/p&gt;&lt;p&gt;例えば、「^/([0-9]{4})([0-9]{2})/(.*)$」の式で作成すると「$1」は「([0-9]{4})」の「0かる9のデータで４桁」、「$2」は「([0-9]{2})」の「０から9のデータで2桁」、「$3」すべての文字列の設定になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;後、「qsa,l」を付ける意味ではパラメタの変換ルールですが、?data=123のquery stringがある場合に「htaccess=test&amp;amp;data=123」に変更することです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の設定を反映するようにはhttpd.confでmod_rewrite.soのモジュールを追加しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=811&quot; data-filename=&quot;004.png&quot; style=&quot;width: 746px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後、documentrootの権限でallowoverrideをnoneからallに修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=812&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;documentrootフォルダに「.htaccess」ファイルを作成しましょう。&lt;/p&gt;&lt;p&gt;サブフォルダ(image)に「.htaccess」ファイルを作成しましょう。&lt;/p&gt;&lt;p&gt;.htaccessのファイルはフォルダ別で設定ができますが、rootに「.htaccess」ファイルがあっても上の「image」フォルダに「.htaccess」にいれると「localhost/image/...」には分散設定が再設定になります。&lt;/p&gt;&lt;p&gt;つまり、javascript(js)やスタイルシート(css)、イメージなどはディレクトリを生成して「.htaccess」を別に作成して設定すると「html」の中で設定される「link」を使うことができます。&lt;/p&gt;&lt;p&gt;そして「index.php」で「.htaccess」を設定を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=814&quot; data-filename=&quot;006.png&quot; style=&quot;width: 652px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例は私が「localhost/helloworld」で接続しました。内部で「index.php/htaccess=helloworld」に変換されます。&lt;/p&gt;&lt;p&gt;imageフォルダの場合は「image/.htaccess」によってファイルを読み込みました。「index.php?htaccess=image/no_photo.php」に呼ばれなかったです。&lt;/p&gt;&lt;p&gt;その理由は「image」フォルダの「.htaccess」が反映されたからです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=813&quot; data-filename=&quot;007.png&quot; style=&quot;width: 654px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例は私が「localhost/data.php」で接続したことです。parameterが「data.php」に変換したことを確認できますね。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://httpd.apache.org/docs/2.2/en/howto/htaccess.html&quot; target=&quot;_blank&quot;&gt;https://httpd.apache.org/docs/2.2/en/howto/htaccess.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://stackoverflow.com/questions/15850845/request-exceeded-the-limit-of-10-internal-redirects-due-to-probable-configuratio&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/15850845&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/151.html</guid><pubDate>Tue, 28 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] データベース(mariaDB)を連結して使う方法</title><link>https://www.nowonbun.com/150.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスを開発すると思ったら当たり前にデータベースも使います。もちろん、データを必ずデータベースを使うことではなく、バイナリやエクセルなどでもデータを管理してウェブサービスを立ち上げられます。&lt;/p&gt;&lt;p&gt;でも、データベースよりデータ管理しやすいものでは無いので、データベースをほとんど使うと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データベースの種類としてはoracleやsql server(mssql)、mysql、postgreなど様々な種類がありますが、ここではmariadb(mysql)を使います。&lt;/p&gt;&lt;p&gt;mysqlのインストールは省略します。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/109.html&quot; target=&quot;_blank&quot;&gt;[ubuntu] mariadb(mysql)をインストールする方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/106.html&quot; target=&quot;_blank&quot;&gt;[centos] mariadb(mysql)をインストール&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://mariadb.org/&quot; target=&quot;_blank&quot;&gt;window用ダウンロード&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;sqlクエリは各キーワードは差がありますが、概念は同じです。&lt;/p&gt;&lt;p&gt;phpでデータベースを使うようにはphp.iniを修正しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=804&quot; data-filename=&quot;001.png&quot; style=&quot;width: 431px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;php.iniの中で「extension=mysqli」がありますが、この部分のコメント(;)を除いてapacheを再起動します。&lt;/p&gt;&lt;p&gt;そしてphpinfo()で確認すると「mysqli」がロードされたことを知ることができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=807&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応、phpからデータ取得するソースを実装するため、データベースにデータを挿入しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=806&quot; data-filename=&quot;003.png&quot; style=&quot;width: 473px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データを作成しました。上のデータをphpからデータを取得しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=805&quot; data-filename=&quot;004.png&quot; style=&quot;width: 508px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpからデータベースを接続するようにはmysqli_connectでコネクションを作ります。データベースコネクションはioのコネクションみたいにリソースなので最後には必ずリソース返却(close)しなければならないです。&lt;/p&gt;&lt;p&gt;コネクションを作った後、データベースを選択します。クエリでは「use データベース」と同じです。&lt;/p&gt;&lt;p&gt;そして「mysqli_query」関数でクエリを送るし結果を受け取ります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この例ではmysqli_fetch_assoc関数を使っていますが、mysqli_fetch_rowでも受け取ることが出来ます。&lt;/p&gt;&lt;p&gt;これは一般配列か、連関配列かの差ですが、mysqli_fetch_rowで一般配列(数字で探索)で結果を受け取られるし、mysqli_fetch_assocはカラム名のキーで連関配列で結果を受け取られます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpでは連関配列でも一般配列みたいに数字でデータを取得することができるので、両方使える条件ならmysqli_fetch_rowよりmysqli_fetch_assocがいいじゃないかと思われます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;sqlコネクションはリソースなのでclose関数でリソースしなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.mysqli-connect.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.mysqli-connect.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/mysqli.select-db.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/mysqli.select-db.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/mysqli.query.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/mysqli.query.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/mysqli-result.fetch-assoc.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/mysqli-result.fetch-assoc.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/mysqli.close.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/mysqli.close.php&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/150.html</guid><pubDate>Fri, 24 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] IOに関して</title><link>https://www.nowonbun.com/149.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;i/oとはinput/outoutという意味ですが、プログラムでi/oというとファイル入出力という意味になります。&lt;/p&gt;&lt;p&gt;プログラムを作成してみればpropertyという環境ファイルを読み取りする時もあるし、クライアントにファイルを転送するために読み込む時もあります。&lt;/p&gt;&lt;p&gt;逆にプログラム上でログやデータをデータベースではなく、ファイルで格納するしブラウザからファイルをアップロードされ、ファイルを書き込む時もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=799&quot; data-filename=&quot;001.png&quot; style=&quot;width: 712px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして同じフォルダにある「data.txt」ファイルを読み取ります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=798&quot; data-filename=&quot;002.png&quot; style=&quot;width: 368px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここで「data.txt」ファイルには改行がありますが、ウェブページには一行目で表示されます。参考にウェブブラウザは改行が「&amp;lt;br /&amp;gt;」タグなので、バイナリの「\r\n」や「\n」はブラウザで改行されません。&lt;/p&gt;&lt;p&gt;fopenはファイルコネクションを生成してファイルを開いてfreadでファイルを読み取りします。&lt;/p&gt;&lt;p&gt;最後にfcloseで必ずリソースを返却しなければならないです。そうではなければプログラム上でi/oリソースをずっと使用中になるので、他のセッションで使えなくなります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpはスクリプトなのでrequest&amp;amp;response単位でリソースを自動に返却しますが、プログラムパフォーマンスのため、使用が終わったらすぐリソースを返却しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はファイルを書き込みしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=800&quot; data-filename=&quot;003.png&quot; style=&quot;width: 476px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=801&quot; data-filename=&quot;004.png&quot; style=&quot;width: 295px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;初めにファイルを読み取る時にはfopen関数でパラメータを「r」を使いました。また、書き込む時には「a」を使いました。&lt;/p&gt;&lt;p&gt;上のパラメータはファイルのコネクションのタイプを選べることです。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;モード&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;r&lt;/td&gt;		&lt;td&gt;読み取り専用。ポインタは最初です。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;r+&lt;/td&gt;		&lt;td&gt;読み取り + 書き込み。ポインタは最初です。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;w&lt;/td&gt;		&lt;td&gt;書き込み専用。 ファイルは初期化になります。ファイルが存在しないなら作成します。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;w+&lt;/td&gt;		&lt;td&gt;読み取り + 書き込み。ファイルは初期化します。ファイルが存在しないなら作成します。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;a&lt;/td&gt;		&lt;td&gt;書き込み専用。ポインタは最終です。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;a+&lt;/td&gt;		&lt;td&gt;読み取り + 書き込み。ポインタは最終です。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;x&lt;/td&gt;		&lt;td&gt;書き込み専用。ポインタは最初です。ファイルが存在するとエラーが発生します。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;x+&lt;/td&gt;		&lt;td&gt;読み取り + 書き込み。「ｘ」と同じモードです。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;c&lt;/td&gt;		&lt;td&gt;書き込み専用。ポインタは最初です。このモードで作成した内容は書き直しではなく、文字列が追加する。(テストの結果は書き直すけど。。。)&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;c+&lt;/td&gt;		&lt;td&gt;読み取り + 書き込み。「c」と同じモードです。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e&lt;/td&gt;		&lt;td&gt;開いているデスクリプタで「close-on-exec」フラグを設定しべきです。posix.1-2008互換性のあるシステムでコンパイルされたphpでのみ使用することができます。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;マニュアルをみれば、様々なモードオプションがありますね。でも、筆者は「r,w,a」しか使わないので実は他の機能はよくしりません。&lt;/p&gt;&lt;p&gt;「+」表示があるので、読み取り、書き込みを同時に使えますが、筆者の考えは良くないです。特に「r+」で作成したらポインタが最初になるので内容が追加されることではなく、書き直しになります。&lt;/p&gt;&lt;p&gt;仕様によってポインタを移動して書き直しすることもあると思いますが、ほとんど予想されない結果になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのため、簡単に読み取りは「r」、新しく書き込むは「w」、既存ファイルから内容を追加は「a」を使う方がシンプルで使いやすいです。&lt;/p&gt;&lt;p&gt;上の例はブラウザからファイルをアップロードしたら格納するソースです。ここにはモードオプションで「b」が付けています。&lt;/p&gt;&lt;p&gt;「b」という意味はバイナリですが、ファイルからバイナリを読み取ってバイナリまま書き込みすることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=802&quot; data-filename=&quot;005.png&quot; style=&quot;width: 356px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=803&quot; data-filename=&quot;006.png&quot; style=&quot;width: 737px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ファイルアップロードができました。参考に実際のプログラミングする時にアップロードしたファイルをそのままサーバに書き込むのはセキュリティとして危ないです。&lt;/p&gt;&lt;p&gt;「.php」ファイルをアップロードしてそのphpファイルにサーバ情報などが出力するようにするとハッキングの危険性があるのでです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後、アップロードファイルがバイナリではなく、ただのテキストファイルならバイナリタイプではなく、テキストタイプでも問題ないです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.fread.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.fread.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.fopen.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.fread.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.fwrite.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.fwrite.php&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/149.html</guid><pubDate>Thu, 23 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] Fatal及びNotice,、Warningメッセージ処理する方法</title><link>https://www.nowonbun.com/147.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを開発する時に様々なエラーが発生することがあります。それでtry〜catchを利用してエラー処理をしますが、開発する時に全てのユーザケースを考えることも大変だし、try~catchでも処理ができなくphp側のエラーが発生する時があります。&lt;/p&gt;&lt;p&gt;例えば、ページincludeやrequireする時ですね。&lt;/p&gt;&lt;p&gt;また、phpはエラーではなくてもwarningやnoticeメッセージが出る時もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=781&quot; data-filename=&quot;001.png&quot; style=&quot;width: 632px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=782&quot; data-filename=&quot;002.png&quot; style=&quot;width: 624px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例は1から0で割り算をするとエラーが発生することと$data1の場合はデータ宣言もしなかったのに出力しようと実装したから発生したメッセージです。&lt;/p&gt;&lt;p&gt;(上と下の結果の差はxdebugを設定したかどうかの差です。)&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/146.html&quot; target=&quot;_blank&quot;&gt;phpでxdebugを設定する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;開発中でエラーが発生するとエラーメッセージが出るのは当たり前ですが、サービスのproduction(本番)でエラーの詳細情報がでるのはngですね。エラーメッセージだけではなく、noticeやwaringもngですね。&lt;/p&gt;&lt;p&gt;そのメッセージが画面上で表示されないような方法です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;php.iniで設定する方法&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;php.iniファイルをメモ帳で開くとerror_reportの領域があり、e_allで設定されています。e_allの意味は全てもメッセージを表示する設定です。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;エラーレベル&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_all&lt;/td&gt;        &lt;td&gt;すべてのメッセージと警告&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_error&lt;/td&gt;        &lt;td&gt;致命的なエラー&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_recoverable_error&lt;/td&gt;        &lt;td&gt;ほぼ全てエラー&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_warning&lt;/td&gt;        &lt;td&gt;警告&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_parse&lt;/td&gt;        &lt;td&gt;コンパイル単位のエラーphpのdllの関数のエラー&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_notice&lt;/td&gt;        &lt;td&gt;noticeレベルのメッセージ&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_strict&lt;/td&gt;        &lt;td&gt;noticeレベルのメッセージ、phpの以前バージョンの関数で新バージョンのおすすめ(?)のメッセージ&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_core_error&lt;/td&gt;        &lt;td&gt;php起動エラー&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_core_warning&lt;/td&gt;        &lt;td&gt;php起動警告&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_compile_error&lt;/td&gt;        &lt;td&gt;コンパイル単位のエラー&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_compile_warning&lt;/td&gt;        &lt;td&gt;コンパイル単位の警告&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_user_error&lt;/td&gt;        &lt;td&gt;ユーザエラー(サーバ内の権限関係)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_user_warning&lt;/td&gt;        &lt;td&gt;ユーザ警告(サーバ内の権限関係)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_user_notice&lt;/td&gt;        &lt;td&gt;ユーザnotice(サーバ内の権限関係)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_deprecated&lt;/td&gt;        &lt;td&gt;現在バージョンで使わない関数エラー&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;e_user_deprecated&lt;/td&gt;        &lt;td&gt;現在バージョンで使わないユーザエラー&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=788&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここで全てのメッセージがでないようにするのは「0」を入力したらよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=786&quot; data-filename=&quot;004.png&quot; style=&quot;width: 565px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=783&quot; data-filename=&quot;005.png&quot; style=&quot;width: 542px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも仕様によって違いますが、noticeだけ表示しないようにするとビット演算子を使って「e_all &amp;amp; ~e_notice」で入力したらよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=787&quot; data-filename=&quot;006.png&quot; style=&quot;width: 642px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;全てのメッセージは出るけどnoticeは出ないという意味です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=785&quot; data-filename=&quot;007.png&quot; style=&quot;width: 641px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;phpページでメッセージを設定する方法&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;phpファイルの上の部分でerror_reporting関数を利用して設定できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=784&quot; data-filename=&quot;008.png&quot; style=&quot;width: 556px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参考にエラーページに設定するのは全てのページに設定しべきです。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/147.html</guid><pubDate>Wed, 22 Jan 2020 20:37:23 +0900</pubDate></item><item><title>[PHP] requireとinclude、そして「@」の使用方法</title><link>https://www.nowonbun.com/148.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムプロジェクトを管理するようにはディレクトリやファイルの構成を設定することも重要な部分です。&lt;/p&gt;&lt;p&gt;例えば、javaの場合はパッケージネームがディレクトリ構造でクラス名とファイル名を一致させておいてクラスを早く探せるように設定します。&lt;/p&gt;&lt;p&gt;c#の場合もnamespaceがディレクトリ構造でクラス名がファイル名と一致させます。&lt;/p&gt;&lt;p&gt;上のルールは必ずではないけど、できれば守らなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpの場合は.phpがウェブページなのでクラス名とファイル名を一致することで少し難しい部分があります。でも、できれば合わせることは将来に可読性のため必要です。&lt;/p&gt;&lt;p&gt;そして、最近のプロジェクトは.phpで全開することではなく、.htaccessを利用してmvcモデルに構成するのでクラスようなファイル(.php)とビューファイル(.tpl)を分けることにしますね。&lt;/p&gt;&lt;p&gt;なので、phpもクラス名とファイル名、ディレクトリ名とnamespace名に分けることができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうしたら２つのウェブページを生成して一つのresponseに作りましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=789&quot; data-filename=&quot;001.png&quot; style=&quot;width: 424px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=790&quot; data-filename=&quot;002.png&quot; style=&quot;width: 491px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;index.phpファイルとextension.phpファイルを生成しました。index.phpファイルで「require」関数を利用してextension.phpファイルを読込みました。&lt;/p&gt;&lt;p&gt;extension.phpファイルはクラスしかないので、ブラウザで「localhost/extension.php」に接続しても空ページが表示されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;しかしindex.phpではextensionクラスを宣言してgetdata関数を呼出すので、「localhost/index.php」では結果が「hello world」が表示されますね。&lt;/p&gt;&lt;p&gt;そうすると「require」の使用方法に関しては理解しました。上のindex.phpで「require」キーワード代わりに「include」を入れても同じ結果ができます。&lt;/p&gt;&lt;p&gt;「require」と「include」の使用方法と結果は同じです。&lt;/p&gt;&lt;p&gt;でも、includeする時あるいはrequireする時にファイルがあるかどうかでエラーの差があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=791&quot; data-filename=&quot;003.png&quot; style=&quot;width: 424px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の場合はブラウザで「localhost/index.php」に接続するとエラーが発生します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=792&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;fatalエラーなのでスクリプト解析が止まるのでbodyにある「go!!」も文言が表示されないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=796&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;includeの場合はエラーではなく、警告(warning)ですね。なので、スクリプトが止まらないので、最後「go!!」メッセージまで表示されることを確認できます。&lt;/p&gt;&lt;p&gt;前述でエラーメッセージを設定する方法に関して説明したことがあります。warningメッセージなのでメッセージが見えないようにするとincludeで宣言したページがなくてもエラーメッセージが表示されなくて続けてページが処理します。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/147.html&quot; target=&quot;_blank&quot;&gt;[php] fatal及びnotice,、warningメッセージ処理する方法&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=793&quot; data-filename=&quot;006.png&quot; style=&quot;width: 486px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、エラーや警告の場合はただメッセージがでないように設定することで解決したことではないです。逆にエラーや警告を隠したら本当にエラーになる時に原因を調べることも難しいし、includeやrequireしたページが重要な部分だと思えばwarningだけではなく、requireで宣言してfatalのエラーが発生するようにした方が良いと思います。&lt;/p&gt;&lt;p&gt;その理由で「require」を使います。でも、「include」も必ずエラーではなく、動的要請する時には「include」が使います。&lt;/p&gt;&lt;p&gt;上の例はincludeページをget方式のパラメータで受け取ります。なので、ユーザから受取るパラメータで存在しないページがある可能性がありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=795&quot; data-filename=&quot;008.png&quot; style=&quot;width: 421px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;extension1.phpファイルは存在しないので「it was not loaded」メッセージがでます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=794&quot; data-filename=&quot;007.png&quot; style=&quot;width: 505px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;パラメータがない場合はextension.phpファイルを読み込むので「it was loaded」がでますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例でincludeを変わりにrequireを使うとfatalエラーが発生するので、上の処理ができないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここで「@」を使いましたが説明します。&lt;/p&gt;&lt;p&gt;「@」の場合はページ内でwarningが発生する時にboolデータ(true or false)に受け取ります。&lt;/p&gt;&lt;p&gt;つまり、warningが発生すると「false」、warningが発生しないと「true」をリターンします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;「@」マークの場合はphp内で宣言しない変数を参照することや0で割り算することやioのファイル読み込み中でファイルが存在しないことなどでwarningが発生しますが、その時に使うとよいキーワードです。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;includeとrequireの場合は各include_onceがあるしrequire_onceがあります。&lt;/p&gt;&lt;p&gt;この意味はソースの中で一回に呼出したら次は読み込まないようにするキーワードです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=797&quot; data-filename=&quot;009.png&quot; style=&quot;width: 394px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例を見ればonceが付けるとincludeやrequireの関係しなずに、呼び出しした可否で読み込むか込まないかを決めます。&lt;/p&gt;&lt;p&gt;つまりrequireで読み出しても、include_onceには読み込まないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://andy-carter.com/blog/difference-between-include-and-require-statements-in-php&quot; target=&quot;_blank&quot;&gt;https://andy-carter.com/blog/difference-between-include-and-require-statements-in-php&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/148.html</guid><pubDate>Wed, 22 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] xDebug設定する方法</title><link>https://www.nowonbun.com/146.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でphpでデバッグする方法に関して説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/144.html&quot; target=&quot;_blank&quot;&gt;[php] データ確認関数(var_dump, debug_zval_dump, print_r)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;普通、phpで開発する時にvar_dumpをよく使いますが、var_dumpやエラーが発生する時などのメッセージをもっと正確に分析してくれるライブラリのxdebugがあります。&lt;/p&gt;&lt;p&gt;これからxdebugのライブラリをインストールしましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;まず、phpinfoの関数でphpの環境設定に関して確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=772&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のphp環境設定のページをソースビューにしてソース全てをセレクトせいてコピーしましょう。(ctrl + c)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=778&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後、下記のurlに接続してパッケージ検査をしましょう。&lt;/p&gt;&lt;p&gt;ダウンロードパッケージ検査 : &lt;a href=&quot;https://xdebug.org/wizard.php&quot; target=&quot;_blank&quot;&gt;https://xdebug.org/wizard.php&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=777&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後でパッケージ情報が表示されますが、ダウンロードurlでxdebugライブラリがリンクされ、それを選択してダウンロードしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=780&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;(筆者の考えはphp環境設定情報でphpバージョンとタイプ(thread safeかthread unsafeか)を正確に分析するようにソースビューのデータをコピーペしたと思います。)&lt;/p&gt;&lt;p&gt;ダウンロードしたファイルをphpフォルダのextフォルダにコピーしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=779&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてphp.iniファイルを修正しましょう。&lt;/p&gt;&lt;p&gt;上のダウンロードしたページの3番をみればiniファイルの一番下に入れてください」と書いているのでコピーペすればよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=775&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてサーバを再起動してxdebugセッションがあることを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=776&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;xdebugがphp開発でどのように使うか確認しましょう。&lt;/p&gt;&lt;p&gt;上の例では$obj変数にtestクラスを宣言してbodyの領域でprint関数を呼出しています。&lt;/p&gt;&lt;p&gt;print関数ではtestクラスのdata変数の値を返却していますが、dataの変数は宣言してないです。エラーになるソースですね。&lt;/p&gt;&lt;p&gt;xdebugを設定する前には下記のイメージみたいに出力します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=771&quot; data-filename=&quot;008.png&quot; style=&quot;width: 755px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それがxdebugを設定する後は下記のイメージみたいに出力します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=773&quot; data-filename=&quot;009.png&quot; style=&quot;width: 517px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;call stack表示でどこでエラーが発生したかを追跡ができます。前よりもっと詳しい情報が出るので開発する時に楽になると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実は初めxdebugを設定する理由はeclipseでデバック機能を付いて使おうと思いましたがeclipse側でエラーが発生しますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=774&quot; data-filename=&quot;010.png&quot; style=&quot;width: 364px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;原因はeclipseのバグだといいますが、私の場合は関連資料を調べても解決が出来ないです。もし知ってる方がいらっしゃったらお知らせてください。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://xdebug.org/&quot; target=&quot;_blank&quot;&gt;https://xdebug.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://wiki.eclipse.org/debugging_using_xdebug&quot; target=&quot;_blank&quot;&gt;https://wiki.eclipse.org/debugging_using_xdebug&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://yard.tistory.com/entry/eclipse-php-debug&quot; target=&quot;_blank&quot;&gt;https://yard.tistory.com/entry/eclipse-php-debug&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/146.html</guid><pubDate>Sat, 18 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[Java] JPAのSpring frameworkで依存性注入する方法</title><link>https://www.nowonbun.com/87.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「jpa」の「spring framework」で「di(依存性注入)」に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で「spring framework」設定する方法と「jpa」で「dao」を作成する方法に関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/75.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 35] eclipseでspring web frameworkを利用してウェブサービスプロジェクトを立ち上がる方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/86.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 46] jpaでdaoを生成する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で作成したdaoを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=437&quot; data-filename=&quot;001.png&quot; style=&quot;width: 468px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「dao」クラスを同じパッケージ以外では「new」で割当てられないようにクラスのコンストラクタを「protected」に作成しましょう。&lt;/p&gt;&lt;p&gt;なぜなら、「new」でインスタンスを生成が可能ならdi(依存性注入)が意味がなくなります。でも「private」ではなく、「protected」で作ることは「dao」クラスを継承を可能にして拡張ができるようにしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=434&quot; data-filename=&quot;002.png&quot; style=&quot;width: 595px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてメインページの「helloworld」クラスでメンバー変数で使う「dao」を宣言してアノテーションの「@autowired」を作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=438&quot; data-filename=&quot;003.png&quot; style=&quot;width: 812px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のメンバー変数にdi(依存性注入)によって自動にインスタンスが生成されます。&lt;/p&gt;&lt;p&gt;その設定を当該なコントローラ設定ファイル(mvc-config.xml)で「bean」を追加します。その後、メンバー変数名と「id」名を一致します。そして追加するインスタンスクラスをパッケージ名含めて作成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=439&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「helloworld」の「index.html」で「user」テーブルからデータを持ち来ます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=433&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後、プログラムを起動してデータが出力するかを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=436&quot; data-filename=&quot;006.png&quot; style=&quot;width: 514px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=435&quot; data-filename=&quot;007.png&quot; style=&quot;width: 287px;&quot;&gt;&lt;/p&gt;&lt;p&gt;この依存性注入は毎度「userdao」を使うたびにインスタンスを生成することではなく、シングルトンかつ「flyweight」パターン式でシステムの中で一回に生成するとずっと再使用する形です。&lt;/p&gt;&lt;p&gt;なのでシングルトンの良い点と拡張性を持っている「di」(依存性注入)の特徴です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.tutorialspoint.com/spring/spring_autowired_annotation&quot; target=&quot;_blank&quot;&gt;https://www.tutorialspoint.com/spring/spring_autowired_annotation&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;添付 - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=440&quot; data-filename=&quot;springtestweb.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; springtestweb.zip&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/87.html</guid><pubDate>Fri, 17 Jan 2020 07:48:16 +0900</pubDate></item><item><title>[Java] JPAのDAOをFactoryパターンで管理する方法</title><link>https://www.nowonbun.com/88.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で「spring web framework」で「@autowired」アノテーションを通って依存性注入(di)を説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/87.html&quot; target=&quot;_blank&quot;&gt;jpaのspring frameworkでdi(依存性注入)を利用してマッピングする方法(@autowired使用方法)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも「spring web framework」の「@autowired」を利用してマッピングはコントローラのクラスで行っています。つまり、コントローラクラスではない場合はそのアノテーションで割当てられないということですね。&lt;/p&gt;&lt;p&gt;しかし、その「dao」を取得するために全てのクラスをコントローラクラスを継承することをできないでしょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのために、依存性注入以外にファクトリーパターンを作ってdaoを管理することが必要です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=441&quot; data-filename=&quot;001.png&quot; style=&quot;width: 480px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「dao」はデータ用のエンティティではないので何回に割当て(new)をする必要がありません。「factorydao」を生成して内部は「flyweight」パターンで一回にインスタンスを生成すれば再使用するように設計するとよいと思います。&lt;/p&gt;&lt;p&gt;そして「dao」クラスは依存性注入のためコンストラクタを「protected」で作成しましょう。そうすれば「factorydao」を通りなく割当てができないですね。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=444&quot; data-filename=&quot;002.png&quot; style=&quot;width: 595px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「factorydao」を作成しましょう。&lt;/p&gt;&lt;p&gt;上のクラスを使うようにコントローラではないクラスを作ってコントローラからよびだしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=442&quot; data-filename=&quot;003.png&quot; style=&quot;width: 504px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=447&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてプログラムを起動して確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=443&quot; data-filename=&quot;005.png&quot; style=&quot;width: 514px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=445&quot; data-filename=&quot;006.png&quot; style=&quot;width: 287px;&quot;&gt;&lt;/p&gt;&lt;p&gt;factorydaoでも依存性注入(di)とは少し形が違いますが、流れは似ている構造になりました。&lt;/p&gt;&lt;p&gt;実はfactorydaoと依存性注入(di)を一つのクラスで管理ができますが、そこまで厳しく設計する必要があるかな。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;添付 -　&lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=446&quot; data-filename=&quot;springtestweb.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; springtestweb.zip&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/88.html</guid><pubDate>Fri, 17 Jan 2020 07:48:07 +0900</pubDate></item><item><title>[Java] Web serviceのweb.xmlでエラーページ設定</title><link>https://www.nowonbun.com/89.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で「spring framework」を設定するため、「web.xml」を設定したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/75.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 35] eclipseでspring web frameworkを利用してウェブサービスプロジェクトを立ち上がる方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そろそろプロジェクトの最後の段階ですね。「error」ページのredirect設定する方法ですね。&lt;/p&gt;&lt;p&gt;我々が「webservice」の初期設定でプログラムを作成してエラーが発生する時に表示されるページは下記とおりになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=448&quot; data-filename=&quot;001.png&quot; style=&quot;width: 727px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも実際に本番サービスで上のイメージみたいにエラーメッセージがでると困りますね。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;エラーメッセージがちゃんと出ることでは問題ないですが、なにかプログラムが完成してない感じなので何かシステム不安感ができますね。&lt;/p&gt;&lt;p&gt;「web.xml」設定ファイルでエラーが発生するとurlを決めることが出来ます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=449&quot; data-filename=&quot;002.png&quot; style=&quot;width: 636px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「errer.html」ページの「controller」と「view」を追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=450&quot; data-filename=&quot;003.png&quot; style=&quot;width: 581px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=456&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;また、エラーを発生しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=451&quot; data-filename=&quot;005.png&quot; style=&quot;width: 554px;&quot;&gt;&lt;/p&gt;&lt;p&gt;おー、エラーページを我々が設定するようになりました。&lt;/p&gt;&lt;p&gt;そうするとエラーコードによって設定も可能です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=452&quot; data-filename=&quot;006.png&quot; style=&quot;width: 458px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「404」エラーになると別途のページにredirectしました。&lt;/p&gt;&lt;p&gt;エラーコードではなく、「exception」別でページを分けることも出来ます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=454&quot; data-filename=&quot;007.png&quot; style=&quot;width: 821px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今回はわざわざexceptionを発生しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=453&quot; data-filename=&quot;008.png&quot; style=&quot;width: 532px;&quot;&gt;&lt;/p&gt;&lt;p&gt;エラーページ設定はすごく簡単ですが、以外に忘れやすい部分ですね。この部分まで細かく設計してもっと完成されるプログラムにならなければならないですね。&lt;/p&gt;&lt;p&gt;添付 - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=455&quot; data-filename=&quot;springtestweb.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; springtestweb.zip&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://stackoverflow.com/questions/2956167/how-can-i-catch-all-errors-to-same-page-from-web-xml&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/2956167/how-can-i-catch-all-errors-to-same-page-from-web-xml&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/89.html</guid><pubDate>Fri, 17 Jan 2020 07:47:57 +0900</pubDate></item><item><title>[Java] Web Spring frameworkでfilter設定</title><link>https://www.nowonbun.com/90.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスを立ち上がる時にセッションや認証のため、グローバル設定しなければならない時があります。&lt;/p&gt;&lt;p&gt;例えば、ログイン可否やユーザ権限(permission)確認などですね。&lt;/p&gt;&lt;p&gt;その時にそれぞれのページにログインやユーザ情報を呼出す関数を関数開始するところで実装してもよいですが、もっとプログラムらしく設定するほうがフィルターの機能です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;フィルターは「web.xml」でどのクラスを呼出すかを設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=459&quot; data-filename=&quot;001.png&quot; style=&quot;width: 729px;&quot;&gt;&lt;/p&gt;&lt;p&gt;説明すれば「filter-mapping」タグで「filter-name」はどのフィルターを使うかを設定することで、「url-pattern」の場合はどのurlパータンで呼出すかを設定するところです。&lt;/p&gt;&lt;p&gt;もちろん「*」で全体設定も可能ですが、その場合は「js」ファイルや「css」、イメージファイルまでフィルターを通ることになります。必要なら全てのコンテンツにフィルターをかけることが良いですがその場合はパーフォーマンスを考えるとしないほうが良いと思いますね。&lt;/p&gt;&lt;p&gt;「filter」タグは「filter-name」を設定して「filter-mapping」タグに連携するような「filter」名を決めて「filter-class」の場合はどの「filter」クラスを呼出すかを設定します。&lt;/p&gt;&lt;p&gt;「init-param」は「filter」クラス中で使うパラメタ値になります。私の場合は特定なurlを除くように設定します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると「filter」クラスを生成しましょう。「web.xml」では「controller.filter.webfilter」クラスを設定しましたので「package」は「controller.filter」で設定して、クラス名は「webfilter」で設定してクラスを生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=461&quot; data-filename=&quot;002.png&quot; style=&quot;width: 528px;&quot;&gt;&lt;/p&gt;&lt;p&gt;フィルタクラスはfilterインタフェースを継承します。&lt;/p&gt;&lt;p&gt;そうするとfilterインタフェースは３つのメソッドが宣言していますね。(destory, init, dofilter)&lt;/p&gt;&lt;p&gt;「destory」メソッドは別に気にしなくてもいいです。「init」の場合はクラスがインスタンスが生成する時に呼び出せるメソッドです。コンストラクタと似ているかな。&lt;/p&gt;&lt;p&gt;私の場合は「web.xml」で設定したフィルタで除くページを設定します。&lt;/p&gt;&lt;p&gt;そしてブラウザから要請されるとコントローラを呼出す前にfilterクラスの「dofilter」が呼び出せます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のソースの場合はコントローラでログインしたと思うとそのログインクラスをセッションに格納します。&lt;/p&gt;&lt;p&gt;もし、そのセッションが「null」ではない状況、ログイン状態といえば「chain.dofilter」を呼出してコントローラに移動します。&lt;/p&gt;&lt;p&gt;でも、セッションが「null」の状況、つまりログインではない状況なら「web.xml」で設定したチェックしない「url」かをチェックしてそのこともなければエラーコードを「403」を発生して「error.html」ページにredirectします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;もし、「web.xml」で「error.html」を設定しなければセッションがない状況をチェックしてクラ返してフィルタをチェックするので無限ループに落ちます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;後、springコントローラには「test.html」と「error.html」のパターンを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=462&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のソースを見れば私は「web.xml」で「index.html」と「error.html」の場合は通過するように設定しました。&lt;/p&gt;&lt;p&gt;ただ、「index.html」で接続すると問題なく、表示されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=457&quot; data-filename=&quot;004.png&quot; style=&quot;width: 517px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも、「test.html」で打つと「error.html」ページに遷移されますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=458&quot; data-filename=&quot;005.png&quot; style=&quot;width: 630px;&quot;&gt;&lt;/p&gt;&lt;p&gt;添付 - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=460&quot; data-filename=&quot;springtestweb.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; springtestweb.zip&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/90.html</guid><pubDate>Fri, 17 Jan 2020 07:47:49 +0900</pubDate></item><item><title>[Java] Spring web frameworkで発生する文字化けのEncoding設定</title><link>https://www.nowonbun.com/91.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、初めにプロジェクトを立ち上がることに関して説明しなければならなかったですが、漏れがありまして追加します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応ウェブサービスの流れと言うとブラウザから要請するとウェブサーバは要請されたホスト名とパラメタによって応答ヘッダやhtmlデータを作成して返事します。&lt;/p&gt;&lt;p&gt;サーバからブラウザに返事する時に文字エンコードは「jsp」で設定するので、問題ないですが、ブラウザからサーバに要請する時には別途で設定しないと文字化けになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=463&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 547px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=464&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 549px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例で「こんにちは」と日本語でsubmitしましたが、結果は文字化けになりました。「結果 - 」と言うことは文字化けしなく、綺麗に表示されますね。&lt;/p&gt;&lt;p&gt;その理由はサーバからブラウザは文字化けがないですが、ブラウザからサーバ側に送信する時文字化けになると意味です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「web.xml」の設定をみましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=466&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のフィルタを追加しましょう。前日でフィルタに関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/90.html&quot; target=&quot;_blank&quot;&gt;[javaスタディ- 50] web spring frameworkでfilter設定&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;フィルタで適用するので全コントローラに反映しますね。「url-pattern」で「*」をしましたが、必要ならパターン別でエンコーディングを変わることも出来ます。&lt;/p&gt;&lt;p&gt;パラメタでは「utf-8」を入れました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=465&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 537px;&quot;&gt;&lt;/p&gt;&lt;p&gt;文字化けがなくなりました。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/91.html</guid><pubDate>Fri, 17 Jan 2020 07:47:39 +0900</pubDate></item><item><title>[Java] Java servletでインスタンスを初期する方法</title><link>https://www.nowonbun.com/92.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスを起動して後、それぞれのコントローラやファクトリー、クラスはウェブ要請とか呼び出されない以上、インスタンス生成できないです。&lt;/p&gt;&lt;p&gt;上の例はajaxで「test.json」を呼出します。「test.json」の場合は「test」クラスの「index」メソッドが呼出します。その中で「dao」クラスを呼出し、「jpa」フレームワークでデータを取得します。&lt;/p&gt;&lt;p&gt;でもこの「jpa」フレームワークは初めインスタンスを生成する時に時間がかかりますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=467&quot; data-filename=&quot;001.png&quot; style=&quot;width: 527px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=468&quot; data-filename=&quot;002.png&quot; style=&quot;width: 485px;&quot;&gt;&lt;/p&gt;&lt;p&gt;初めの呼出し時には2秒の時間がかかりましたが、２つめは1秒の時間もかからないです。なぜかいうと「jpa」フレームワークのインスタンス生成時間です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=470&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも一回インスタンスが生成されるとシングルトンでメモリ上の存在されます。なので２つめはインスタンス生成なしで再参照するのでインスタンス生成時間がかからないです。&lt;/p&gt;&lt;p&gt;私の場合は「jpa」フレームワークだけで説明しましたが、もし大きいプロジェクトだっと初期起動するライブラリやクラスがすごくあると思います。&lt;/p&gt;&lt;p&gt;その時に初期処理するウェブページを作ってそのクラスで初期処理することを実装してデプロイした後呼出してもできますね。でも、その方法より「web.xml」でデプロイした後、自動に呼び出せるようにできますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=471&quot; data-filename=&quot;004.png&quot; style=&quot;width: 825px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「web.config」で「servlet-name」は「servlet」タグの中で必須タグでユーニック名を入力しましょう。「servlet-class」タグはプログラムが起動する時に実行するクラス名を設定します。&lt;/p&gt;&lt;p&gt;そして「load-on-startup」は実行順番ですが「0」から始まります。つまり、「servlet」タグが複数がある場合、低い番号から同じ数字なら「xml」で上から実行順番を決めます。&lt;/p&gt;&lt;p&gt;参考で「0」の以下の数字は実行しません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=469&quot; data-filename=&quot;005.png&quot; style=&quot;width: 582px;&quot;&gt;&lt;/p&gt;&lt;p&gt;プログラムが起動する時、「initcontroller」クラスで「jpa」フレームワークを起動されるからウェブページを初めに接続しても応答時間が早いですね。&lt;/p&gt;&lt;p&gt;私の場合は「jpa」のフレームワークのメモリに上がるように実行しましたが、ioリソースを割当てるためや、サーバソケットを起動するためによく使えますね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/92.html</guid><pubDate>Fri, 17 Jan 2020 07:47:31 +0900</pubDate></item><item><title>[Java] JPAでDAOを生成する方法</title><link>https://www.nowonbun.com/86.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で「jpa」で「entitymanager」を持ち来てデータを取得するところまで説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/85.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 45] jpaでトランザクションの使用方法とオブサーバーパターンで共通トランザクション関数を作り方&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/82.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 42] jpaでpersistance.xml設定とentityクラス設定(@generatedvalue設定)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;daoとは「data access object」というr略語です。実は「jpa」では別に「dao」を作らなくてもトランザクション設定でデータを取得するのは問題ないですが、プロジェクト設計することでソース管理のため、作ることですね。&lt;/p&gt;&lt;p&gt;それで「dao」の場合は「entity」と合わせて作りますが、「dao」の共通関数とクラスを統合するように抽象クラスの「abstractdao」を先に作りますね。&lt;/p&gt;&lt;p&gt;トランザクションに関しては前述しましたので省略します。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/85.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 45] jpaでトランザクションの使用方法とオブサーバーパターンで共通トランザクション関数を作り方&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の「findone」、「create」、「update」、「delete」の場合は「jpql」を作成しなくて、追加、更新、削除ができるので共通で作成しました。その検索の場合は条件と形が多いのでトランザクションを受け取って作成するようにしましょう。&lt;/p&gt;&lt;p&gt;共通クラスは上で各「dao」クラスを作りましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=431&quot; data-filename=&quot;001.png&quot; style=&quot;width: 481px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「dao」の中では「select」の「jpql」を集まってプロジェクトの中でクエリを一つのパッケージで管理しましょう。&lt;/p&gt;&lt;p&gt;私の場合は上のソースみたいにdaoを管理します。特徴はトランザクションに関してラムダ式で使うから「open」と「close」に関して気にしなくてもいいし、正常なら「commit」、エラーなら「rollback」処理まで自動に処理してくれますね。&lt;/p&gt;&lt;p&gt;また、全てのクエリを「dao」で管理するので、データベース関係クラスの業務クラスが分け、データベースが修正されてもソース全体ではなく、ここのdaoだけ修正することで作業ができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上をメイン関数で使いましょう。&lt;/p&gt;&lt;p&gt;添付 - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=432&quot; data-filename=&quot;jpaexample.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; jpaexample.zip&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/86.html</guid><pubDate>Fri, 17 Jan 2020 07:46:48 +0900</pubDate></item><item><title>[Java] JPAでトランザクションの使用方法とオブサーバーパターンで共通トランザクション関数を作り方</title><link>https://www.nowonbun.com/85.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データベースでデータの無欠性を保持するためにはオブサーバーパターンでトランザクションを使うべきです。トランザクションを利用して無欠性(データベースの中で重複データ、整合性が合わないデータがない状況)を保持するという意味ではエラーが発生する時にコミット、ロールバックが適切的にできるということですね。&lt;/p&gt;&lt;p&gt;例えば、「user」テーブルの派生で「info」テーブルがあります。&lt;/p&gt;&lt;p&gt;「info」のカラムでレファレンスが「user」テーブルと紐付いて「not null」の条件になっています。&lt;/p&gt;&lt;p&gt;そうすると「info」データにデータを入れるようには先に「user」テーブルにもデータをインサートあるいは既存でデータが必要です。それで先に「user」テーブルにデータをインサートして「info」テーブルにインサートしようと実装しましたが、プログラムで問題が発生してインサートができなくなりました。&lt;/p&gt;&lt;p&gt;そうなら先にインサートした「user」テーブルのデータをロールバックしなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ただ、私は２つのテーブルで考えたんですが、もしテーブルレファレンスがすごく複雑だし様々で紐付いたと思えばエラーが発生する時にデータを全てロールバックしなければならないです。&lt;/p&gt;&lt;p&gt;実は上のソースは実行もできないです。ただ、例のために実装したことです。&lt;/p&gt;&lt;p&gt;上の例をみれば私が「user」テーブルにインサートして「info」テーブルにインサートしました。そしてエラーが発生します。&lt;/p&gt;&lt;p&gt;エラーが発生すればこのデータはインサートしなかったので、ロールバックをしなければならないです。&lt;/p&gt;&lt;p&gt;そうすれば、上の状況になると「user」テーブルと「info」テーブルにデータを探して削除しなければならないです。ただ、生成したことは削除で終わりますが、更新したとは解決が難しくなります。&lt;/p&gt;&lt;p&gt;それでトランザクションが必要です。&lt;/p&gt;&lt;p&gt;上のソースをみれば「entitymanager」から「transaction」を持ち来ます。そして「transaction.begin()」でトランザクションを開始すると「commit」になる前にデータを一時的に持っていって「commit」になると一括でデータを処理します。途中でエラーが発生して「rollback」関数が呼ばれたらデータを変わらないです。&lt;/p&gt;&lt;p&gt;そのため、トランザクションを使わなければならない理由になります。参考は「select」の検索だけにはトランザクションが必要ないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;トランザクションの意味は分かりました。&lt;/p&gt;&lt;p&gt;そうすれば、上のソースのスタイルをオブサーバーパターンとラムダ式を利用してもっと見やすく作りましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/60.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 20] 匿名クラス、そしてラムダ式(lambda expression)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;上のソースにはトランザクションをラムダ式で結び込みました。&lt;/p&gt;&lt;p&gt;それでデータベースを接続してデータを入れる時には共通トランザクション関数を使用するとエラーがある場合はロールバックをするし、なければコミットします。&lt;/p&gt;&lt;p&gt;上のパターンがオブサーバーパターンですが、デザインパターンを使うと上のソースらしく、可読性が上がりますね。&lt;/p&gt;&lt;p&gt;添付 - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=430&quot; data-filename=&quot;main.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; main.zip&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/85.html</guid><pubDate>Fri, 17 Jan 2020 07:46:38 +0900</pubDate></item><item><title>[Java]  JPAのQuery を作り方</title><link>https://www.nowonbun.com/84.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;jpaでデータを取得する方法に関しては三つがあります。&lt;/p&gt;&lt;p&gt;一つ目は「find」関数を使って持ち来ることです。二つ目は「createquery」を通って持ち来る方法、「createnativequery」の関数で持ち来る方法があります。&lt;/p&gt;&lt;p&gt;「find」関数はクラスタイプを渡して持ち来る単純な方法です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=422&quot; data-filename=&quot;001.png&quot; style=&quot;width: 485px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例の方法が一番シンプルですが派生「info」データが制御できません。例えば「age」データが「80」以上のデータを持ち込みたいなら、検索上でデータを持ち込んでソース上で「if」文で分岐する方法しかないです。&lt;/p&gt;&lt;p&gt;もしかして、「info」データが何万件だと思ったら、多いリソースでパフォーマンスが落ちると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;次は「createnativequery」で持ち来る方法です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=423&quot; data-filename=&quot;002.png&quot; style=&quot;width: 611px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の方法は「sql」クエリをそのまま入れて検索して持ち来る方法です。実はこの方法を一番推薦しません。率直にこんなに使う方法なら「jpa」を使う意味がありません。検索してもらったデータもentityマッピングができません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;次は「createquery」で持ち来る方法です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=424&quot; data-filename=&quot;003.png&quot; style=&quot;width: 692px;&quot;&gt;&lt;/p&gt;&lt;p&gt;実は上の方法が「jpa」側では一番理想的です。「entity」クラスにもちゃんとマッピングできるし、派生データのも「fetch」で管理でいます。&lt;/p&gt;&lt;p&gt;でも、この方法は一般のsqlではなく、「jpql(java persistence query language)」というクエリです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私もjpqlに関して100%知ってることではないですが、「select」以外は「sql」と似てます。&lt;/p&gt;&lt;p&gt;「select」だけ違いますが、代表的に「join」の方法、テーブル名ではなくエイリアスを使わなければならないことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;jpql&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;1. jpqlはテーブル名ではなくentity名を使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=425&quot; data-filename=&quot;004.png&quot; style=&quot;width: 532px;&quot;&gt;&lt;/p&gt;&lt;p&gt;私の場合はテーブル名と「entity」名(クラス名)と一致していますが、違うなら「entity」名を使います。&lt;/p&gt;&lt;p&gt;もちろん、where節とかでテーブルカラム名を使うことがあれば、変わりに変数名を使います。&lt;/p&gt;&lt;p&gt;※大小文字を区分します。&lt;/p&gt;&lt;p&gt;※変数のアトリビュートで「@entity(name=変数名)」を設定した場合、変数名ではなくアトリビュート名で設定した値で動きます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;2.「join」する時には「fetch」を使います。「fetch」を使わなければ、派生クラスの値が検索条件によって表示されません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=429&quot; data-filename=&quot;005.png&quot; style=&quot;width: 470px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=426&quot; data-filename=&quot;006.png&quot; style=&quot;width: 465px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=428&quot; data-filename=&quot;007.png&quot; style=&quot;width: 602px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の場合は「user」の場合は「info」の「age」が「100」以上を持っている「user」データを検索しました。派生「infos」にも「age」が「100」以上の場合だけあります。　でも下の場合は「user」は正しく「info」の「age」が「100」以上を持っている「user」データを検索しました。&lt;/p&gt;&lt;p&gt;でも、派生「infos」の場合は「age」が「100」以上だけではなく、すべてのデータが検索されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてパラメータバインディングは「:」を使用してパラメータ変数を指定して「setparameter」を利用してパラメータを設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=427&quot; data-filename=&quot;008.png&quot; style=&quot;width: 570px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後で「count」や「max」などの集計関数、「group by」は既存sqlと同じです。&lt;/p&gt;&lt;/blockquote&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/84.html</guid><pubDate>Fri, 17 Jan 2020 07:46:27 +0900</pubDate></item><item><title>[Java] JPAのEntityクラス設定(Cascade, fetch)</title><link>https://www.nowonbun.com/83.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページは「jpa」の「entity」クラス設定(cascade,fetch)について調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で「jpa」の基本設定と「identity(auto_increment)」設定に関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/81.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 41] eclipseでjpaフレームワーク設定する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/82.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 42] jpaでpersistance.xml設定とentityクラス設定(@generatedvalue設定)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fetch設定&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- fetch設定はデータを持ち来る時、レファレンスのデータをいつ持ち来るかに関して設定する項目です。設定タイプは「eager」と「lazy」があります。&lt;/p&gt;&lt;p&gt;「eager」の場合は「データ」を持ち来る時に「join」してデータを持ち来るオプションです。&lt;/p&gt;&lt;p&gt;「lazy」の場合はデータの要請がある時データを持ち来るオプションですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=414&quot; data-filename=&quot;001.png&quot; style=&quot;width: 543px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例みたいに「user」クラスの「info」データに「fetch.lazy」設定をしました。そして「eclipse」で下記とおりにソースを作成してデバックで確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=418&quot; data-filename=&quot;002.png&quot; style=&quot;width: 836px;&quot;&gt;&lt;/p&gt;&lt;p&gt;デバックでデータを確認すると「user」の変数にデータがありません。その後、「size()」関数を実行し、もう一回に「user」の変数を確認するとデータがありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=420&quot; data-filename=&quot;003.png&quot; style=&quot;width: 842px;&quot;&gt;&lt;/p&gt;&lt;p&gt;すなわち、このデータは「size()」関数でデータを呼出す時、データベースに接続して「user」テーブルのキーで検索して持ち込んたデータになります。&lt;/p&gt;&lt;p&gt;今回は「fetch.eager」に設定を変更しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=413&quot; data-filename=&quot;004.png&quot; style=&quot;width: 460px;&quot;&gt;&lt;/p&gt;&lt;p&gt;もう一回にデバックしてデータを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=421&quot; data-filename=&quot;005.png&quot; style=&quot;width: 843px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今回は「lazy」設定と違い、「size()」関数でデータを呼び出さなくてもデータがもう設定されますね。&lt;/p&gt;&lt;p&gt;つまり、「fetch.lazy」と「fetch.eager」の差はデータを参照する時に持ち込むか初めから「join」で持ち込むかのことですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この差異はデータの扱う戦略に関して違います。「user」データが少ないし持ち込んで使わなければならない時は「eager」が効率的ですが、「user」データと「info」データが大量だし、参照する時が参照条件によって違えば「lazy」を通ってリーソスを少なくなった方が良いと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;※参考でこのfetch設定にはバグが一つあります。&lt;/p&gt;&lt;p&gt;「fetch.lazy」設定する時に「for」や「size」などの関数で呼出すとデータを持ち込みますが、「stream」式で変換すると「null」になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=415&quot; data-filename=&quot;006.png&quot; style=&quot;width: 543px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=419&quot; data-filename=&quot;007.png&quot; style=&quot;width: 661px;&quot;&gt;&lt;/p&gt;&lt;p&gt;stream式で使わなければならないと「fetch.eager」を使うか「stream」式の前の「size」などの関数でデータ持ち込んで後に使わなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;cascade&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- casacadeは永続性転移ということでデータの整合性を設定するオプションです。&lt;/p&gt;&lt;p&gt;すなわち、「user」クラスを生成して「info list」でデータを「new」して入れ込んだら実際にデータをインサートする時に「user」クラスを「insert」してキーを持ち来て「info」テーブルにもレファレンスをかけて「insert」しなければならないです。&lt;/p&gt;&lt;p&gt;また、逆に「user」テーブルのデータが削除されると関連派生レファレンスを全て削除されなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この「cascade」のオプションは下記とおりになります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;タイプ&lt;/th&gt;        &lt;th&gt;&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;cascadetype.persist&lt;/td&gt;        &lt;td&gt;entityが追加される時、関連なentityも追加する。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;cascadetype.merge&lt;/td&gt;        &lt;td&gt;entityが修正される時、関連なentityも修正する。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;cascadetype.refresh&lt;/td&gt;        &lt;td&gt;&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;cascadetype.remove&lt;/td&gt;        &lt;td&gt;entityが削除される時、関連なentityも削除する。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;cascadetype.detach&lt;/td&gt;        &lt;td&gt;親のentityがdetach()を実行されると、関連なentityもdetach()状況になり変更事項が反映されない。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;cascadetype.all&lt;/td&gt;        &lt;td&gt;全てのcascadeが反映&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;そうすると「user」クラスの「info list」に「cascadetype.all」を設定して「user」クラスが追加、削除される時に反映がちゃんとされるかを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=417&quot; data-filename=&quot;008.png&quot; style=&quot;width: 543px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=416&quot; data-filename=&quot;009.png&quot; style=&quot;width: 456px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「info」にもデータがよく入力されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データベースを設計する時に「master」テーブルと「transaction」テーブルを定義して設計するはずですね。「transaction」テーブルはデータが積もるところなので「cascade」を連結して使いますが、「master」テーブルの場合はプログラム上でデータが変わるとだめなので「cascade」を設定すれば「ng」ですね。&lt;/p&gt;&lt;p&gt;その点をよく考えてテーブル設計、クラス設計をしなければならないですね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/83.html</guid><pubDate>Fri, 17 Jan 2020 07:46:16 +0900</pubDate></item><item><title>[Java] JPAでpersistance.xml設定とentityクラス設定(@GeneratedValue設定)</title><link>https://www.nowonbun.com/82.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「jpa」で「persistance.xml」設定と「entity」クラス設定(@generatedvalue設定)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で「jpa」の基本設定に関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/81.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 41] eclipseでjpaフレームワーク設定する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応、eclipseを利用してエンティティクラスを生成しましたが、しっかり生成されてないです。これがeclipseのバグか自動生成の限界かを知らないですが、generatorで生成しても少し修正が必要です。&lt;/p&gt;&lt;p&gt;先、例データベースを作ってクラスを生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=399&quot; data-filename=&quot;001.png&quot; style=&quot;width: 461px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のテーブルで説明すると「user」テーブルのキーは「id」です。その派生テーブルで「info」テーブルがあるしその派生で「info2」テーブルがあります。&lt;/p&gt;&lt;p&gt;その派生テーブルは「1:n」のレファレンスです。&lt;/p&gt;&lt;p&gt;そして「permission」テーブルがあり「permission」マップを通って「m:n」のレファレンスになります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のテーブルをeclipseでクラスgeneratorをしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=402&quot; data-filename=&quot;002.png&quot; style=&quot;width: 703px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=407&quot; data-filename=&quot;003.png&quot; style=&quot;width: 551px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=401&quot; data-filename=&quot;004.png&quot; style=&quot;width: 473px;&quot;&gt;&lt;/p&gt;&lt;p&gt;テーブルは確かに５つですが、クラスは４つになりますね。なぜなら「permission_map」の場合は「user」と「permission」を「m:n」のためのマップテーブルなのでクラスが必要ないと判断してクラスが生成されなかったんです。&lt;/p&gt;&lt;p&gt;先に「info」クタスと「info2」クラスを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=404&quot; data-filename=&quot;005.png&quot; style=&quot;width: 523px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=408&quot; data-filename=&quot;006.png&quot; style=&quot;width: 581px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のテーブルをみれば「idx」のアノテーションで「id」があります。この「id」のアノテーションはこのメンバー変数がキーですよという意味です。&lt;/p&gt;&lt;p&gt;このアノテーションは問題ないですが、オプションで「auto_increment」のオプションがないことが問題です。&lt;/p&gt;&lt;p&gt;「auto_increment」のオプションはテーブルにデータが「insert」する時に自動に採番してキーの値が増加することですね。&lt;/p&gt;&lt;p&gt;上のクエリでは確かに宣言しましたが、クラスのアノテーションでは設定されないですね。このまま、このクラスでデータを「insert」するとエラーが発生します。&lt;/p&gt;&lt;p&gt;上のソースで予想結果は「user」テーブルと「info」テーブルと「info2」テーブルに「insert」されることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=409&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;エラーが発生しました。上のエラーは「auto_increment」のエラーではなく、「persist」連結に関するアノテーションがないというエラーです。&lt;/p&gt;&lt;p&gt;それなら「persist」を連結しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=406&quot; data-filename=&quot;008.png&quot; style=&quot;width: 563px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=405&quot; data-filename=&quot;009.png&quot; style=&quot;width: 504px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「user」テーブルと「info」テーブルに「cascade」オプションを入れました。「cascade」に関して少し後で説明します。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/83.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 43] jpaのentity設定(cascade, fetch)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;もう一回に実行しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=412&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のエラーメッセージを見ると「id」が「null」になってエラーが発生したといいますね。「info」テーブルと「info2」テーブルの場合は採番増加なのでプログラムの中で「insert」ができないですが「null」というエラーが発生します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=411&quot; data-filename=&quot;011.png&quot; style=&quot;width: 610px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=410&quot; data-filename=&quot;012.png&quot; style=&quot;width: 720px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これを解決するようには「id」アノテーションのオプションで「@generatedvalue(strategy = generationtype.identity)」を追加すればエラーなしで「insert」ができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=400&quot; data-filename=&quot;013.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=403&quot; data-filename=&quot;014.png&quot; style=&quot;width: 725px;&quot;&gt;&lt;/p&gt;&lt;p&gt;予想とおりの結果が出ました。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/82.html</guid><pubDate>Fri, 17 Jan 2020 07:46:03 +0900</pubDate></item><item><title>[Java] EclipseでJPAフレームワーク設定する方法</title><link>https://www.nowonbun.com/81.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページは「eclipse」で「jpa」設定する方法に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「java」プログラムでデータベースのコネクション管理するフレームワークがあります。そのフレームワークを我々は「orm(object-relational-mapping)」といいます。&lt;/p&gt;&lt;p&gt;以前、ormフレームワークを使わなかった時、または使用頻度が少なかった時にはプログラムで直接に「sql connection」を組み立てて「sqlクエリ」を作成してデータベースからデータを受け取りました。&lt;/p&gt;&lt;p&gt;そのように作成するとプログラム管理工程で様々な問題が発生しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例えば、データベースのテーブルの内容が変更された場合、「sqlクエリ」を作成したソースを全て修正しなければならないです。&lt;/p&gt;&lt;p&gt;そして「sqlクエリ」を「string」タイプで作りますので、コンパイルエラーにも出ないので、sql検証がずいぶん大変になります。その工数に関してもプロジェクトが大きいほど、多くなるし、リスクも高くなりますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;またの他の問題は「reference」管理です。「sql」クエリ上でテーブル間に「join」してデータを受け取ります。でも「join」や「select」するデータよりクラスを組み込むのが難しいし、クラスをたくさん生成する可能性があるので、管理が難しくなります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;個人的にこの２つの問題を解決して「database」のツリー構造のデータベースの形式をクラスタイプの連結リストタイプに変換するフレームワークがこの「orm」フレームワークです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「java」で「orm」フレームワークの種類は多いです。「hibernate」もあるし、「doma」の「seasor」もあります。私の場合は昔「ibatis」というフレームワークも使ったことがあります。&lt;/p&gt;&lt;p&gt;でもいつからか「java」側で「jpa」が「java」の標準「orm」に決めて最近の「java ide」ツールで簡単に使えるように「jpaフレームワーク」を支援しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それなら、「maven」プロジェクトを作成して「jpa」を立ち上げます。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/72.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 32] mavenをインストール、使用方法、そしてeclipseに連結する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「pom.xml」で２つのライブラリを連結します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=383&quot; data-filename=&quot;001.png&quot; style=&quot;width: 828px;&quot;&gt;&lt;/p&gt;&lt;p&gt;一番目の「dependency」は「jpaライブラリ」です。二番目の「dependency」は「mysql-connector」です。&lt;/p&gt;&lt;p&gt;私の場合は「mariadb(mysql)」をよく使いますが、他のデータベースを使いたいんらこの「connector」ライブラリだけ変更するとできます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「project」で「jpa project」で変換します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=394&quot; data-filename=&quot;002.png&quot; style=&quot;width: 679px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=395&quot; data-filename=&quot;003.png&quot; style=&quot;width: 785px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=393&quot; data-filename=&quot;004.png&quot; style=&quot;width: 785px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「platfrom」と「connection」を設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=391&quot; data-filename=&quot;005.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=389&quot; data-filename=&quot;006.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「add connection」リンクを押下します。以前に「eclipse」で「mariadb(mysql)」を接続したことがなければ設定しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=392&quot; data-filename=&quot;007.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=385&quot; data-filename=&quot;008.png&quot; style=&quot;width: 380px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=388&quot; data-filename=&quot;009.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「connector」の場合は上の「maven」で「update」をすれば「maven repository」ディレクトリにあります。&lt;/p&gt;&lt;p&gt;別に「maven」設定をしなかったら、「c:\userarea\window id\.m2\repository\mysql\mysql-connector-java\5.1.41」であります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=390&quot; data-filename=&quot;010.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=398&quot; data-filename=&quot;011.png&quot; style=&quot;width: 785px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして連結確認をした後「finish」を押下すると「src\meta-inf\persistence.xml」が生成されています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はデータベースにテーブルを生成して連結してみましょう。&lt;/p&gt;&lt;p&gt;次は「persistence.xml」で戻ってきてコネクション情報を入力します。&lt;/p&gt;&lt;p&gt;xml設定を終わるとこれからエンティティクラスを作りましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=397&quot; data-filename=&quot;012.png&quot; style=&quot;width: 723px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=396&quot; data-filename=&quot;013.png&quot; style=&quot;width: 551px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=386&quot; data-filename=&quot;014.png&quot; style=&quot;width: 482px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これまで出来たら実際データベースからデータを持ち来ます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=387&quot; data-filename=&quot;015.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで基本「jpa」設定が完了しました。&lt;/p&gt;&lt;p&gt;添付 - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=384&quot; data-filename=&quot;jpaexample.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; jpaexample.zip&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;基本jpa設定は完了しましたが、実際にプロジェクトで使うようには様々な設定が必要です。jpaの設定に関しては次の投稿で連結して調べましょう。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/81.html</guid><pubDate>Fri, 17 Jan 2020 07:45:54 +0900</pubDate></item><item><title>[Java] Web spring frameworkのJSPで使う言語 JSTL - XML</title><link>https://www.nowonbun.com/80.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「web spring framework」の「view」で使う「jstl」 - xmlに関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でコアー、フォーマティング、関数、データベースに関して説明しました。「xml」に関して続けましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/79.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 39] web spring frameworkのjspで使う言語 jstl - 関数、データベース&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/78.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 38] web spring frameworkのjspで使う言語 jstl - コアー、フォーマッティング&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実は「jstl」言語でコアー、フォーマティング、関数以外はあまり使わないですね。「xml」ライブラリもそんなに使わないと思います。&lt;/p&gt;&lt;p&gt;データベースライブラリと同じく「xml」データを処理すると思うと「jsp」ページではなく、サーバサイトで処理しますね。または最近は「xml」より「json」タイプをよく使うので以前よりもっと使わないライブラリと言います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、「jstl - xml」の関数を使う前に「pom.xml」でライブラリを一つ追加しなければならないです。(既存のpom.xmlで設定したライブラリを同然にあるんでしょう。)&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;xmlライブラリ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;c:importでxmlファイルを読み込みます。注意点はウェブ上の「http url」ではなく、サーバサイドの相対パスです。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;x:parse, x:out&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- x:parseはxmlデータをパーシングします。&lt;/p&gt;&lt;p&gt;- x:outはxpath表現式でデータを出力します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=379&quot; data-filename=&quot;001.png&quot; style=&quot;width: 445px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;x.foreach&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- list形でタグ(繰り返されたタグ)の場合、ループらしく、データを持ち来ます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=380&quot; data-filename=&quot;002.png&quot; style=&quot;width: 479px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;x:sec&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- データを変数で置換して格納します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=379&quot; data-filename=&quot;001.png&quot; style=&quot;width: 445px;&quot;&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;x:choise x:when x:otherwise&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- xmlで「if~else」文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=381&quot; data-filename=&quot;003.png&quot; style=&quot;width: 492px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;x:if&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- xmlの「if」文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=381&quot; data-filename=&quot;003.png&quot; style=&quot;width: 492px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;x:transform, x:param&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 「xlst」ファイルと「xml」ファイルを結合する関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=382&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;ここまで「jsp」の「jstl」言語を纏めました。参照したページは下記でリンクします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - https://www.viralpatel.net/parsing-rss-xml-using-jstl-tag-library/&lt;/p&gt;&lt;p&gt;link - https://www.javatpoint.com/jstl-xml-tags&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/80.html</guid><pubDate>Fri, 17 Jan 2020 07:45:45 +0900</pubDate></item><item><title>[Java] Web spring frameworkのJSPで使う言語 JSTL - 関数、データベース</title><link>https://www.nowonbun.com/79.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「web spring framework」の「view」で使う「jstl」 - 関数、データベースに関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でコアーとフォーマティングライブラリに関して投稿しましたが、続けて関数とデータベースのライブラリに続けます。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;関数ライブラリ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:contains(string, sbustring)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列で文字の含め可否&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=362&quot; data-filename=&quot;001.png&quot; style=&quot;width: 428px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:containsignorecase(string, sbustring)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列で文字の含め可否(大、小文字無視)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=362&quot; data-filename=&quot;001.png&quot; style=&quot;width: 428px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:endswith(string, suffix)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列で当該文字で終わる可否&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=362&quot; data-filename=&quot;001.png&quot; style=&quot;width: 428px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:escapexml(string)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 特殊文字(&amp;lt;,&amp;gt;,&amp;amp;,&apos;,&quot;)をxmlエンティティコードに変換&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=363&quot; data-filename=&quot;002.png&quot; style=&quot;width: 395px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=366&quot; data-filename=&quot;003.png&quot; style=&quot;width: 479px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:indexof(string, sbustring)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列で当該文字と一致するインデックス&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=372&quot; data-filename=&quot;004.png&quot; style=&quot;width: 387px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:split(string, separator)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列をseparatorの文字によって配列に分離&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=377&quot; data-filename=&quot;005.png&quot; style=&quot;width: 418px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:join(array, separator)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- arrayをseparatorの文字によって結合&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=378&quot; data-filename=&quot;006.png&quot; style=&quot;width: 408px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:length(string)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列の長さ&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=368&quot; data-filename=&quot;007.png&quot; style=&quot;width: 454px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:replace(string, before, after)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列の中で「before」の文字列を「after」の文字列に置換&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=367&quot; data-filename=&quot;008.png&quot; style=&quot;width: 426px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:startswith(string, prefix)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- stringがprefixで始まる可否&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=362&quot; data-filename=&quot;001.png&quot; style=&quot;width: 428px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:substring(string, before, after)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列で「before」から「after」まで出力&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=373&quot; data-filename=&quot;009.png&quot; style=&quot;width: 381px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:substringafter(string, sbustring)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列で当該な文字列以降を出力&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=365&quot; data-filename=&quot;010.png&quot; style=&quot;width: 432px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:substringbefore(string, sbustring)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列で当該文字列以前を出力&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=364&quot; data-filename=&quot;011.png&quot; style=&quot;width: 376px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:tolowercase(string)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列を小文字に出力する。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=374&quot; data-filename=&quot;012.png&quot; style=&quot;width: 402px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:touppercase(string)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列を大文字に出力する。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=369&quot; data-filename=&quot;013.png&quot; style=&quot;width: 464px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fn:trim(string)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字列の前後の空白を取り除く。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=376&quot; data-filename=&quot;014.png&quot; style=&quot;width: 423px;&quot;&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;データベースライブラリ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;最近、ウェブプロジェクトは画面でデータベースを接続してデータを取得することではなく、サーバサイドでデータを取得してデータを処理して画面で結果を渡しますね。&lt;/p&gt;&lt;p&gt;なので、最近はjstlのデータベースライブラリは使うことはないと思いますが、ただ参考で説明します。&lt;/p&gt;&lt;p&gt;先、データベースコネクションライブラリが必要ですが私の場合は「mysql」で説明します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=370&quot; data-filename=&quot;015.png&quot; style=&quot;width: 485px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=371&quot; data-filename=&quot;016.png&quot; style=&quot;width: 240px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=375&quot; data-filename=&quot;017.png&quot; style=&quot;width: 501px;&quot;&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;内容がなさそうだったのに、整理するとすごく多いですね。それで投稿を三つで分けって作成します。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/78.html&quot; target=&quot;_blank&quot;&gt;「web spring framework」の「jsp」で使う言語 jstl - コアー、フォーマッティング&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/80.html&quot; target=&quot;_blank&quot;&gt;「web spring framework」の「view」で使う「jstl」 - xml&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/79.html</guid><pubDate>Fri, 17 Jan 2020 07:45:35 +0900</pubDate></item><item><title>[Java] Web spring frameworkのJSPで使う言語 JSTL - コアー、フォーマッティング</title><link>https://www.nowonbun.com/78.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「web spring framework」の「view」で使う「jstl」 - コアー、フォーマッティングに関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、「jstl」とは「jsp standard tag library」の略語で、「jsp」ページで「java」の言語ではなく、タグの形でプログラミングができる言語と言います。&lt;/p&gt;&lt;p&gt;この言語は「string」だけではなく、「servlet」、「struts」フレームワークでも使われます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実は個人的に「jstl」は「2000」年度頃にデベロッパーとデザインの業務を分けなければならないという概念が多い時、デザイナーや言語に慣れてないfront-endデベロッパーがサーバサイド言語と区別するように使用するデザイン専用言語といいました。これが本当に事実かはよく知りません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「jstl」を使用するようには「pom.xml」で３つのライブラリを連結しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=355&quot; data-filename=&quot;001.png&quot; style=&quot;width: 528px;&quot;&gt;&lt;/p&gt;&lt;p&gt;使用方法に関して「jsp」ファイルの宣言部にラブラリを宣言して使用します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=354&quot; data-filename=&quot;002.png&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p&gt;使用方法に関しては上の「core」ライブラリの接頭辞が「c」で始まるライブラリで「jstl」では「&lt;c:~」で始まるライブラリを使えます。&lt; p=&quot;&quot;&gt;&lt;/c:~」で始まるライブラリを使えます。&lt;&gt;&lt;/p&gt;&lt;p&gt;「jstl」では全てライブラリが５つがありますが、全てそれぞれの接頭辞があります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;ライブラリ&lt;/th&gt;        &lt;th&gt;機能&lt;/th&gt;        &lt;th&gt;uri識別子&lt;/th&gt;        &lt;th&gt;接頭辞&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;コアー&lt;/td&gt;        &lt;td&gt;一般プログラムで提供する制御処理を行うライブラリ&lt;/td&gt;        &lt;td&gt;http://java.sun.com/jsp/jstl/core&lt;/td&gt;        &lt;td&gt;c&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;フォーマッティング&lt;/td&gt;        &lt;td&gt;数字、日付、時間をフォーマティングする機能と国際化、多国語処理するライブラリ&lt;/td&gt;        &lt;td&gt;http://java.sun.com/jsp/jstl/fmt&lt;/td&gt;        &lt;td&gt;fmt&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;関数&lt;/td&gt;        &lt;td&gt;文字列を処理するライブラリ&lt;/td&gt;        &lt;td&gt;http://java.sun.com/jsp/jstl/functions&lt;/td&gt;        &lt;td&gt;fn&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;データベース&lt;/td&gt;        &lt;td&gt;データベースと関連機能を処理するライブラリ&lt;/td&gt;        &lt;td&gt;http://java.sun.com/jsp/jstl/sql&lt;/td&gt;        &lt;td&gt;sql&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;xml処理&lt;/td&gt;        &lt;td&gt;xmlと関連&lt;/td&gt;        &lt;td&gt;http://java.sun.com/jsp/jstl/xml&lt;/td&gt;        &lt;td&gt;x&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;コアーライブライ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;c:set/&amp;gt;, &amp;lt;c:remove/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- データ宣言、削除処理&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=356&quot; data-filename=&quot;003.png&quot; style=&quot;width: 378px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;c:out/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- データを出力するタグです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=356&quot; data-filename=&quot;003.png&quot; style=&quot;width: 378px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;c:if/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- プログラミングで「if」と同じ処理の流れの分岐タグです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=356&quot; data-filename=&quot;003.png&quot; style=&quot;width: 378px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;c:choose/&amp;gt;, &amp;lt;c:when/&amp;gt;, &amp;lt;c:otherwise/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 「if」式はありますが、「if~else」式はないです。この文法が「if~else」だと思うとよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=356&quot; data-filename=&quot;003.png&quot; style=&quot;width: 378px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;c:foreach/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;-ループのタグです。&lt;/p&gt;&amp;lt;-- 属性タイプ --&amp;gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;属性メソッド&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;current&lt;/td&gt;        &lt;td&gt;現在値&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;index&lt;/td&gt;        &lt;td&gt;ゼロ基盤(zero-based)インデックス値&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;count&lt;/td&gt;        &lt;td&gt;1基盤(one-based)インデックス値&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;first&lt;/td&gt;        &lt;td&gt;最初値可否&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;last&lt;/td&gt;        &lt;td&gt;最後値可否&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;begin&lt;/td&gt;        &lt;td&gt;開始値&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;end&lt;/td&gt;        &lt;td&gt;終了値&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;step&lt;/td&gt;        &lt;td&gt;増加値&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=357&quot; data-filename=&quot;006.png&quot; style=&quot;width: 375px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;c:fortokens/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&amp;lt;- 「foreach」と同じ処理ですが、delimiterで分割して繰り返すのが特徴&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=358&quot; data-filename=&quot;007.png&quot; style=&quot;width: 479px;&quot;&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;フォーマッティングライブラリ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;fmt:formatnumber/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 数字を文字に変換することと関係あるタグです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=359&quot; data-filename=&quot;008.png&quot; style=&quot;width: 478px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;fmt:parsenumber/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 文字を数字に返還することと関係がるタグです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=360&quot; data-filename=&quot;009.png&quot; style=&quot;width: 421px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;&amp;lt;fmt:formatdate/&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 日付と時間と関係あるタグです。&lt;/p&gt; &lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=361&quot; data-filename=&quot;010.png&quot; style=&quot;width: 631px;&quot;&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;内容がなさそうだったのに、整理するとすごく多いですね。それで投稿を三つで分けって作成します。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/79.html&quot; target=&quot;_blank&quot;&gt;「web spring framework」の「view」で使う「jstl」 - 関数、データベースライブラリ&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/80.html&quot; target=&quot;_blank&quot;&gt;「web spring framework」の「view」で使う「jstl」 - xml&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/78.html</guid><pubDate>Fri, 17 Jan 2020 07:45:26 +0900</pubDate></item><item><title>[Java] 「Web spring framework」の「Controller」で「ajax」の要請する時「json」タイプで返却する方法</title><link>https://www.nowonbun.com/77.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページは「web spring framework」の「controller」で「ajax」の要請する時「json」タイプで返却する方法に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私に前述で「web spring framwork」の「controller」の形に関して投稿しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/76.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 36] spring web frameworkでcontrollerを使用する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「controller」を返却する時に、「string」タイプで返却しますが、その「string」の値が「view」のファイル名をマッピングして「html」が解析されブラウザに応答する結果になります。でも「ajax」の場合は「html」の形ではなくテキストのタイプで「json」形式に返却することなので「html」を解析する必要がないです。(※必ずそのことではなく、jsonタイプではなく「html」形式で返却する時もあります。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その時に処理する方法で「httpservletresponse」からソケットioを受け取って「write」関数で返却する方法もありますが、「spring」では「mvc-config」で設定ができるのでその方法で修正します。&lt;/p&gt;&lt;p&gt;前述、「mvc-config」ファイルで「*.html」の形の「url」を「mvc controller」で処理しましたが、「ajax」の場合は「*.json」の形で動くように「config」設定をします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/75.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 35] eclipseでspring web frameworkを利用してウェブサービスプロジェクトを立ち上がる方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;mvc-ajax.config.xmlの名前でマッピング設定をします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=347&quot; data-filename=&quot;001.png&quot; style=&quot;width: 484px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=352&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「web.xml」を設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=351&quot; data-filename=&quot;003.png&quot; style=&quot;width: 825px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして私は「controller.ajax」のパッケージでマッピングしましたので「controller」パッケージの派生パッケージの「ajax」を生成します。その後、「test.java」クラスを生成しますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=353&quot; data-filename=&quot;004.png&quot; style=&quot;width: 480px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=350&quot; data-filename=&quot;005.png&quot; style=&quot;width: 748px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここで確認しなければならないものは「responsebody」のアノテーションです。以前には「return」の値が「view」ファイル名とマッピングして「jsp」ファイルが解析してウェブブラウザで応答されましたが、「responsebody」アノテーションで「return」の値がrequestbodyでそのまま応答しますね。&lt;/p&gt;&lt;p&gt;それなら「index.jsp」部分で「json」ファイルを受け取るように修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=348&quot; data-filename=&quot;006.png&quot; style=&quot;width: 473px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果は予想とおりに出ました。ここまでできると「spring」の中で「json」データを受け取るのが可能ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でヘッダでコントローラ要請を分岐するようの方法で追加説明します。&lt;/p&gt;&lt;p&gt;「controller」で「accept」のヘッダ内容で「method」を分岐するのができますが私の場合は「json」と「xml」で分岐しますね。&lt;/p&gt;&lt;p&gt;「produces」と「consumes」は同じパラメタだと思えばよいです。「produces」で「contenttype」の種類を入れてメソッドを分岐しました。&lt;/p&gt;&lt;p&gt;また「index.jsp」に戻って修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=349&quot; data-filename=&quot;007.png&quot; style=&quot;width: 570px;&quot;&gt;&lt;/p&gt;&lt;p&gt;あー残念でしたが、「xml」データをコンソールで表示されないですね。でも「html」では「ｘｍｌ」というデータがちゃんと入力されました。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/77.html</guid><pubDate>Fri, 17 Jan 2020 07:45:17 +0900</pubDate></item><item><title>[Java] Spring web frameworkでControllerを使用する方法</title><link>https://www.nowonbun.com/76.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「spring web framework」で「controller」を使用する方法に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私が前述で「spring web framework」でウェブサービスを構築する方法に関して投稿しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/75.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 35] eclipseでspring web frameworkを利用してウェブサービスプロジェクトを立ち上がる方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「spring web framework」では様々なアトリビュートがあります。その中で「requestmapper」と「requestparam」が大事なのでその２つに関して確認しましょう。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;requestmapper&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;コントローラを見ると「requestmapper」のアトリビュートを利用して「request」ルータを管理しています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=340&quot; data-filename=&quot;002.png&quot; style=&quot;width: 457px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「requestmapping」は特定な「url」だけではなく、同時に様々な「url」を複数でマッピングができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=341&quot; data-filename=&quot;003.png&quot; style=&quot;width: 474px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「requestmapping」は指定するurlだけではなく、正規表現式でマッピング設定ができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=342&quot; data-filename=&quot;004.png&quot; style=&quot;width: 489px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「requestmapping」のデータを関数の内部で使うこともできます。上の例みたいに「{id}」のキーを指定して関数のパラメータ「@parhvariable」で取得ができます。&lt;/p&gt;&lt;p&gt;結果は「index」.html」の場合は「index」、「helloworld.html」の場合は「helloworld」が出力しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=343&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 736px;&quot;&gt;&lt;/p&gt;&lt;p&gt;要請されたrequestのディレクトリ別で分けてクラスを呼出すこともできます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;requestparam&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;requestparamはブラウザから受取るパラメタの値です。関数のパラメタで「httpservletrequest」と「httpservletresponse」を受取るので、このパラメタがなくてもデータは受取るのができますね。&lt;/p&gt;&lt;p&gt;では関数別のパラメタで呼出す関数を決めることやアノテーションを利用してデータ取得するのが綺麗にデータ処理が可能なので、利用する方が良いですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=344&quot; data-filename=&quot;006.png&quot; style=&quot;width: 531px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例はパラメタから「param」のキーでブラウザからサーバにデータを送っています。結果は関数で「param」を受け取ってデータを「view」に渡します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=346&quot; data-filename=&quot;007.png&quot; style=&quot;width: 433px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例はパラメタがあることとないことで呼出す関数が違いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=345&quot; data-filename=&quot;008.png&quot; style=&quot;width: 472px;&quot;&gt;&lt;/p&gt;&lt;p&gt;パラメタを基本変数ではなく、クラスタイプでも受取るのができます。例えば、html上でpostタイプでinputデータ値が多い場合に全ての変数名をパラメタで受取ることではなく、「bean」クラスとしてデータを受取るのができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その以外に「header」の要請別、タイプ別でも呼出すメソッドを分岐できます。このページでは内容が長すぎるので次のcontrollerでajax要請する時のjson変換するところで合わせて調べましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参考 - &lt;a href=&quot;https://springframework.guru/spring-requestmapping-annotation/&quot; target=&quot;_blank&quot;&gt;https://springframework.guru/spring-requestmapping-annotation/&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/76.html</guid><pubDate>Fri, 17 Jan 2020 07:45:09 +0900</pubDate></item><item><title>[Java] EclipseでSpring web frameworkを利用してウェブサービスプロジェクトを立ち上がる方法</title><link>https://www.nowonbun.com/75.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページは「eclipse」で「spring web framework」を利用してウェブサービスプロジェクトを立ち上がる方法に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先に「spring web framework」でウェブサービスプロジェックとを作成する前に「maven」インストールと「servlet」作成に関して知らなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/72.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 32] mavenをインストール、使用方法、そしてeclipseに連結する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/74.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 34] web serviceプログラムのservletを作成方法(eclipse)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先にサブレットプロジェクトを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=327&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 462px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてmavenプロジェクトに変換しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=331&quot; data-filename=&quot;002.png&quot; style=&quot;width: 818px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=333&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 607px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「pom.xml」で「spring framework」ライブラリを登録して、ライブラリをダウンロードするし、連携しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=337&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 565px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=338&quot; data-filename=&quot;005.png&quot; style=&quot;width: 817px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「mvc-config.xml」を「webcontent -&amp;gt; web-inf」フォルダの中で生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=335&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 780px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「web.xml」で「mvc-config.xml」を設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=336&quot; data-filename=&quot;007.jpg&quot; style=&quot;width: 739px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「spring framework」の設定はここまでです。これから「controller」を作成しましょう。&lt;/p&gt;&lt;p&gt;先に「mvc-config.xml」ファイルで「controller」パッケージ名を「controller」で設定しましたので、「controller」パッケージで「helloworld」クラスを生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=330&quot; data-filename=&quot;008.jpg&quot; style=&quot;width: 275px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=332&quot; data-filename=&quot;009.jpg&quot; style=&quot;width: 770px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「controller」クラスで重要なことは「@controller」のアトリビュートを設定することです。そして関数で「url」マッピングパターンを入れて関数でアトリビュートを指定します。&lt;/p&gt;&lt;p&gt;上のソースの場合は「/index.html」で要請されると「index」関数が呼び出されますね。参考にルートのページは「index.html」で指定しましたので、ルートページがその関数を呼出します。&lt;/p&gt;&lt;p&gt;「modelmap」でキーとデータを入れると「view」でデータを渡します。&lt;/p&gt;&lt;p&gt;「return」の値は「string」タイプですがそれが「view」のファイル名を指定します。私の場合は「index」でリターンしますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=334&quot; data-filename=&quot;010.jpg&quot; style=&quot;width: 277px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=329&quot; data-filename=&quot;011.jpg&quot; style=&quot;width: 591px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまで起動するための基本設定が完了しました。私が予想することは起動すると「hello world」ページが見えることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=328&quot; data-filename=&quot;012.jpg&quot; style=&quot;width: 619px;&quot;&gt;&lt;/p&gt;&lt;p&gt;予想とろりで結果が出ました。ここまで「spring web server」の基本構築が完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;添付ファイルを添付します。&lt;/p&gt;&lt;p&gt;添付 - &lt;a class=&quot;attachfile&quot; href=&quot;./getattachfile.ajax?idx=339&quot; data-filename=&quot;springtestweb.zip&quot;&gt;&lt;img src=&quot;./img/zip.gif&quot;&gt; springtestweb.zip&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/75.html</guid><pubDate>Fri, 17 Jan 2020 07:44:56 +0900</pubDate></item><item><title>[Java] Web serviceプログラムのServletを作成方法(Eclipse)</title><link>https://www.nowonbun.com/74.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「java」を利用してウェブサービス(jsp servlet)を作成する方法について調べて見ました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「java」でウェブプログラミングすると、「struts」や「spring」などに関して様々に話を聞こえるですね。実は「struts」や「spring」はウェブプログラミングのフレームワークです。それがウェブプラットフォームではありません。&lt;/p&gt;&lt;p&gt;「java」のウェブプラットフォームに関して話すると基本的に「java servlet」だといいます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://ko.wikipedia.org/wiki/&quot; target=&quot;_blank&quot;&gt;https://ko.wikipedia.org/wiki/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;こんな具体的な話は要らなく、先に「eclipse」でウェブサーブレットを生成してブラウザで「hello world」まで表示する方法に関して記述します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;サーブレットを作るように先に「eclipse」でトムキャットがインストールされなければならないです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/73.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 33] 「eclipse」でトムキャット(tomcat)を設定する方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先に「new project」-&amp;gt; 「other」を選択します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=310&quot; data-filename=&quot;001.png&quot; style=&quot;width: 614px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その中で「web」-&amp;gt;「dynamic web project」を選択して「next」ボタンを押下します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=314&quot; data-filename=&quot;002.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてプロジェクト名前とトムキャット設定、「module version」が合っているかを確認して「finish」ボタンを押下します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=317&quot; data-filename=&quot;003.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;※参考で「eclipse」をエンタプライズバージョンでインストールしないとウェブサーブレット生成が上手くできない可能性があります。基本eclipseの場合は上のイメージらしく動作しません。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/41.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 1] javaとは？、javaインストール、eclipseインストール&lt;/a&gt;&lt;/p&gt; &lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=312&quot; data-filename=&quot;004.png&quot; style=&quot;width: 267px;&quot;&gt;&lt;/p&gt;&lt;p&gt;プロジェクトを生成した後、「web.xml」を確認します。もし、「web.xml」がない場合は下記の方法で生成するとよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=322&quot; data-filename=&quot;005.png&quot; style=&quot;width: 709px;&quot;&gt;&lt;/p&gt;&lt;p&gt;実は以前のバージョンはいつも生成しましたが、いつから「web.xml」が自動に生成しないですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=320&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;生成したら基本的な内容を確認します。&lt;/p&gt;&lt;p&gt;「welcome-file-list」タグだけありますが、そのタグは基本「root」ページの設定ですね。私の場合は「index.jsp」だけ設定します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから「index.jsp」を作成してウェブブラウザで「hello world」が見えるようにします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=318&quot; data-filename=&quot;007.png&quot; style=&quot;width: 614px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=315&quot; data-filename=&quot;008.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして起動します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=319&quot; data-filename=&quot;009.png&quot; style=&quot;width: 693px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=316&quot; data-filename=&quot;010.png&quot; style=&quot;width: 543px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=311&quot; data-filename=&quot;011.png&quot; style=&quot;width: 737px;&quot;&gt;&lt;/p&gt;&lt;p&gt;一応、ウェブサービスを起動しましたが、我々が作りたいことは単純なウェブページではなく、サーブレットですね。&lt;/p&gt;&lt;p&gt;サーバをショットダウンします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=313&quot; data-filename=&quot;012.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてプロジェクトでサブレットを追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=321&quot; data-filename=&quot;013.png&quot; style=&quot;width: 732px;&quot;&gt;&lt;/p&gt;&lt;p&gt;私の場合は「test」というサーブレットを作りました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=323&quot; data-filename=&quot;014.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうしたら下記通りにサーブレットが生成されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=324&quot; data-filename=&quot;015.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてサーバをもう一度起動します。&lt;/p&gt;&lt;p&gt;私はurlを「/test」で設定しましたのでウェブブラウザで「test」で接続します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=325&quot; data-filename=&quot;016.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果は改行タブのそのままに表示されますね。&lt;/p&gt;&lt;p&gt;多分、正常な「html」ではないからだと思います。正常な「html」は「」から「」で終わるドキュメンtですね。&lt;/p&gt;&lt;p&gt;なので「html」ドキュメントではなく、ただテキストファイルで認識して表示しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;※参考に「eclipse」でデフォルトブラウザ設定は「window」-&amp;gt; 「web browser」で選択できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=326&quot; data-filename=&quot;017.png&quot; style=&quot;width: 492px;&quot;&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/74.html</guid><pubDate>Fri, 17 Jan 2020 07:43:34 +0900</pubDate></item><item><title>[Java] 「Eclipse」でトムキャット(tomcat)を設定する方法</title><link>https://www.nowonbun.com/73.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「eclipse」でトムキャット(tomcat)を設定する方法に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;トムキャットはクライアント(browser)と通信しながらウェブページ情報(html)を転送するウェブサーバ(web server)とウェブページを動的に作られるウェブコンテナ(サーブレットコンテナ)を搭載しているアプリケーションサーバ(was)の機能を持っているオープンソースプログラムです。&lt;/p&gt;&lt;p&gt;基本的にapache財団で提供するので無料だし、強力な機能を持っているサーバです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「eclipse」環境でjavaを利用してウェブ(jsp)を開発するために一応「eclipse」でトムキャットが設定されていなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうするとトムキャットホムページに行ってダウンロードします。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://tomcat.apache.org/download-80.cgi&quot; target=&quot;_blank&quot;&gt;https://tomcat.apache.org/download-80.cgi&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=304&quot; data-filename=&quot;001.png&quot; style=&quot;width: 751px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「eclipse」で使うものなので「installer」ではなく、「zip」になっている圧縮ファイルでダウンロードします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして、適当なところで圧縮を解凍してもよいですが、管理のため「eclipse」がインストールされたところで解凍します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=303&quot; data-filename=&quot;002.png&quot; style=&quot;width: 289px;&quot;&gt;&lt;/p&gt;&lt;p&gt;トムキャットの解凍が終わったら、「eclipse」を起動して新しいプロジェクトを生成します。&lt;/p&gt;&lt;p&gt;そしてプロジェクトウィザードはサーバを選択しますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=308&quot; data-filename=&quot;003.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてトムキャットバージョンと合わせるリストを選択します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=307&quot; data-filename=&quot;004.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後、トムキャットを解凍したフォルダを選択します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=306&quot; data-filename=&quot;005.png&quot; style=&quot;width: 511px;&quot;&gt;&lt;/p&gt;&lt;p&gt;プロジェクトエクスプローラに「server」のプロジェクトがあり、トムキャット設定情報があれば設定完了になったことです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=305&quot; data-filename=&quot;006.png&quot; style=&quot;width: 484px;&quot;&gt;&lt;/p&gt;&lt;p&gt;トムキャット設定を変わるようには下記のserverタブをクリックしてサーバを選択します。&lt;/p&gt;&lt;p&gt;概要(overview)のウィンドウがでますが、他の設定は触ることがないし、「port」設定と「timout」設定だけ仕様によって設定が変わる可能性がありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=309&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;タイムアウト設定はコンパイルする時にサーバが起動待ちですがコンパイル時間がかかることで設定時間より超えるとサーバが落ちることです。&lt;/p&gt;&lt;p&gt;pc仕様が遅いと思うとこのタイムアウト設定をしなければならないです。しなければ、起動する時に45秒タイムアウトでトムキャットが起動を止まります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ポートの場合はトムキャットの基本ポートは「8080」です。&lt;/p&gt;&lt;p&gt;どこかでそのポートを使っているアプリケーションがあれば、起動しません。なので、ポート変更が必要ですが、その変更設定するところです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単に起動確認をしたいですが、servletプロジェクト生成が必要なので次の投稿で確認しましょう。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/73.html</guid><pubDate>Fri, 17 Jan 2020 07:43:24 +0900</pubDate></item><item><title>[Java] Mavenをインストール、使用方法、そしてeclipseに連結する方法</title><link>https://www.nowonbun.com/72.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページはmavenをインストール、使用方法、そしてeclipseに連結する方法について調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、約10年前でもプロジェクトを構成する時に必要なライブラリあればインタネットで検索してダウンロードして使いました。&lt;/p&gt;&lt;p&gt;なので、ライブラリバージョン管理もできないし、正常なライブラリ(ライブラリにウイルスを入れて配布する人もいました。)かどうかも検証することが簡単ではありません。&lt;/p&gt;&lt;p&gt;また、コミュニティーが各々にあるので、説明が統一もできないし、ライブラリの共有もバラバラでした。&lt;/p&gt;&lt;p&gt;率直にライブラリより実際に作って使うほうが楽な部分もありましたよね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;しかし、プロジェクトのサイズが段々大きくなって、現在はオープンライブラリがなければプロジェクト運用もできないようにサイズが大きくなりました。&lt;/p&gt;&lt;p&gt;それで、最近はオープンライブラリを管理するツールとライブラリを集まったコミュニティーのrepositoryがあります。&lt;/p&gt;&lt;p&gt;javaではライブラリ管理ツールをmavenと言います。(c＃ならnugetと言うし、phpはcomposer、pythonはpipがあります。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://maven.apache.org&quot; target=&quot;_blank&quot;&gt;https://maven.apache.org&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;mavenをインストールするように上のサイトに接続してダウンロードします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=296&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;適当なところで圧縮を解凍します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=288&quot; data-filename=&quot;002.png&quot; style=&quot;width: 670px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「cmd」で当該なフォルダに行って「bin」フォルダで「mvc -version」を確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=287&quot; data-filename=&quot;003.png&quot; style=&quot;width: 811px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後で環境変数の設定をします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=301&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=297&quot; data-filename=&quot;005.png&quot; style=&quot;width: 618px;&quot;&gt;&lt;/p&gt;&lt;p&gt;環境設定を設定した後、「cmd」に行ってもう一回に確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=290&quot; data-filename=&quot;006.png&quot; style=&quot;width: 824px;&quot;&gt;&lt;/p&gt;&lt;p&gt;maven設定は完了しました。&lt;/p&gt;&lt;p&gt;mavenを「eclipse」に設定します。「eclipse」の「preferences」タブに移動します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=289&quot; data-filename=&quot;007.png&quot; style=&quot;width: 280px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「maven」をインストールしたフォルダを設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=294&quot; data-filename=&quot;008.png&quot; style=&quot;width: 623px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=295&quot; data-filename=&quot;009.png&quot; style=&quot;width: 623px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=293&quot; data-filename=&quot;010.png&quot; style=&quot;width: 623px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これから「eclipse」で「maven」プロジェクトを生成します。&lt;/p&gt;&lt;p&gt;先は一般プロジェクトで生成しますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=292&quot; data-filename=&quot;011.png&quot; style=&quot;width: 491px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「maven」プロジェクトに変換します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=299&quot; data-filename=&quot;012.png&quot; style=&quot;width: 686px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうしたら「pom.xml」が生成されます。「maven」のテストのため、「gson」を追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=298&quot; data-filename=&quot;013.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=300&quot; data-filename=&quot;014.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;pom.xmlを作成してライブラリをアップデータします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=302&quot; data-filename=&quot;015.png&quot; style=&quot;width: 745px;&quot;&gt;&lt;/p&gt;&lt;p&gt;テストのため、ソースを作成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=291&quot; data-filename=&quot;016.png&quot; style=&quot;width: 557px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果は「json」タイプで「string」を「node」クラスで変換をしました。その意味は「gson」ライブラリがちゃんと動いてる状況ですね。&lt;/p&gt;&lt;p&gt;なので、「eclipse」から「maven」を通ってライブラリをちゃんとアップデータしてソース上で使えるようになりました。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/72.html</guid><pubDate>Fri, 17 Jan 2020 07:43:15 +0900</pubDate></item><item><title>[Java] Reflection - Annotation編</title><link>https://www.nowonbun.com/71.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページではこのページにはreflection機能の中でアノテーション(annotation)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でアノテーションに関して説明した時があります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/66.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 26] アノテーション(annotation)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その時にアノテーションではただ、クラスやメソッドや変数などのメタデータだと言いましたが、実はアノテーションはreflectionで入るとデータ初期設定、メソッドを探しの里程表だと思います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=285&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 484px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、クラスのメソッドを全て取得してアノテーションがあるかどうかであるなら「invoke」で実行します。&lt;/p&gt;&lt;p&gt;なので結果は「method1」、「method3」は出力するし、「method2」の場合は出力しないですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=286&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 544px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば「main」で「example」クラスを割当てクラスの中の「node」変数にデータを入れるところがありません。&lt;/p&gt;&lt;p&gt;当たり前で「node」変数は「null」と予想します。でも「exec」で「node」クラスの「print」メソッドを呼出す時、「exception」が発生しませんでした。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その理由は「main」関数で「reflection」機能を使ってアノテーションに書いている「クラス」名で割当てしたからのです。&lt;/p&gt;&lt;p&gt;上の例が依存性注入の概念ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「reflection」機能はデザインパターンと合わせることになると素晴らしく綺麗なソースに作られるので、デザインパターンも含めて熟知しなければならないと思います。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/71.html</guid><pubDate>Fri, 17 Jan 2020 07:43:07 +0900</pubDate></item><item><title>[Java] Reflection - Variable編</title><link>https://www.nowonbun.com/70.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページにはreflection機能の中で変数(variable)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述、クラス(class)とメソッド(method)に関して調べてみました。&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;さて、reflectionではクラスとメソッドは様々なパターンを作るようによく使うことですが、変数はあまり使わないですね。&lt;/p&gt;&lt;p&gt;なぜなら、クラス中でメンバー変数はその目的があるし、データを入れ変わったりするとクラス処理がエラーなる可能性があるのでです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、その必要性が全然ないことではないかと疑問になりますが、クラスの流れでテストする時にデバッグのように変数のデータを確認する時や最近、mvcモデルでdi(依存性注入)概念があり、外部で変数にクラスのファクトリーパターンでインスタンスを刺し入れる処理で使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=284&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 686px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみればメンバ変数が「private」タイプでも「data」の値を「100」に変わりました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「reflection」と場合はプログラム文法をメッチャクチャになれることができますね。&lt;/p&gt;&lt;p&gt;では「reflection」はパフォーマンス的に遅くなる可能性があるし、無分別に使うとコードパターンや設計があっというまでめちゃくちゃになるのでデザインパターンやソース標準なので守りながら使わなければならないと思います。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/70.html</guid><pubDate>Fri, 17 Jan 2020 07:42:58 +0900</pubDate></item><item><title>[Java] Reflection - Method編</title><link>https://www.nowonbun.com/69.html</link><description>&lt;p&gt;こんにちは。明日です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページにはreflection機能の中でメソッド(method)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で「java」の「reflection」のクラスに関して説明しました。&lt;/p&gt;&lt;p&gt;そこでコンストラクタが「private」になっていっても呼出しができるし、「string」でクラスを探し、呼出しもできました。&lt;/p&gt;&lt;p&gt;メソッド編でも似ているな形で使用します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;まず、「string」式で関数を検索することです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=279&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 662px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば「node」クラスを宣言して「getmethod」関数で「print」関数を探します。&lt;/p&gt;&lt;p&gt;後「invoke」関数にインスタンスを入れ、実行します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして「private」の関数を実行します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=283&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 718px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「private」タイプの関数を探すようには「getmethod」ではなく、「getdeclalredmethod」で探しますね。それを検索されると接近設定を「true」に変換して「invoke」で実行します。&lt;/p&gt;&lt;p&gt;上の例では関数でパラメータが付いているので、検索する時にパラメータタイプは「string」で「invoke」をする時にも実際にデータを入れます。&lt;/p&gt;&lt;p&gt;結果はそのパラメータがコンソールで出力しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;次は「reflection」のメソッドで応用部分ですが、同じ名の関数があるクラスたちを集まって実行する方法です。&lt;/p&gt;&lt;p&gt;実は「interface」で抽象してすることが原則ですが、実務では「interface」で結ばない場合もあるので、様々で使える方法です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=280&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 449px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の結果は同然だと思いますね。&lt;/p&gt;&lt;p&gt;node1のクラスとnode2のクラスを同じインタフェースで派生して呼出すのは当たり前だと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;とはいえ、node1のクラスとnode2のクラスがインタフェースを継承しなかった場合はどうでしょう。&lt;/p&gt;&lt;p&gt;別のクラスなので、listで指定クラス自体からできないですね。違いました。&lt;/p&gt;&lt;p&gt;「object」タイプで結べますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=282&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 616px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のみれば、eclipseでエラーが発生しました。なぜなら、「object」タイプは「print」関数がないからです。&lt;/p&gt;&lt;p&gt;それを「reflection」を利用して関係性がなくても呼び出せます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=281&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 455px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、各オブジェクトからクラスタイプを持って来て「getmethod」で関数を探します。&lt;/p&gt;&lt;p&gt;探す時には「string」タイプでできるので「print」ということが掛けばメソッドを抽出ができます。&lt;/p&gt;&lt;p&gt;そのことで「invoke」関数で実行すれば、インタフェースがなしでも似てるふうに実行されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実際にはインタフェースによってプログラムを作成することが一番ですが、できない状況の場合に「reflection」を利用して組むのもできますね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/69.html</guid><pubDate>Fri, 17 Jan 2020 07:42:47 +0900</pubDate></item><item><title>[Java] Reflection - Class編</title><link>https://www.nowonbun.com/68.html</link><description>&lt;p&gt;こんにちは。明日です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページにはreflection機能の中でクラス(class)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;個人的にプログラムを勉強しながら一番驚いてプログラム実力が急成長した時期がこの「reflection」概念と勉強した時期ではないかと思いますね。&lt;/p&gt;&lt;p&gt;「reflection機能」は要約する我々が今まで勉強したプログラム文法を全て無視してプログラム開発ができる方法ではないかと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例えば、クラスのインスタンスを生成する時に必ず「new」を使わなければならないとか「private」のアクセス修飾子は外部で接近ができないかなどを無視して作られます。&lt;/p&gt;&lt;p&gt;つまり、クラスを「new」ではなくてもインスタンス生成する方法があるし、「private」のメンバー変数でもデータを取得、入力ができる意味ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;もちろん、できるということで無分別な文法で作ればプログラムはすぐメッチャクチャになりますね。それで個人的な考えは「reflection」をよく使えるようには「standard code style」と「design pattern」を守りながら実装しないとその威力が発揮しないと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「reflection」は「java」言語だけではなく、「c#」やスクリプトの「python」、「php」、「javascript」もあるので比較しながら勉強するのも良いと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それでは「reflection」の「class」に関して紹介します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=276&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 517px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果は「hello world」が出ました。&lt;/p&gt;&lt;p&gt;またclassのタイプを持つ「newinstance」関数を呼ぶことではなく、「string」タイプの名でも宣言ができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=277&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 578px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「class.forname」を利用してクラス名でタイプを持ってきます。今は同じパッケージなのでパッケージ宣言が要らないですが、実はフルネームでしなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからコンストラクタが「private」タイプの場合に呼出す方法に関して調べます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=278&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 812px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「reflection」機能で重要なことは「string」形式で外部からクラス名を受け取ってクラスを宣言すること、「private」タイプでもコンストラクタを呼び出せることです。&lt;/p&gt;&lt;p&gt;「string」形式で動けるというのはデザインパタンでインターフリーターと関係があり、privateとは生成パタンと関係がありますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - 作成中 [design pattern] interpret pattern&lt;/p&gt;&lt;p&gt;link - 作成中 [design pattern] factory method pattern&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/68.html</guid><pubDate>Fri, 17 Jan 2020 07:42:39 +0900</pubDate></item><item><title>[Java] ソケット(Socket)通信</title><link>https://www.nowonbun.com/67.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページではソケット(socket)通信に関して調べてみました。&lt;/p&gt;&lt;p&gt;ソケット(socket)とは「java」だけではなく、「c / c++ / c#」などのプログラム言語にも通信に関しては同じ意味になります。&lt;/p&gt;&lt;p&gt;我々が通信する時に転送するデータ(packet)がパソコンからランケーブルによって行きます。そしてランケーブルからルータ、dns順で移動します。&lt;/p&gt;&lt;p&gt;その移動されたパケットはまたルータによって目標したパソコンに転送され、プログラムから読み込まれて処理して通信がなります。&lt;/p&gt;&lt;p&gt;我々が通信開発するお時、上のパケット移動する形を全て設定するしプログラミングをしません。&lt;/p&gt;&lt;p&gt;この通信形はos段階で設定され(osi 7階層)、最終プログラムでソケットを利用して通信を行います。&lt;/p&gt;&lt;p&gt;つまり、「全ての設定されたところで挿し込んで使います。」と意味でソケットの通信といいますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://ja.wikipedia.org/wiki/osi%e5%8f%82%e7%85%a7%e3%83%a2%e3%83%87%e3%83%ab&quot; target=&quot;_blank&quot;&gt;osi参照モデル&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ソケットの使用方法と流れに関して説明します。&lt;/p&gt;&lt;p&gt;ソケットはサーバがローカルipをもってportを開いて(bind)クライアントの接続を持っています。(listen)&lt;/p&gt;&lt;p&gt;そしてクライアントはサーバipアドレスとポート番号で接続(connection)して連結すれば、サーバとクライアントは「send」、「recieve」の形でパケットを送信、受信します。&lt;/p&gt;&lt;p&gt;お互いに通信がおわれば、「close」で接続を切ります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=271&quot; data-filename=&quot;001.gif&quot; style=&quot;width: 280px;&quot;&gt;&lt;/p&gt;&lt;p&gt;イメージソース：&lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/ja/ssw_ibm_i_71/rzab6/howdosockets.htm&quot; target=&quot;_blank&quot;&gt;https://www.ibm.com/support/knowledgecenter/ja/ssw_ibm_i_71/rzab6/howdosockets.htm&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからプログラムで確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=272&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 524px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のソースを起動してlistenしている状況を確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=275&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージをみれば「9999」ポートでちゃんとlistenしていることを確認できました。&lt;/p&gt;&lt;p&gt;次はクライアントを作成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=273&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 579px;&quot;&gt;&lt;/p&gt;&lt;p&gt;コンソールでサーバから受け取ったデータで「hello world」というデータがちゃんときました。&lt;/p&gt;&lt;p&gt;また、サーバ側に戻って確認します。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=274&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;サーバ側には「ok」というデータをちゃんと受け取りましたね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、全般的に流れを説明すれば、サーバ側で先に「9999」ポートで「listen」の状態でクライアントを待ちます。&lt;/p&gt;&lt;p&gt;その後でクライアントはロカールの「9999」ポートで接続します。&lt;/p&gt;&lt;p&gt;その時、サーバがクライアントに「hello world」と言う「11bytes」サイズのメッセージを送信します。その後、サーバ側はクライアントからメッセージ受信待機になります。&lt;/p&gt;&lt;p&gt;クライアント場合はサーバと接続すればサーバから「hello world」と言う「11bytes」サイズのメッセージを受け取ります。その後、「ok」と言う「2bytes」のメッセージを送りますね。&lt;/p&gt;&lt;p&gt;また、サーバ側に戻ると「ok」のメッセージを受け取って終了します。同時にクライアントも終了します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応、私の場合はパソコン一台でテストをしましたが、2台のパソコンでも同じく動くことを確認できます。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/67.html</guid><pubDate>Fri, 17 Jan 2020 07:42:30 +0900</pubDate></item><item><title>[Java] アノテーション(annotation)</title><link>https://www.nowonbun.com/66.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページではアノテーション(annotation)に関して調べてみました&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaのアノテーションはc#のアトリビュートと似てる意味になります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/35.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 34] attribute(アトリビュート)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アノテーションとはクラス、メソッド、変数なのでメタデータ、あるいはデータの正義するデータと言います。&lt;/p&gt;&lt;p&gt;つまり、アノテーションデータとしては実施にプログラムの実行で使えるデータではなく、クラス、メソッド、変数のデータを区分するようなデータだといいますね。c#側ではアトリビュートのデータを使うことがありますがそのことと少し差異があります。&lt;/p&gt;&lt;p&gt;上の「override」、「deprecated」アノテーションはjavaプログラムで一番よく見るアノテーションですね。&lt;/p&gt;&lt;p&gt;詳しく説明すると「override」アノテーションはクラスが経書された時にメソッドを再正義を明示する時に使うアノテーションです。&lt;/p&gt;&lt;p&gt;「deprecated」は実際にメソッド削除をできないし(様々で使うところがありコード変更がすごく必要な状況)、これからメソッドを使えないように使うアノテーションです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=270&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 544px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「override」と「deprecated」は基本的にjavaにあるアノテーションです。&lt;/p&gt;&lt;p&gt;では、実際にアノテーションを使うと言うとクラスやインタフェースみたいにアノテーションを生成して使いますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=269&quot; data-filename=&quot;002.png&quot; style=&quot;width: 588px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば「testannotaion」の名のアノテーションを生成しました。「target」のアノテーションを利用して「method」を選択しまいたが、「all」を選択すると全ての形で使えるし、「class」を選択するとクラスで、「field」を選択すると変数で使えるアノテーションを作られます。&lt;/p&gt;&lt;p&gt;上の例では「method」を選択しましたので「node」クラスで「print」関数でアノテーションを選択しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アノテーションの設定に関してはここまでですが、ただアノテーションだけではなぜこの設定をするかを理解しにくいですね。&lt;/p&gt;&lt;p&gt;アノテーションは様々なフレームワークやライブラリでたくさん使われますが、なんのため設定するかを意味を知らない場合があります。&lt;/p&gt;&lt;p&gt;ライブラリでクラスを読み込む時に設定のために使われますが、この部分は「java」の「reflection」と関係があるので、その時に詳細に説明します。&lt;/p&gt;&lt;p&gt;link - 作成中 &lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/66.html</guid><pubDate>Fri, 17 Jan 2020 07:42:22 +0900</pubDate></item><item><title>[Java] スレッドプール(ThreadPool)</title><link>https://www.nowonbun.com/65.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページではスレッドプール(threadpool)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前までスレッド(thread)に関して説明しました。スレッド(thread)とは並列処理でプロセス内で同時に処理ができることです。&lt;/p&gt;&lt;p&gt;そのため、データを共有するように同期化(synchronized)によってデータの無欠性を守ることにします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;スレッドの場合はシステムの性能関係なく、無限に生成ができます。&lt;/p&gt;&lt;p&gt;適切なスレッド生成は並列処理でプログラムの性能を上げることができますね。&lt;/p&gt;&lt;p&gt;でも、スレッドは無限に生成できると思っても、パソコンの物理的な容量は限界がありますね。無限にスレッドを生成することでプログラムが指数的に性能が上がることではなく、限界が至ると結局スレッドを実行するリソースでシングルスレッドより遅くなる段階になりますね。&lt;/p&gt;&lt;p&gt;その意味では、スレッド個数を制御するし、リソースを再使用することでプログラムの性能をあがることができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;スレッドプールはシステムによってスレッド個数を制御するし、スレッドのステップが終わったものだってもリソース解除ではなく、次のスレッドに再使用することでリソースを節約することができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=264&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 502px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「executors.newsinglethreadexecutor()」はスレッドプールの中で一つのスレッドを利用する例です。結果をみれば１番目、２番目、３番目を実行しても順番通りにスレッドが動きます。スレッド名も「thread1」で同じスレッドになっていますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=265&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 417px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「executors.newcachedthreadpool()」はスレッドプールの中でスレッドスレッド個数を最大に「int」のサイズほど生成ができます。システム性能によって限界がありますが、かなり多くスレッドを生成できます。&lt;/p&gt;&lt;p&gt;でもシステム中では一つのプログラムがあるので、パフォーマンスを最大まで使うのは危ないですね。スレッドプールでスレッドリソースを再使用すると機能がなければ、別に一般「thread」を生成することと差異がないと思いますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=267&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 368px;&quot;&gt;&lt;/p&gt;&lt;p&gt;スレッド２つだけ使うスレッドプールを生成したので、結果をみれば初めにはスレッドを２つを利用して２つのスレッドが終了すると「thread1」は再使用するして一つのスレッドに展開することを見えますね。&lt;/p&gt;&lt;p&gt;その以外のスレッドプールの種類は「newscheduledthreadpool」,「newworkstealingpool」がありますが、私も使ったことがないので説明が難しいですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてスレッドプールの中でスレッドを起動する時に「execute」関数を使いました。「execute」関数の場合はインタフェース「runnable」で使うのでラムダ式に簡単に作成ができますね。&lt;/p&gt;&lt;p&gt;でもスレッドプールの中で並列計算が終わった時に結果をもらいたい時には「submit」があり、データを返却して貰えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=268&quot; data-filename=&quot;004.png&quot; style=&quot;width: 701px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=266&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 390px;&quot;&gt;&lt;/p&gt;&lt;p&gt;実は「execute」や「submit」やどちらを使っても構いません。「execute」を使用して変数をクロージャ機能でデータを共有しても問題ないですね。(参考:クロージャ機能は変数がラムダ式外で宣言した変数をラムダ式内で使えることができることです。)&lt;/p&gt;&lt;p&gt;でも私の場合は特別なこと以外は「submit」関数を使います。&lt;/p&gt;&lt;p&gt;なぜなら「submit」関数は「runnable」インタフェース、「callable」インタフェースの両方を使えるのでです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまえ纏めます。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;スレッド種類&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;	  &lt;tr&gt;        &lt;td&gt;newsinglethreadexecutor&lt;/td&gt;	    &lt;td&gt;1個のスレッドを使用するスレッドプール&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;newcachedthreadpool&lt;/td&gt;	    &lt;td&gt;個数の制限がないスレッドプール&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;newfixedthreadpool&lt;/td&gt;	    &lt;td&gt;個数を指定して使用するスレッドプール&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;newscheduledthreadpool&lt;/td&gt;	    &lt;td&gt;特定時間などを指定して使用するスレッドプール&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;newworkstealingpool&lt;/td&gt;	    &lt;td&gt;1.8バージョンから使えるスレッドプールですが、完全なパラレル形で使えるスレッドプール&lt;/td&gt;	  &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;そしてスレッドプールではスレッドを呼び出せる関数が２つがあります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;関数名&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;execute&lt;/td&gt;		&lt;td&gt;パラメータは「runnable」インタフェースでリターン値がありません。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;submit&lt;/td&gt;		&lt;td&gt;パラメータは「runnable」、「callable」インタフェースがオバーロードになっているので、「void」やジェネリックタイプで返却が可能です。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;参考でスレッドプールを終了するようには関数が３つあります。&lt;/p&gt;&lt;p&gt;一般的に使用する「shutdown」はプールの中の全てのスレッドが終了するとプールを終了する関数です。&lt;/p&gt;&lt;p&gt;「shutdownnow」の場合はプールの中のスレッドを強制終了してプールを終了します。「awaittermination」は時間を設定して時間まで終了しなかったらスレッドを強制終了してプールを終了します。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;関数名&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;shutdown&lt;/td&gt;		&lt;td&gt;全てのスレッドが終了するとプールを終了します。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;shutdownnow&lt;/td&gt;		&lt;td&gt;全てのスレッドが強制終了するとプールを終了します。&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;        &lt;td&gt;awaittermination&lt;/td&gt;		&lt;td&gt;時間間で終了しないと全てのスレッドが強制終了するとプールを終了します。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/65.html</guid><pubDate>Fri, 17 Jan 2020 07:42:13 +0900</pubDate></item><item><title>[Java] スレッド(Thread)、同期化(synchronized)、デッドロック(deadlock)</title><link>https://www.nowonbun.com/64.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページはスレッド(thread)、同期化(synchronized)、デッドロック(deadlock)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;スレッド(thread)とはどのプログラム内で、特にプロセス内で実行する流れの単位といいます。私が今まで「main」からプログラムを作成して実行したことが一つのスレッドで動きましたが、状況によって一つの以上のスレッドも運用できます。&lt;/p&gt;&lt;p&gt;そのことをマルチスレッドといいます。&lt;/p&gt;&lt;p&gt;スレッドの意味は「java」だけではなく、全てプログラム言語、システム内でいうスレッドの意味は全て同じです。一般的にプロセス内で複数のスレッドが存在しますが、各独立的な並列の流れです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=261&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 479px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「thread1」と「thread2」を実行します。スレッドの内ではループで「0」から「100」まで繰り替えしてコンソールで出力します。「thread.sleep」の場合はスレッドを止まると意味で単位は1ミリ秒です。&lt;/p&gt;&lt;p&gt;なので「1000」は「1秒」になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;普通の我々の知識だと「thread1」が終わって「thread2」が実行しそうですね。でも実際には「thrad1」と「thread2」が同時に動いています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、スレッドを呼出す時に呼出した関数が違いますが、「start」と「run」がありますね。&lt;/p&gt;&lt;p&gt;「start」の場合はスレッドが終了するところまで待ちなく、次のステップに行きますが、「run」の場合はスレッドが終了するまでステップを待ちます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=263&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 507px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例は一つのクラスのデータを２つのスレッドで共有して加算することです。初めのスレッドで「0」から「100」まで加算、２つめも「0」から「100」まで加算ですね。&lt;/p&gt;&lt;p&gt;「0」から「100」まで加算は「100」ですが、予想値は「200」ですね。&lt;/p&gt;&lt;p&gt;でも結果は「195」ですね。理由は「ex.data++」のことは加算ですが、内部で「int buffer = ex.data + 1 ; ex.data = buffer;」で動いていますね。&lt;/p&gt;&lt;p&gt;スレッド1で「ex.data」は「0」でした。そこで「1」になることですが、当時にスレッド2でも「ex.data」が「0」ならスレッド1とスレッド2で二回に加算しますが、結果は「1」になることです。&lt;/p&gt;&lt;p&gt;私が考えることはスレッド1で加算するとその後でスレッド2で加算して「2」になることを予想しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上みたいにするようには同期化が必要です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=262&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 536px;&quot;&gt;&lt;/p&gt;&lt;p&gt;同期化のキーワードは「synchronized(ロックの対象)」です。&lt;/p&gt;&lt;p&gt;上の例は「ex」クラスにロックをしていますが、「synchronized」のステップが実行する時には他の「synchronized」では待つことになります。&lt;/p&gt;&lt;p&gt;すなわち、スレッド1「ex.data++」で実行する時にはスレッド2で同時に「ex.data++」に来てもスレッド1「synchronized」のステップが完了するまで待ちますね。&lt;/p&gt;&lt;p&gt;上の例は「synchronized」の中で「synchronized」を設定した場合です。&lt;/p&gt;&lt;p&gt;「synchronized」の中で「synchronized」することは問題ないです。十分に仕様によって設計する可能性が多いです。&lt;/p&gt;&lt;p&gt;でも問題はスレッド1に「synchronized(ex1)」の中で「synchronized(ex2)」が、スレッド2に「synchronized(ex2)」の中で「synchronized(ex1)」がありますね。&lt;/p&gt;&lt;p&gt;スレッド1とスレッド2と同時に動くことなので、スレッド1には「synchronized(ex1)」が、スレッド2には「synchronized(ex2)」に進入しますね。&lt;/p&gt;&lt;p&gt;でも、スレッド1の「synchronized(ex1)」の中で「synchronized(ex2)」に進入したいですが、スレッド2でロックになっていますね。なので待ちます。&lt;/p&gt;&lt;p&gt;逆にスレッド2の「synchronized(ex2)」の中で「synchronized(ex1)」に進入したいですが、スレッド1でロックになっています。&lt;/p&gt;&lt;p&gt;お互いにロックを待つ状況でシステムが止まった状況、デッドロック(deadlock)に言います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例は私が例として簡単に作ったからデッドロックがみやすいですが、実際に関数の中で関数のか中で、ロック、ロックをかけるとデッドロックを解決するのが簡単ではないですね。&lt;/p&gt;&lt;p&gt;なので初めからデッドロックが掛けないように設計を慎重に作らなければならないですね。&lt;/p&gt;&lt;p&gt;デッドロックにならないようには下記のルールがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;1. できれば「synchronized」の中で「synchronized」をしないようにする。&lt;/p&gt;&lt;p&gt;2. ロック対象のクラスを決まるか一番上位クラスで決まることでお互いロックがならないようにする。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでデッドロックの説明でした。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/64.html</guid><pubDate>Fri, 17 Jan 2020 07:42:04 +0900</pubDate></item><item><title>[Java] Streamフィルタ式</title><link>https://www.nowonbun.com/63.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページはstreamフィルタ式に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、私が「i/o」に関して説明する時にstreamについて説明したことがありますね。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/61.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 21] io(input / output)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;意味としてはその時に同じですが、今回はlistやmapにあるデータを「stream」型に変わって検索、ソートなどをすることです。&lt;/p&gt;&lt;p&gt;説明が難しいですが、例で説明します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=257&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 525px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「list」に「0」から「9」までのデータを入れました。そのリストで私は偶数を抽出したいですね。&lt;/p&gt;&lt;p&gt;なので、「filter」関数を作って偶数を抽出して返却しました。なので上みたいなソースが実装されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、ただ「int」型のリストで抽出でも複雑ですね。ただ「int」系ではなく「class」タイプならどうかな。もっと複雑になりますね。&lt;/p&gt;&lt;p&gt;プログラミングでデータ抽出やソート処理がすごく多いですね。それを簡単に処理するような文法がstreamフィルタ式です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=258&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 484px;&quot;&gt;&lt;/p&gt;&lt;p&gt;使用方法はリストの場合に「stream()」で変換します。「filter」関数で中はラムダ式ですね。形式はリターン値が「boolean」タイプでパラメータはリストの一つのデータが繰り返して出ます。&lt;/p&gt;&lt;p&gt;繰り返して出たデータでリターン値が「true」場合にstream式に残ります。「collect」関数で「list」タイプに変換して返却しますと意味ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;他の例です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=259&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 593px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例では３つの例を作成しました。&lt;/p&gt;&lt;p&gt;初めはリスト形式をマップ形式に変換しました。「collect」関数でパラメータは「キーになるデータを取得する関数名」と「キーによってなるデータ」でマップを作ります。&lt;/p&gt;&lt;p&gt;「tomap」の場合は一つのキーで一つのデータを作成することですが、もし重複キーがある場合あにはエラーになります。&lt;/p&gt;&lt;p&gt;その時には「groupingby」関数を利用してマップを作れば、キーによってリストデータで紐付きます。&lt;/p&gt;&lt;p&gt;後、「toarray」を利用してリストを配列にも変換できますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最後は「findany」や「findone」関数がありますが、その関数は一つのデータを出力します。すなわち、フィルタで一つの結果を予想する時に使います。&lt;/p&gt;&lt;p&gt;でも、上の関数は「optional」クラスに変換しますが、「optional」関数は「null」などの検索結果が正しい可否をチェックするようなクラスですね。&lt;/p&gt;&lt;p&gt;例えば、「string」タイプならクラスタイプなので、問題ないですが、「int」や「double」の場合は「null」がないデータタイプなので、データタイプだけでは「null」チェックができないですね。&lt;/p&gt;&lt;p&gt;そのため、「optional」クラスが存在することだと思えばよいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果は「collect」や「finaany」、「findone」で結果をもらいます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば「sorted」場合はリストの並びを設定できますね。上の場合は「* -1」を入れて降順に設定しましたが、「* -1」がなければ昇順でリストが並びますね。&lt;/p&gt;&lt;p&gt;並びのキーは「node」の中で「index」によって設定しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「parallelstream」がありますが。「parallelstream」はループを一つのcpuではなく並列cpuを利用してフィルタを反映するように設定することですね。&lt;/p&gt;&lt;p&gt;大量データの場合は「parallelstream」が早いと思いますが、少ない場合はインタラプト設定で逆に遅くなります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=260&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 799px;&quot;&gt;&lt;/p&gt;&lt;p&gt;私の結果は別に問題なく出ましたが、パラレル処理する場合は結果が順番通りに出ない可能性もあります。パラレル処理する時には順番が関係ない、データ量が多いが早い結果を出せる時には良いと思いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「stream」の場合は「c#」の「linq」の機能と似てます。参考してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/28.html&quot; target=&quot;_balnk&quot;&gt;[c# スタディ - 27] linq(リンク)-1&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/29.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 28] linq(リンク)-2 (メソッド式)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/30.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 29] linq(リンク)-3 (enumerableクラス)&lt;/a&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/63.html</guid><pubDate>Fri, 17 Jan 2020 07:41:54 +0900</pubDate></item><item><title>[Java] ジェネリック(Generic type)</title><link>https://www.nowonbun.com/62.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページはジェネリック(generic type)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスの基本構成はメンバー変数、関数になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=254&quot; data-filename=&quot;001.png&quot; style=&quot;width: 584px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例はstackアルゴリズムを実装しました。stackアルゴリズムは「push」、「pop」の関数でなっているアルゴリズムです。&lt;/p&gt;&lt;p&gt;「push」の順番で「pop」のより一番最後に入力されたデータが一番最初に出る構造です。(filo構造)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のアルゴリズムでパラメータは「object」型になっていますね。なので「string」や「int」や「float」、「double」のデータタイプでも入力します。&lt;/p&gt;&lt;p&gt;でも、「pop」にして使うようには「object」型なので、ユーザによってデータタイプを知らないですね。逆にデータキャストをしなければならない構造です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=253&quot; data-filename=&quot;002.png&quot; style=&quot;width: 553px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうすれば「object」ではなく、データタイプをクラス内部ではなく、外部で決める方法がないかというとそれをジェネリック(generic type)で解決できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=255&quot; data-filename=&quot;003.png&quot; style=&quot;width: 588px;&quot;&gt;&lt;/p&gt;&lt;p&gt;eclipseのコードアシスタントを確認しても「pop」関数の返却タイプが「integer」になっているし「push」のパラメータも「integer」タイプになっていますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=256&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;我々がよく使う関数「list」タイプでもすべてジェネリック(generic type)になっていますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=252&quot; data-filename=&quot;005.png&quot; style=&quot;width: 530px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ジェネリック(generic type)は単純なキーワードですが、プログラムのデータ正誤性のため、様々のところで重要なキーワードですね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/62.html</guid><pubDate>Fri, 17 Jan 2020 07:41:46 +0900</pubDate></item><item><title>[Java] IO(Input / Output)</title><link>https://www.nowonbun.com/61.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページはjavaで使うio(input / output)に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ioとは(input / output)の略語でただinputのキーボードとoutputのモニターの意味ではなく、ファイルのinputのファイル作る、ファイルのoutputのファイルを読込みのいみですね。&lt;/p&gt;&lt;p&gt;すなわち、プログラムでioというのはファイルを扱うと意味になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応、この「input / output」を理解するようには「byte[]」配列と「stream」に関して認知しなければならないです。&lt;/p&gt;&lt;p&gt;我々がプログラムで使うデータは結局、計算してどこかで格納するか、出力するか(印刷とか、モニターに結果を表示か)、どこかで通信してデータを渡すかになりますね。&lt;/p&gt;&lt;p&gt;そのデータをデータ化するようにはバイナリー形式に変換します。バイナリーとは機械が認識できるような2進ファイルですね。その2進ファイルの一つのデータがjavaでは「byte」形式になっています。&lt;/p&gt;&lt;p&gt;なので、バイナリーデータは「byte[]」配列になっています。&lt;/p&gt;&lt;p&gt;javaで使うデータタイプでは「int」型があります。この「int」はすべて「4byte」になっていますね。「4byte」になっていることの意味では「int」型をバイナリーにすると「byte[4]」になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=247&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 563px;&quot;&gt;&lt;/p&gt;&lt;p&gt;もし、上の「4byte」で順番が変わったり、「4byte」の[0]と[1]が「0」なので、省略しますと思うと、データが「1000」にならないですね。初めから「int」が「4byte」だから「2byte」で格納するとデータが「int」に戻れません。&lt;/p&gt;&lt;p&gt;なので、連続なデータの流れ、上のデータを「byte[]」単位の結ぶかたをプログラムでは「stream」と言います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「stream」は「i/o」と「socket」通信などと関係がたくさんありますね。&lt;/p&gt;&lt;p&gt;テキストファイルをプログラム側に読込む時に「stream」形式で受け取るし、データをファイルに書出す時にも「stream」形式を利用します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=251&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 552px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=249&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 578px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「fileinputstream」でファイルを読み込んで、コンソールに出力しました。結果は「test.txt」と同じ文言が出力しますね。&lt;/p&gt;&lt;p&gt;今回は逆にデータ内容をファイルに書出します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=248&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 607px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、すべて「stream.close()」の関数を呼出しています。なぜなら、「i/o」にはコネクションがありますが、それをちゃんと閉めてリソースを返却しなければならないですね。&lt;/p&gt;&lt;p&gt;そのためにありますが、もちろん「close」を忘れても「jvm」で自動に処理してくれますが、ちゃんとリソース返却がなれないとパフォーマンスが遅い理由になります。&lt;/p&gt;&lt;p&gt;もし、「close」を呼出す前に「exception」が発生すれば、どのようになるか？&lt;/p&gt;&lt;p&gt;もちろん、「close」を呼び出せなかったので、リソースが残るままになりますね。そのため、ここで「try」キーワードを使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=250&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 659px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の「try ~ close」を使えるようには必ずクラスが「closeable」インタフェースを継承しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=246&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 546px;&quot;&gt;&lt;/p&gt;&lt;p&gt;もちろん「try ~ catch ~ close ~ finally」の構文も使えますね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/61.html</guid><pubDate>Fri, 17 Jan 2020 07:41:38 +0900</pubDate></item><item><title>[Java] 匿名クラス、そしてラムダ式(Lambda expression)</title><link>https://www.nowonbun.com/60.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページは匿名クラスとラムダ式に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;匿名クラスとは言うとおりにクラス名がないことを言います。クラス名がないならどのように実装するかと思いますが。&lt;/p&gt;&lt;p&gt;簡単に説明するとインタフェースの指示子で別に実装されたクラスではなく、直接に「new」キーワードだけ使ってクラスを宣言する方法だと思われます。&lt;/p&gt;&lt;p&gt;説明が難しいですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=243&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 528px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、インタフェース「exampleinterface」を実装しました。&lt;/p&gt;&lt;p&gt;「main」関数で指示子「exam」をインタフェース「exampleinterface」で宣言しました。そうすると基本的に我々の知識だとクラスを割当て使いますね。&lt;/p&gt;&lt;p&gt;でも、実装したクラスではなく、「new インタフェース名」で宣言して「override」でクラスを継承しますね。&lt;/p&gt;&lt;p&gt;すなわち、別にクラスを作ることではなく、直接にクラスを作ることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;下で「setdata」で「10」の値を入れて、「print」関数で出力しました。普通のクラスと使う方法が同じですね。&lt;/p&gt;&lt;p&gt;匿名クラスは普通のクラスと別に差異がないですね。別に普通のクラスを宣言して使ってもいいと思いますが、なんで匿名クラスを使うかと言えば匿名クラスはラムダ式と関係があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々が一回用のため、一つ一つクラスをすべて宣言するとプロジェクトサイズが大きくなりますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ラムダ式とはクラス名とメソッド名を省略して一つのメソッド式で表現した文法といいます。&lt;/p&gt;&lt;p&gt;簡単にいうと匿名クラスでメソッド名まで省略したいということですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=241&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 483px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、「exampleinterface」のインタフェースに「print」の関数がありますね。&lt;/p&gt;&lt;p&gt;それを「run」関数でパラメータとしてインタフェースを受けています。&lt;/p&gt;&lt;p&gt;「main」関数で「run」を呼出しますが、ラムダ式( () -&amp;gt; { } )でデータを渡します。&lt;/p&gt;&lt;p&gt;ラムダ式の条件はインタフェースの中で一つのメソッドの時に使われますが、もしメソッドが2つ以上ならラムダ式を使えません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ラムダ式は上の例みたいに「void」だけではないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=245&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 652px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例みたいに、パラメータ設定も可能だし、リターン値設定も可能です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ラムダ式の条件ではインタフェースで一つのメソッドがある時に使うことですが、その条件せいでよく使うインタフェースがあります。&lt;/p&gt;&lt;p&gt;それは「runnable」ですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=242&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 539px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージをみれば、インタフェースで一つのメソッドの条件があうし、パラメータとリターンの値が「void」ですね。それだけではなく、ラムダ式の概念でクロージャ機能があります。&lt;/p&gt;&lt;p&gt;クロージャ機能は変数がラムダ式外で宣言した変数をラムダ式内で使えることができるのでです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=244&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 468px;&quot;&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/60.html</guid><pubDate>Fri, 17 Jan 2020 07:41:28 +0900</pubDate></item><item><title>[Java] 例外処理( try ~ catch)</title><link>https://www.nowonbun.com/59.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページには例外処理に関して調べてみました。&lt;/p&gt;&lt;p&gt;例外処理とはプログラムを作成しながら予想できなかった部分を処理することを例外処理といいます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例えば、除算する関数を作ると考えたら、その関数はパラメータを2つをもらいます。1つめのパラメータは除算する対象、2つめのパラメータは分ける数ですね。&lt;/p&gt;&lt;p&gt;でも、2つめのデータを「0」をもらうとどのようになるかな？&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 554px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、「10」から「2」を分けった時には確かに「5」の結果になりますね。&lt;/p&gt;&lt;p&gt;でも、「0」になった時にはコンソールタブで赤い文字でエラーメッセージが出ました。その後で「10」から「5」を分ける構文は実行しなくてシステムが止まりました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;もちろん、「division」関数で「val2」が「0」の場合は「if」を作成してエラーがならないようにできます。今回は簡単なプログラムなので問題ないですが、複雑なプログラムの場合はすべての例外を予想して作成はできないですね。&lt;/p&gt;&lt;p&gt;そのため、例外処理があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 487px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「division」関数で「try ~ catch」構文がありますね。「try」はエラーが発生する可能性がある範囲、「catch」の場合はエラーが発生する時に処理する構文ですね。&lt;/p&gt;&lt;p&gt;上の例は「0」でエラーが発生しましたから、コンソールで「error」を出力して「0」をリターンしますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例外処理は「try ~ catch」ですね。そうすると「catch」のキーワードで「exception」というクラスが宣言しています。その意味はエラー処理別で処理する分岐ですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=236&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 529px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「arithmeticexception」の「catch」を作って実行しました。結果は「zero error」が出力しました。その意味ではエラー別で分岐して処理ができると意味です。&lt;/p&gt;&lt;p&gt;「exception」の場合は例外処理の上位クラスなので、「arithmeticexception」の以外のエラーは「exception」になります。&lt;/p&gt;&lt;p&gt;(※一番上位インタフェースは「throwable」です。「throwable」は「runtimexception」と「exception」になります。「runtimeexception」と「exception」の差は少し後で説明します。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると意図的に「exception」も作ることができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=237&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 501px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「print」関数でパラメータが「0」より未満だと「throw」を利用して「exception」を発生しています。&lt;/p&gt;&lt;p&gt;コンソールをみれば「error!」というメッセージが出力しました。関数の隣をみると「throws」という予約子のキーワードがあります。&lt;/p&gt;&lt;p&gt;「throws」は関数の中で発生する可能があるエラーを宣言することですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=239&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 778px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その予約子で関数の中で発生するエラーをコンパイル段階でチェックができるので、プログラムの品質が上がるようなキーワードです。&lt;/p&gt;&lt;p&gt;でも、関数が複雑だし、全てのエラーを検出することが大変な時には「runtimmexception」を利用してコンパイルの段階でチェックしないように実行ができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=238&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 502px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてすべての関数で「try ~ catch(throwable)」を掛けて実装するのがいいじゃないと思われますね。「try ~ catch」の場合はインタラプトと関係があるキーワードなので、「try ~ catch」はパフォーマンスがすごく遅いですね。&lt;/p&gt;&lt;p&gt;簡単なプログラムでは認知しないですね。複雑のプログラムだとパフォーマンスがすごく落ちる可能性があるので、戦略的に本当に必要なところで設計して作成するほうが良いと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最後で「finally」のキーワードに関して説明します。(順番がおかしくなったな。。。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=240&quot; data-filename=&quot;007.jpg&quot; style=&quot;width: 480px;&quot;&gt;&lt;/p&gt;&lt;p&gt;また初めの例に戻りましたが、「finally」のキーワードは「try ~ catch」の実行関係ずに、必ず実行する領域です。&lt;/p&gt;&lt;p&gt;上の例を見れば、「10 / 2」の場合は「5」をリターンしましたが、コンソールをみると「finally」と文言が出力しました。後、「zero error」が発生した時も結果を「0」をリターンしましたが、「finally」という文言が出力されましたね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/59.html</guid><pubDate>Fri, 17 Jan 2020 07:41:19 +0900</pubDate></item><item><title>[Java] 列挙型(enum)</title><link>https://www.nowonbun.com/58.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは列挙型に関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;列挙型に関しては「java」だけあることではなく、「c#」でも同じ意味であるのでご参考してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/19.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 18] enum(列挙型)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;列挙型とは、プログラミングする時にタイプやステータスを表現する時にありますね。でも、そのステータスをただ、「int」型で値を「1」や「0」に表現すると皆にプログラム可読性が悪くなります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=234&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 375px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、「print」関数で「int」タイプのパラメータを受け取って、「1」の場合と「2」の場合、「3」の場合を分けって処理することになります。上の例はすごく簡単な例なので、「int」型でしてもそんなに難しいとは思わないですが、プログラムが複雑になれば悪いコードになります。&lt;/p&gt;&lt;p&gt;そのためあることが列挙型です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=235&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 383px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、列挙型の「printtype」を宣言しました。「print」関数でパラメータタイプを「printtype」にして「main」関数で「printtype」を入れることを確認できますね。&lt;/p&gt;&lt;p&gt;そのとおりにプログラムを作成すると確かに以前みたいに「1」と「2」で数字だけの意味ではなく、宣言文字の意味を与えて使用ができますので、プログラムの可読性が上がると思いますね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/58.html</guid><pubDate>Fri, 17 Jan 2020 07:41:08 +0900</pubDate></item><item><title>[Java] 抽象クラス</title><link>https://www.nowonbun.com/57.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは抽象クラスに関して調べてみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;抽象クラスはインタフェースと一般クラスを混ぜている形だと思ったら理解しやすいです。(※実はそれではないけれども、その形ですね。)&lt;/p&gt;&lt;p&gt;抽象クラスはクラスという名を持っていますが、クタスみたいに「new」して割当てができません。でも、インタフェースみたいに処理式及び変数がないことではなく、あります。&lt;/p&gt;&lt;p&gt;抽象クラスは一般クラスの上位クラスで共通処理を集まると意味がありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=232&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 668px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「abstractclass」があります。「abstractclass」の中で「run」関数があり、「run」関数の中では「print」関数を呼出しますね。&lt;/p&gt;&lt;p&gt;でも、「print」関数は抽象において継承クラス側から作ることにします。&lt;/p&gt;&lt;p&gt;「abstactclass」を継承した「class1」のクラスの場合は「print()」を再定義します。&lt;/p&gt;&lt;p&gt;「main」関数でみれば、「abstractclass」指示子に「class1」を割当てます。&lt;/p&gt;&lt;p&gt;その中で「run」関数を呼出すと「print」関数を呼びます。「print」関数は継承されたクラスから再定義します。&lt;/p&gt;&lt;p&gt;つまり、「class1」の場合は「class1」の「print」関数を「class2」の場合は「class2」の「print」関数を呼びます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで、インタフェースと抽象クラスを調べてみました。&lt;/p&gt;&lt;p&gt;インタフェースと抽象クラスは「oop」ですごく重要な概念ですね。&lt;/p&gt;&lt;p&gt;特にデザインパターンでインタフェースと抽象クラスを利用して様々の設計パターンがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;下記はデザインパターンでデコレーションパターンの一部です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=233&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 481px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上をみれば、インタフェースから経書して抽象クラス、一般クラスまで継承してますね。デコレーションパターンはプログラム可読性とクラスファイル整理がしやすいので、使いますね。&lt;/p&gt;&lt;p&gt;後、機会があれば、詳しく説明します。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/57.html</guid><pubDate>Fri, 17 Jan 2020 07:40:59 +0900</pubDate></item><item><title>[Java] インタフェース</title><link>https://www.nowonbun.com/56.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページではインターフェースに関して調べてみます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;インターフェースとは一般クラスと違いますが、処理式と変数がない形だけあるクラス(?)、すなわち、「new」ができないクラス(?)と言います。&lt;/p&gt;&lt;p&gt;つまり、「heap」メモリに割当てるのができなく、「stack」だけメモリアドレスを宣言する形になるクラスです。&lt;/p&gt;&lt;p&gt;クラスといいますが、インターフェースですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうなら、なぜ処理式がなしで形が￥だけあるインターフェースがあるか？&lt;/p&gt;&lt;p&gt;プログラムを作成する時に本当に割当てるクラスだけではなく、形だけで宣言してデータを扱う時がありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=227&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 436px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、時にプログラム上で問題がありません。「print」関数のパラメータで「true」を入れると「class1」の「print」が実行して結果が出力するはずですね。&lt;/p&gt;&lt;p&gt;または「false」を入力すると「class2」が出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、私の場合はクラスをリターンしてクラスの値をもらいたい時にどうすればいいかな？&lt;/p&gt;&lt;p&gt;確かに上のクラスが違うので、一つの返却データタイプで決めて返却はできないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;じゃなければ、「object」タイプで返却をもらうことができますが(※javaはすべてのクラスが「object」タイプを経書しています。)、「object」タイプには「print」関数がないので、「print」関数を呼出すのができないですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=228&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 399px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、「eclipse」でエラーが発生しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうです。そのために、インターフェースが必要ですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=229&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 444px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、「interface」を宣言して「interface」中で何を使うかのメソッドを宣言します。&lt;/p&gt;&lt;p&gt;参考に「interface」は処理式と変数は要らないです。なのでアクセス修飾子も要らなく、全て「public」だと思ったらよいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、「main」関数に戻って「print」関数を呼出すと「interface1」の形式でリターンします。でもそのインタフェースは「true」の場合は「class1」を「false」の場合は「class2」のデータを持っています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=231&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 398px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インタフェースの場合はリターン式のためではなく、クラスを纏めて処理式を作ることも可能ですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=230&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 457px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のみたいに戦略的に設計も可能です。&lt;/p&gt;&lt;p&gt;実際に「interface」は「oop」で重要なキーワードで本当に「oop」らしくプログラミングができるようにするキーワードですね。&lt;/p&gt;&lt;p&gt;後で、デザインパターンに関しても説明しようと思いますが、そのデザインパターンで核心な文法だし、概念ですね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/56.html</guid><pubDate>Fri, 17 Jan 2020 07:40:52 +0900</pubDate></item><item><title>[Java] thisとsuper</title><link>https://www.nowonbun.com/55.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは「this」と「super」に関して調べてみます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前のページで「クラス継承」に関して調べてみました。&lt;/p&gt;&lt;p&gt;リンク - &lt;a href=&quot;https://www.nowonbun.com/54.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 14] クラス継承&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その中で簡単に説明しましたが、「@override」という関数再定義がありました。それと関係があるものですが、クラスが継承する時及びメンバー変数とローカルを変数を区分するように必要ですが、それが「this」、「super」です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=223&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 480px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、「aclass」の中で「value」のメンバー変数と「setvalue」と「getvalue」の関数がありました。&lt;/p&gt;&lt;p&gt;「setvalue」をみれば、「パラメータ」名が「value」ですが、メンバー変数も「value」のことがあり、メソッドの中では「value」の変数名はなんの変数を向かっているかしらないですね。&lt;/p&gt;&lt;p&gt;すみません、知らないことではなく、一番近いのローカル変数をみることになっています。すなわち、「value」変数を使うとローカル変数を見て、もしかしてローカルで変数名がなければメンバー変数も見ますね。&lt;/p&gt;&lt;p&gt;両方なければエラーが発生します。では上みたいにメンバー変数名とローカル変数名が同じことがある場合、ローカル変数をみることは知りますが、メンバー変数をどうふうに見ますかっていうとその時に「this」のクラスを使います。&lt;/p&gt;&lt;p&gt;基本的に「this」と言うのは”自分のクラス”ということでクラスの中の変数、すなわちメンバー変数を向かいますと意味ですね。&lt;/p&gt;&lt;p&gt;結論は上の例「this.value = value」の意味はパラメータ「value」からメンバー変数「value」にデータを入力することの意味になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうするとクラス経書の場合はどうするか。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=224&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 463px;&quot;&gt;&lt;/p&gt;&lt;p&gt;実は例みたいにメンバー変数を「protected」に設定しませんが、説明のため実装しました。&lt;/p&gt;&lt;p&gt;上の例を見ると「bclass」の場合は「aclass」を継承します。&lt;/p&gt;&lt;p&gt;「bclass」の「setvalue」の関数をみれば、上位クラスのメンバー変数の「value」もあるしメンバー変数の「value」があるし、パラメータの「value」もあります。&lt;/p&gt;&lt;p&gt;例とおりに「super」は上位クラスの「value」を見ることになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=225&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 353px;&quot;&gt;&lt;/p&gt;&lt;p&gt;この場合はどうするか。。「super」の場合は直前の上位クラスを参照するので、aclassの変数ができません。&lt;/p&gt;&lt;p&gt;ただ、上みたいに同じ変数名や関数名がそうです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=226&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 417px;&quot;&gt;&lt;/p&gt;&lt;p&gt;別の変数名と関数名は「cclass」でも参照できます。上の例みたいに「cclass」から「aclass.data」でデータを入力できます。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/55.html</guid><pubDate>Fri, 17 Jan 2020 07:40:43 +0900</pubDate></item><item><title>[Java] クラス継承</title><link>https://www.nowonbun.com/54.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページではクラス継承に関して調べてみます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラス継承とはクラスの特性を継承して再定義することということです。すなわち、「a」と「b」のクラスを作成します。&lt;/p&gt;&lt;p&gt;「b」クラスは「a」クラスの形が同じですが、「b」クラスの場合は特別に処理する関数及びメンバー変数が追加される形になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=222&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 522px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「aclass」と「bclass」があります。「aclass」、「bclass」を見ると「dataa」変数と「setdataa」、「print」関数が同じですね。&lt;/p&gt;&lt;p&gt;「bclass」が「aclass」より「datab」と「setdatab」、「printall」が追加している形ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実際にプログラミングするとこのケースが多いです。似ているな形ですね。ここで「print」関数を変更したいというと「aclass」、「bclass」を修正しますね。&lt;/p&gt;&lt;p&gt;もし、こんなケースのクラスが「100」個以上なら？すべて修正しなければならないなの？&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=219&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 492px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば「bclass」に「extends」キーワードを使って「aclass」を継承しました。&lt;/p&gt;&lt;p&gt;すなわち、「bclass」には「dataa」変数と「setdataa」、「print」関数があることと同じです。&lt;/p&gt;&lt;p&gt;「printall」関数をみれば「print」関数を呼出してもエラー表示がされないですね。その上で「print」変数を修正したいなら？&lt;/p&gt;&lt;p&gt;「aclass」の「print」関数だけ修正すれば解決です。すなわち、こんなケースが「100」こあっても「aclass」の修正だけ「ok」になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;継承の意味はわかりました。そうすると形は同じだけど、「print」関数だけ再定義したい時もありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=220&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 532px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば「bclass」で「@override」のアノテーションを付けって再定義しました。&lt;/p&gt;&lt;p&gt;そのことはbclassで「printall」関数を呼び出せば、「aclass」の「print」ではなく、「bclass」の「print」が呼び出せますね。&lt;/p&gt;&lt;p&gt;「bclass」の「print」関数には「aclass」の「setdataa」の関数を呼出し、「dataa」の変数を再設定しますね。&lt;/p&gt;&lt;p&gt;まだ「this」、「super」に関して説明してなかったので、「base.print」の場合は「aclass」の「print」を呼び出すと思えばよいです。&lt;/p&gt;&lt;p&gt;「this」、「super」は次にページで説明します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=221&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 418px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果を見れば「aclass」の場合は「10」の値を入れたので「10」の結果が出ました。&lt;/p&gt;&lt;p&gt;「bclass」の場合は「printall」で「print」を呼出し、「20」と「40」が加算して「60」のデータを出力し、「printall」で「datab」が出力します。&lt;/p&gt;&lt;p&gt;なので、「60」、「40」順で出力しました。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/54.html</guid><pubDate>Fri, 17 Jan 2020 07:38:23 +0900</pubDate></item><item><title>[Java] new</title><link>https://www.nowonbun.com/53.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は「new」というキーワードに関して調べます。&lt;/p&gt;&lt;p&gt;「new」のキーワードは「java」のプログラムで考えずによく使うキーワードですが、実は一番意味ががキーワードだと思います。&lt;/p&gt;&lt;p&gt;「new」キーワードをよく使うと複雑なプログラムも簡単に解決するが、間違って使うとプログラムがおかしくしやすくなるキーワードです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前のページでも簡単に説明したことがありますが、「new」キーワードはクラスをメモリ登録だといいます。c言語の時代には「alloc」だといいます。&lt;/p&gt;&lt;p&gt;実の物理的なメモリはパソコンで付いている「ram」ですが、プログラム上でメモリは「stack」と「heap」があります。&lt;/p&gt;&lt;p&gt;簡単に説明すると、「stack」は静的で呼出し領域がなくなると値がなくなる特徴があります。「heap」の場合は参照タイプで動的で解除しないとなくならない特徴があります。&lt;/p&gt;&lt;p&gt;プログラムではこの２つを繋いで使っています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=217&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 430px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、今までよく見てた形ですね。&lt;/p&gt;&lt;p&gt;「main」関数で「example」クラスを割当て「example」クラスのコンストラクタで出力していますね。&lt;/p&gt;&lt;p&gt;ここで「example e = new example」の形で宣言しました。「example e」の場合は「int a」と同じ形でメモリ構造で見ると「example e」は「int」型の整数があります。&lt;/p&gt;&lt;p&gt;実施に「example」クラスのデータがあることではないです。「new example」で「heap」領域に割当て、そのメモリ住所を「example e」に入れる形になることです。&lt;/p&gt;&lt;p&gt;すなわち、「example e」は「stack」領域、「new example」は「heap」領域で宣言して「=」で連携することですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;説明が難しいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=216&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 410px;&quot;&gt;&lt;/p&gt;&lt;p&gt;例をみれば、「example a」と「example b」を宣言して「a」には「new」キーワードを使って割当てました。「b」の場合は「b = a」にしました。&lt;/p&gt;&lt;p&gt;そうして「a」に「10」の値を入力して「b」には「20」の値を入力しました。&lt;/p&gt;&lt;p&gt;その後、「a」のデータを出力すると「20」の値が出力しますね。なぜなら、「heap」メモリには一回だけ割当てて「a」と「b」変数には同じメモリアドレスを入力しました。&lt;/p&gt;&lt;p&gt;すなわち、「a」にあるクラスと「b」にあるクラスは同じなので「b」で値を変更すると「a」にもデータが変わりますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;次はメモリアドレスでもっと詳しく調べましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=218&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 462px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「hashcode」は正確にメモリアドレスではないけれども、一つの割当てたオブジェクト別で雄一なデータになるので、クラスのデータが同じでも同じクラスかどうかを区分するような整数の値です。&lt;/p&gt;&lt;p&gt;上の例をみると初めに「example a = new exmaple」、「example b = a」の場合は確かに同じ「hashcode」を持っていますね。&lt;/p&gt;&lt;p&gt;でも「b」の変数で「new example」した後は「a」と「b」が違う「hashcode」を持っていることで別のクラスだと判断ができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスと「new」の概念は「oop」で一番重要だし、基礎的な概念です。すなわち、オブジェクト概念ですね。率直にこの概念を理解できないとプログラムデザイン、設計なので全然できないので、一番重要ではないかと思います。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/53.html</guid><pubDate>Fri, 17 Jan 2020 07:38:15 +0900</pubDate></item><item><title>[Java]  Static</title><link>https://www.nowonbun.com/52.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は「static」のキーワードに関して調べてみます。&lt;/p&gt;&lt;p&gt;「static」とは英語の意味とおりにクラスや変数、メソッドに付ければ静的オブジェクトになるキーワードです。&lt;/p&gt;&lt;p&gt;静的オブジェクトの意味は、以前、「java」の中で最小単位がクラスということで勉強しました。そのクラスで変数、メソッドが存在します。そして、そのクラスを使うようには「new」でクラスをメモリに割り当てて使うことになりました。&lt;/p&gt;&lt;p&gt;今まで私が説明した流れになります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、「static」の場合、そのクラスを割り当てて使うことではなく、プログラムが起動する時に宣言することで、クラスが割当てることがなくても使うことです。&lt;/p&gt;&lt;p&gt;説明が難しいですが、クラスを「new」するとメモリ上では別々のデータオブジェクトになりますが、「static」の場合はプログラムの「heap」のメモリで雄一な変数やメソッドになります。&lt;/p&gt;&lt;p&gt;(※メソッドは割当てることと関係がないですが、メンバー変数をメソッド中で使うので、この表現にしました。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=212&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 410px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を確認すれば「main」は「example」クラスの中にあります。そして「main」で「data」クラスを割り当てます。&lt;/p&gt;&lt;p&gt;初めのクラスは「d1」という変数名で宣言して「setvalue」関数を呼出し「1000」のデータを入力します。&lt;/p&gt;&lt;p&gt;そして「d2」という変数名で「data」クラスを割り当てて、「getvalue」関数でデータを出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果は「1000」になりますね。確かに「d1」と「d2」は別のクラスですが、結果は「d1」の「value」の値、正確に「d1」で割り当てた「value」の値ではなく、「static」で静的になった「data.value」データですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は「static」をすべて外します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=214&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 400px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今回は「static」を宣言してないので、「d1」と「d2」の値は別々です。&lt;/p&gt;&lt;p&gt;当たり前で「d2」の「value」値は「0」ですね。「d1」は「1000」だと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実は「static」データはクラス中であってもクラス宣言が必要ないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=213&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 434px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例では「data」クラスの割当てることがなしで、直接「data.setvalue」で呼出しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その意味で我々が初めから使った「main」関数で理解ができます。&lt;/p&gt;&lt;p&gt;プログラムがコンパイルして実行する時に「static main」関数を探します。&lt;/p&gt;&lt;p&gt;形では「string[]」のパラメータを持っているメソッドで実行します。「static」でなった「main」関数は割当てがいらないし、直接に呼び出しができるからです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると「main」関数が２つの場合はどのようになるかな？&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=215&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 560px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「eclipse」上では一応、なんのメイン関数を呼び出すかを聞きますね。&lt;/p&gt;&lt;p&gt;コンパイルしたファイルだとスタート関数が２つを見つけましたとエラーになります。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/52.html</guid><pubDate>Fri, 17 Jan 2020 07:38:04 +0900</pubDate></item><item><title>[Java] アクセス修飾子</title><link>https://www.nowonbun.com/51.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページではアクセス修飾子に関して調べてみます。&lt;/p&gt;&lt;p&gt;クラスやメソッドを宣言する時に、「public」、「private」、「protected」などのキーワードをみたことありますね。このキーワードがアクセス修飾子だといいます。&lt;/p&gt;&lt;p&gt;アクセス修飾子の役は単語の意味とおりに外部からアクセス制限する形になります。javaの中には下記とおりにアクセス修飾子を提供しています。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr&gt;        &lt;td colspan=&quot;2&quot; style=&quot;background-color:#c5fdfd;&quot;&gt;アクセス修飾子&lt;/td&gt;      &lt;/tr&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;アクセス修飾子&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;public&lt;/td&gt;        &lt;td&gt;すべてのクラスでアクセスが可能です。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;private&lt;/td&gt;        &lt;td&gt;クラスの中だけアクセスが可能です。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;protected&lt;/td&gt;        &lt;td&gt;パッケージで属するクラスと経書されたクラスだけでアクセスが可能です。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr&gt;        &lt;td colspan=&quot;5&quot; style=&quot;background-color:#c5fdfd;&quot;&gt;アクセス権限&lt;/td&gt;      &lt;/tr&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;アクセス修飾子&lt;/th&gt;        &lt;th&gt;クラス&lt;/th&gt;        &lt;th&gt;継承されたクラス&lt;/th&gt;        &lt;th&gt;同じパッケージ&lt;/th&gt;        &lt;th&gt;すべてクラス&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;private&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;☓&lt;/td&gt;        &lt;td&gt;☓&lt;/td&gt;        &lt;td&gt;☓&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;(default)&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;☓&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;☓&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;protected&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;☓&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;public&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;        &lt;td&gt;○&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;eclipseのソースアシスタントの利用して詳しく確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=210&quot; data-filename=&quot;001.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「class1」クラスの中には「a1」、「a2」、「a3」の３つの変数があります。この変数たちには違うアクセス修飾子を宣言しました。&lt;/p&gt;&lt;p&gt;「class1」の外部「program10」のクラスで見ると「a2」、「a3」だけに見えます。すなわち、「public」、「protected」が見えます。&lt;/p&gt;&lt;p&gt;「public」の場合はいずれもアクセスが可能な修飾子で、「protected」の場合は同じパッケージならアクセス可能なので見えることになります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はパッケージを変わって確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=211&quot; data-filename=&quot;002.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今回はパッケージを変わって「class1」を宣言しました。今度は「a2」だけ見えますね。「protected」はパッケージが変わると見えないアクセス修飾子なのでです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それならなぜこんなアクセス修飾子があるかな。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;理由はoop(object-oriented programming)のカプセル化のためです。カプセルはクラス単位でロジックを結んで一つの部品の概念になることだと思われます。&lt;/p&gt;&lt;p&gt;例えば、加算検証プログラムを作成すると思います。&lt;/p&gt;&lt;p&gt;このクラスは外部では検証なため、「input」関数、検証の結果をリターンする「output」関数だけ提供して直接にクラス内部は操作ができないようにします。&lt;/p&gt;&lt;p&gt;すなわち、検証プログラムでは外部apiは「input」、「output」だけで、クラスを使うユーザによって内部は知る必要がないということです。&lt;/p&gt;&lt;p&gt;でも、アクセス修飾子がないことで参照するクラスでクラスの内部変数などを任意で変更ができるようにすると「oop」の特性がなくなりますね。&lt;/p&gt;&lt;p&gt;結局、oopの特性がないプログラムはjavaプログラムの品質に影響がなります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それなら、アクセス修飾子に関して実際に使用方法に関して調べます。上の例は変数で「public」、「protected」、「private」で宣言しました。&lt;/p&gt;&lt;p&gt;でも、実際の業務ではルールがありますが、メンバー変数はすべて「private」で宣言します。メンバー変数の場合は外部で参照する必要がないし、必要だっても「getter」、「setter」という関数で参照します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「getter」、「setter」の場合は変数は「private」で「public」タイプの参照関数、設定関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=208&quot; data-filename=&quot;004.png&quot; style=&quot;width: 471px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして関数の場合は外部で参照する関数は「public」でその以外は「protected」で宣言することがルールです。でも、内部用な関数は「private」を使う場合もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=209&quot; data-filename=&quot;003.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/51.html</guid><pubDate>Fri, 17 Jan 2020 07:37:54 +0900</pubDate></item><item><title>[Java] クラス(Class)</title><link>https://www.nowonbun.com/50.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから「oop(object-oriented programming:オブジェクト指向プログラミング)」の核心だと考えられるクラス(class)に関して勉強します。&lt;/p&gt;&lt;p&gt;クラスは「java」プログラムの中でメモリの構成単位でプログラムを動けるオブジェクトだと考えられます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データタイプ単位では「int」や「float」などがありますが、オブジェクトとして変数を集まってプロシージャを作成し、実行する単位がクラス(class)だと思います。&lt;/p&gt;&lt;p&gt;すなわち、メソッドだけや変数だけではプログラムを作成ができないし、実行することができません。最小単位でクラス(class)が存在しなければならないと意味です。&lt;/p&gt;&lt;p&gt;私が今まで特に説明してなかったんですが、「main」関数を呼ばれるように下記とおりに作成しました。&lt;/p&gt;&lt;p&gt;例みたいに実行するために「main」関数だけ必要だってもクラス(class)が囲まなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスの場合は下記の要素をもっています。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;クラス要素&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;コンストラクタ&lt;/td&gt;        &lt;td&gt;クラスの初期処理及び関連機能処理&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;メンバー変数&lt;/td&gt;        &lt;td&gt;フィールドという呼ばれるグローバル変数&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;関数&lt;/td&gt;        &lt;td&gt;メソッド&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;予想よりクラスが持っているメンバーはc#より多くないですね。&lt;/p&gt;&lt;p&gt;classは上の例みたいに構成されています。以前に変数と関数に関しては勉強したことがあるので、そんなに違和感がないと思いますが、コンストラクタは関数とは違いますね。&lt;/p&gt;&lt;p&gt;コンストラクタは関数と比べてリターンタイプがないです。なぜなら、クラスの生成する時に処理処理をここでするので、リターン値が必要ないからではないかと思いますね。&lt;/p&gt;&lt;p&gt;または関数はクラス名と同じ名で作成できません。ではコンストラクタは必ずクラス名とコンストラクタ名は一致しなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;メンバー変数はクラス中で使う変数らしく、変数ですね。&lt;/p&gt;&lt;p&gt;すべて前に「public」と言うアクセス修飾子があります。アクセス修飾子に関して様々の理解が必要なので別途で説明します。&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスを宣言するようには「new」キーワードを使います。「new」キーワードに関しても様々お話が必要と思いますが、簡単に説明すると「new」でクラスを割り合うとクラスのコンストラクタが呼ばれ、初期を行います。&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;後、メンバー変数が割り合っててメモリに上がりますね。クラスサイズは変数のサイズの合計と同じです。割り合ってたクラスは関数を使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=207&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 595px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例は「example」の中の「main」関数から始まります。参考に「static」関数はクラスの割り当てる可否と関係しずに、「クラス名.関数名」で実行ができます。この話も上の「new」キーワードを説明する時に詳しく説明します。&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「main」関数から始まって「program」というクラスを「new」キーワードで宣言します。コンストラクタではメンバー変数の「a」にデータ「10」を入力して「multi」関数を呼び出します。後、「system.out.println」を利用して「a」の値を出力します。&lt;/p&gt;&lt;p&gt;結果は「100」という出力が出ますね。&lt;/p&gt;&lt;p&gt;上の例を見るとコンストラクタはクラス名と一致しますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=206&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 556px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージみたいにリターンタイプがないメソッド、すなわち、コンストラクタがクラス名と間違い場合にエラーマークが表示されます。&lt;/p&gt;&lt;p&gt;この部分の関しては「java」だけではなく、「c言語」以降のプログラム言語は同じではないかと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスの内部関数を使う方法とメンバー変数に関してはアクセス修飾子と「new」の概念の説明が必要なので、その時に含めて説明します。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/50.html</guid><pubDate>Fri, 17 Jan 2020 07:37:45 +0900</pubDate></item><item><title>[Java] 関数 (メソッド、Function)</title><link>https://www.nowonbun.com/49.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから「oop(object-oriented programming:オブジェクト指向プログラミング)」の核心だと考えられるクラス(class)に関して勉強します。&lt;/p&gt;&lt;p&gt;クラスは「java」プログラムの中でメモリの構成単位でプログラムを動けるオブジェクトだと考えられます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データタイプ単位では「int」や「float」などがありますが、オブジェクトとして変数を集まってプロシージャを作成し、実行する単位がクラス(class)だと思います。&lt;/p&gt;&lt;p&gt;すなわち、メソッドだけや変数だけではプログラムを作成ができないし、実行することができません。最小単位でクラス(class)が存在しなければならないと意味です。&lt;/p&gt;&lt;p&gt;私が今まで特に説明してなかったんですが、「main」関数を呼ばれるように下記とおりに作成しました。&lt;/p&gt;&lt;p&gt;例みたいに実行するために「main」関数だけ必要だってもクラス(class)が囲まなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスの場合は下記の要素をもっています。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;クラス要素&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;コンストラクタ&lt;/td&gt;        &lt;td&gt;クラスの初期処理及び関連機能処理&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;メンバー変数&lt;/td&gt;        &lt;td&gt;フィールドという呼ばれるグローバル変数&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;関数&lt;/td&gt;        &lt;td&gt;メソッド&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;予想よりクラスが持っているメンバーはc#より多くないですね。&lt;/p&gt;&lt;p&gt;classは上の例みたいに構成されています。以前に変数と関数に関しては勉強したことがあるので、そんなに違和感がないと思いますが、コンストラクタは関数とは違いますね。&lt;/p&gt;&lt;p&gt;コンストラクタは関数と比べてリターンタイプがないです。なぜなら、クラスの生成する時に処理処理をここでするので、リターン値が必要ないからではないかと思いますね。&lt;/p&gt;&lt;p&gt;または関数はクラス名と同じ名で作成できません。ではコンストラクタは必ずクラス名とコンストラクタ名は一致しなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;メンバー変数はクラス中で使う変数らしく、変数ですね。&lt;/p&gt;&lt;p&gt;すべて前に「public」と言うアクセス修飾子があります。アクセス修飾子に関して様々の理解が必要なので別途で説明します。&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスを宣言するようには「new」キーワードを使います。「new」キーワードに関しても様々お話が必要と思いますが、簡単に説明すると「new」でクラスを割り合うとクラスのコンストラクタが呼ばれ、初期を行います。&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;後、メンバー変数が割り合っててメモリに上がりますね。クラスサイズは変数のサイズの合計と同じです。割り合ってたクラスは関数を使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=207&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 595px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例は「example」の中の「main」関数から始まります。参考に「static」関数はクラスの割り当てる可否と関係しずに、「クラス名.関数名」で実行ができます。この話も上の「new」キーワードを説明する時に詳しく説明します。&lt;/p&gt;&lt;p&gt;link - 作成中&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「main」関数から始まって「program」というクラスを「new」キーワードで宣言します。コンストラクタではメンバー変数の「a」にデータ「10」を入力して「multi」関数を呼び出します。後、「system.out.println」を利用して「a」の値を出力します。&lt;/p&gt;&lt;p&gt;結果は「100」という出力が出ますね。&lt;/p&gt;&lt;p&gt;上の例を見るとコンストラクタはクラス名と一致しますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=206&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 556px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージみたいにリターンタイプがないメソッド、すなわち、コンストラクタがクラス名と間違い場合にエラーマークが表示されます。&lt;/p&gt;&lt;p&gt;この部分の関しては「java」だけではなく、「c言語」以降のプログラム言語は同じではないかと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クラスの内部関数を使う方法とメンバー変数に関してはアクセス修飾子と「new」の概念の説明が必要なので、その時に含めて説明します。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/49.html</guid><pubDate>Fri, 17 Jan 2020 07:37:36 +0900</pubDate></item><item><title>[Java] 配列(Array)</title><link>https://www.nowonbun.com/48.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;配列は変数を一つのデータタイプで集まりの概念だと理解しやすいと思います。&lt;/p&gt;&lt;p&gt;資料構造的にお話すると「同じデータタイプのデータを連続的に格納するような資料構造的な変数」という正義していますね。例えば「int」タイプの変数が「100」個が必要な時、配列がなければ変数名を「100」を作成して宣言する方法があります。&lt;/p&gt;&lt;p&gt;では実際にそんなに作業すると作業が大変です。配列の場合はもっとしやすく、少ないコーディングステップで運用ができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;oopの本を見ると配列の正義で「メモリ構造上で配列の場合は連続的に割り当てるので、処理時間を改善することができます。」ということになりますが、最近はハードウェアのスペックの発達でパフォーマンス改善より可読性ため使うことが多いですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;配列は「new」キーワードで宣言します。「new」キーワードは配列宣言よりクラスの割り当てることの意味が強いので「class」のパートで詳しく勉強します。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=202&quot; data-filename=&quot;001.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「int」タイプの「ret」の変数に配列を「10」個を宣言しました。そして、配列でデータを入力して出力する例ですね。入力時には各配列の番号で一行目ずつにデータを入力しましたが、出力する時には「for」を利用してイタレーションパタンで出力しました。&lt;/p&gt;&lt;p&gt;link  - &lt;a href=&quot;https://www.nowonbun.com/46.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 6] 制御文 - ループ (for, while, do~while)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;配列は上の例みたいに普通は一次元的に配列を使いますが、二次元、多次元的な配列も存在しています。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=203&quot; data-filename=&quot;002.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば変数名「ret2」に「[10][10]」の二次元配列を宣言して「int」のデータが全て「100」個を入るような変数を宣言しました。&lt;/p&gt;&lt;p&gt;二次元配列から「10」個ずつ「10」個のデータがあることになるので、「10」掛け「10」になります。三次元で「[10][10][10]」は「10 x 10 x 10」で「1000」個になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例で「for」の中で「for」を使って「九九」乗算表を配列に入力して出力しましたね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると我々が配列を「2」を宣言してその以上のデータを入力するとどのようになるかな？&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=200&quot; data-filename=&quot;003.png&quot; style=&quot;width: 580px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「indexoutofboundsexception」、すなわちオーバーフローが発生します。&lt;/p&gt;&lt;p&gt;そうするといつも配列を使う時に固定な配列個数を決めて静的に使う方しかないかな？と言えば、動的に配列を宣言する方法もあります。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=201&quot; data-filename=&quot;004.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「ret」と言う動的な配列を宣言しました。確かに、先に配列個数を決めてないです。&lt;/p&gt;&lt;p&gt;そこで「add」関数を利用してデータを追加します。「size」関数を利用して配列の個数を取得して「get」の関数を利用してデータを出力しています。&lt;/p&gt;&lt;p&gt;確かに上の静的な配列より楽に見えますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ではここには「list」を動的な配列に紹介しますが、「list」と「map」型は簡単に動的な配列とは言えません。「list」と「map」は資料構造と関係があるので、勉強が少しすすめると詳しく勉強します。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/48.html</guid><pubDate>Fri, 17 Jan 2020 07:37:27 +0900</pubDate></item><item><title>[Java] 制御文 - ループ分岐 (break, continue)</title><link>https://www.nowonbun.com/47.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ループを使う時に特定な条件で繰り返し作業を止まりたい時があります。または、特定条件だけスキップした時があります。&lt;/p&gt;&lt;p&gt;例えば、「for」文で「1」から「10」まで繰り返しますが、偶数だけ「system.out.println」で値を出力したいの条件です。&lt;/p&gt;&lt;p&gt;ループの中で制御するループ制御です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;break文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 「break」文は用法が２つがありますが、一つは「switch~case」文で次の「case」に行けないようにする方法とループの中で繰り返すを止まる用法があります。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=198&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 571px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、「data」の変数に「1」の値を入力しました。「switch ~ case」には当然に「case」の「1」のところが実行します。では「2」まで実行されました。&lt;/p&gt;&lt;p&gt;理由は「case 1」のところで「break;」がないのでそのままで進んで「2」まで実行されました。「case 3」の場合は上の「break」文があるので、止まりました。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=197&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 420px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、「while」のループで条件は「true」に設定しました。条件が常に「true」なので無限ループになりますね。無限ループはループの条件で終わらないループの意味です。&lt;/p&gt;&lt;p&gt;では「while」の処理文書の中で「if」の制御を入れて「i」の値が「10」より大きい場合に「break」を実行しようの処理文章がありますね。&lt;/p&gt;&lt;p&gt;意味としては「i」が「10」以上になると「while」のループを「止まる」と意味になります。&lt;/p&gt;&lt;p&gt;結果は「0」から「10」の値が出力しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;continue文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 「continue」文は「break」文と英語意味では逆ですが、プログラム処理は逆ではなく似てます。「continue」の場合は「switch」文では使えなく、ループ文だけ使えます。&lt;/p&gt;&lt;p&gt;「continue」文はループ中で会わば「break」の場合はループが止まることだったんですが、「continue」の場合は次の条件式に移動する意味(?)です。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=199&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 429px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見れば、一応「break」文は「i」の値が「10」を超えると掛けます。下で「i % 2 == 1」の意味は「i」を「2」で割って残りが「1」の場合に「continue」してって意味ですね。&lt;/p&gt;&lt;p&gt;すなわち、奇数の場合に「system.out.println」で「i」の値が出力することを実行せず、次のループに移動する意味です。&lt;/p&gt;&lt;p&gt;結果は偶数になります。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/47.html</guid><pubDate>Fri, 17 Jan 2020 07:37:18 +0900</pubDate></item><item><title>[Java] 制御文 - ループ (for, while, do~while)</title><link>https://www.nowonbun.com/46.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、制御文の中で分岐文に関して勉強しました。実は一つのページでやろうと思いましたが、以外に量が多くて分岐、ループ、ループ分岐で分けました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/45.html&quot; target=&quot;_blank&quot;&gt; [java スタディ - 5] 制御文 - 分岐 (if, switch〜case)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは制御文の中でループに関して説明します。ループって言うのは作成した処理を繰り返して実行するという意味になります。&lt;/p&gt;&lt;p&gt;例えば、「int」型の変数に「1」を「100」回に加算したいといえば、ループの制御文を使うことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ループには3パタンがありまして、下記とおりに説明します。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;for文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- for文は初期値を終了条件まで「false」になるまで初期値を増加され、繰り返して文章を実行する制御文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=193&quot; data-filename=&quot;001.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;初期値には「i=0」、条件式「i&amp;lt;10」、増加値「i++」がなっています。つまり、「i」の変数には初期値で「0」を入力します。条件式で「i&amp;lt;10」なので初めは「true」になります。&lt;/p&gt;&lt;p&gt;条件式で「true」になると「system.out.println(i)」を実行します。結果はコンソールで「i」の値、つまり「0」を出力しますね。&lt;/p&gt;&lt;p&gt;文書が終わると「i」の値を「1」を増加します。「0」から「1」になります。また条件式を見れば「i」の値は「10」より小さいので「true」になります。&lt;/p&gt;&lt;p&gt;「true」なので「system.out.println(i)」が実行します。その続き、「i」が「10」になるまで繰り返しますね。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;while文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- while文は条件式が「true」の場合に実行する、ループ制御文です。&lt;/p&gt;&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以前、制御文の中で分岐文に関して勉強しました。実は一つのページでやろうと思いましたが、以外に量が多くて分岐、ループ、ループ分岐で分けました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/45.html&quot; target=&quot;_blank&quot;&gt; [java スタディ - 5] 制御文 - 分岐 (if, switch〜case)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このページでは制御文の中でループに関して説明します。ループって言うのは作成した処理を繰り返して実行するという意味になります。&lt;/p&gt;&lt;p&gt;例えば、「int」型の変数に「1」を「100」回に加算したいといえば、ループの制御文を使うことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ループには3パタンがありまして、下記とおりに説明します。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;for文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- for文は初期値を終了条件まで「false」になるまで初期値を増加され、繰り返して文章を実行する制御文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=193&quot; data-filename=&quot;001.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;初期値には「i=0」、条件式「i&amp;lt;10」、増加値「i++」がなっています。つまり、「i」の変数には初期値で「0」を入力します。条件式で「i&amp;lt;10」なので初めは「true」になります。&lt;/p&gt;&lt;p&gt;条件式で「true」になると「system.out.println(i)」を実行します。結果はコンソールで「i」の値、つまり「0」を出力しますね。&lt;/p&gt;&lt;p&gt;文書が終わると「i」の値を「1」を増加します。「0」から「1」になります。また条件式を見れば「i」の値は「10」より小さいので「true」になります。&lt;/p&gt;&lt;p&gt;「true」なので「system.out.println(i)」が実行します。その続き、「i」が「10」になるまで繰り返しますね。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;while文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- while文は条件式が「true」の場合に実行する、ループ制御文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=195&quot; data-filename=&quot;002.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;簡単に説明すると「for」のループ制御文から「初期式」と「増加値」がない制御だと思えば理解しやすいです。&lt;/p&gt;&lt;p&gt;注意のことは「初期値」と「増加値」がないので、無限ループになる可能性があります。&lt;/p&gt;&lt;p&gt;上の例は「while」の前に「i」の変数に「1000」を設定します。「while」の条件式は「0」より大きいかをチェックすることなので、結果は「true」になって「while」の文章が実行します。&lt;/p&gt;&lt;p&gt;「while」の文章の中は「i」のデータを「10」で割ります。もしこの構文がなければ、無限ループになります。&lt;/p&gt;&lt;p&gt;次は「system.out.println(i)」で「i」の値を出力することですね。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;do~while文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 「do~while」文は「while」文と似てますが、差異は「while」の場合は文章を実行する前に条件を見て実行しますが、「do~while」の場合は一応文章を実行して条件をチェックすることですね。&lt;/p&gt;&lt;p&gt;その意味は条件が初めから合わなくても一回は実行する意味です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=196&quot; data-filename=&quot;003.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の「while」と似ているな例を作りましたが、初めの「i」の値は「1000」で設定して「i/10」を実行する。後、「i」の値は「100」になり「system.out.println(i)」によってコンソールに出力します。&lt;/p&gt;&lt;p&gt;「while」の条件式によって「i&amp;gt;100」が成立することを確認し、繰り返して実行されます。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;for 文 (foreach用法)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 上でforに関して説明しましたが、forは「初期値」、「条件式」、「増加値」が必要なループ式です。&lt;/p&gt;&lt;p&gt;でもarrayやlistの場合は上の「初期値」、「条件式」、「増加値」を省略して使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=194&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 435px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「int」型の配列を「10」個を宣言してそのデータに「10」単位で「10」から「100」までデータを入力しました。その後、「for」文を利用して配列の「0」から「9」までのデータを順番とおりに出力する例です。&lt;/p&gt;&lt;p&gt;後、配列とリストパートでよく使うiterationパタンのループ制御です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=195&quot; data-filename=&quot;002.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単に説明すると「for」のループ制御文から「初期式」と「増加値」がない制御だと思えば理解しやすいです。&lt;/p&gt;&lt;p&gt;注意のことは「初期値」と「増加値」がないので、無限ループになる可能性があります。&lt;/p&gt;&lt;p&gt;上の例は「while」の前に「i」の変数に「1000」を設定します。「while」の条件式は「0」より大きいかをチェックすることなので、結果は「true」になって「while」の文章が実行します。&lt;/p&gt;&lt;p&gt;「while」の文章の中は「i」のデータを「10」で割ります。もしこの構文がなければ、無限ループになります。&lt;/p&gt;&lt;p&gt;次は「system.out.println(i)」で「i」の値を出力することですね。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;do~while文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 「do~while」文は「while」文と似てますが、差異は「while」の場合は文章を実行する前に条件を見て実行しますが、「do~while」の場合は一応文章を実行して条件をチェックすることですね。&lt;/p&gt;&lt;p&gt;その意味は条件が初めから合わなくても一回は実行する意味です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=196&quot; data-filename=&quot;003.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の「while」と似ているな例を作りましたが、初めの「i」の値は「1000」で設定して「i/10」を実行する。後、「i」の値は「100」になり「system.out.println(i)」によってコンソールに出力します。&lt;/p&gt;&lt;p&gt;「while」の条件式によって「i&amp;gt;100」が成立することを確認し、繰り返して実行されます。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;for 文 (foreach用法)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- 上でforに関して説明しましたが、forは「初期値」、「条件式」、「増加値」が必要なループ式です。&lt;/p&gt;&lt;p&gt;でもarrayやlistの場合は上の「初期値」、「条件式」、「増加値」を省略して使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=194&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 435px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「int」型の配列を「10」個を宣言してそのデータに「10」単位で「10」から「100」までデータを入力しました。その後、「for」文を利用して配列の「0」から「9」までのデータを順番とおりに出力する例です。&lt;/p&gt;&lt;p&gt;後、配列とリストパートでよく使うiterationパタンのループ制御です。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/46.html</guid><pubDate>Fri, 17 Jan 2020 07:37:07 +0900</pubDate></item><item><title>[Java] 制御文 - 分岐 (if, switch〜case)</title><link>https://www.nowonbun.com/45.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;制御文とはプログラムの処理順番を制御するか繰り返して処理する文法と言います。単純に制御文はこれだって言うのは難しいですね。&lt;/p&gt;&lt;p&gt;基本的にプログラムは人間と同じく上から下向き、左から右向きに読み込んで処理します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それなら単純に演算子だけ使って「int」型のデータを１から１００まで加算すると思えば、１から１００まで「+」記号で加算して解決します。(アルゴリズム的には考えなく、単純に考えて)&lt;/p&gt;&lt;p&gt;これをプログラム的に表現すると下記通りになりますね。&lt;/p&gt;&lt;p&gt;単純な数計算がこの頃ならもっと複雑な計算がどんなふうになるか恐ろしいですね。その時に使う文法が制御です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;制御文法はjavaだけではなく、c言語、c++、c#などもすべて同じ文法で動きます。&lt;/p&gt;&lt;p&gt;リンク - &lt;a href=&quot;https://www.nowonbun.com/10.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 9] 制御文 - 分岐 (if, switch〜case, goto)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;リンク - &lt;a href=&quot;https://www.nowonbun.com/11.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 10] 制御文 - ループ(for, while, do〜while, foreach)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;リンク - &lt;a href=&quot;https://www.nowonbun.com/12.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 11] 制御文 - ループ分岐(break, continue)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここでは制御文の中で分岐文に関して説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;if ~ else if ~ else 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- if ~ else if ~ else文は条件の値によって(「true」、「false」)処理する制御文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=191&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=190&quot; data-filename=&quot;001.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;初めの例はif条件で「check」の値が「true」なので、「number 1 true」がコンソールに出力しました。&lt;/p&gt;&lt;p&gt;２つ目の例はif条件で「check」の値が「false」なので、else式に入って「number 2 false」をコンソールに出力しました。&lt;/p&gt;&lt;p&gt;３つ目の例はif条件でcheck2の値は「3」ですが「check2 == 1」を計算すれば「false」の結果がでます。&lt;/p&gt;&lt;p&gt;なので、次の条件に行きます。次の条件は「check2 == 3」は「true」ですから、コンソールに「number3 true 2」がコンソールに出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;switch ~ case 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;- switch ~ case文は数式によってデータが一致するとこを処理する多重選択文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=189&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=192&quot; data-filename=&quot;002.png&quot; style=&quot;width: 587px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の条件式を見ると「switch」の条件は「4」のデータが設定されています。そして条件の値と「case」の値が一致する条件の文章式を実行されます。&lt;/p&gt;&lt;p&gt;もし、一致するデータがなければ、「default」のデータが実行されます。&lt;/p&gt;&lt;p&gt;例では、「check」のデータが「4」なので「case 4」の文章式が実行され、結果は「number 4」に出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで、javaの分岐に関して説明しました。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/45.html</guid><pubDate>Fri, 17 Jan 2020 07:36:56 +0900</pubDate></item><item><title>[Java] 演算子</title><link>https://www.nowonbun.com/44.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;演算子とはそのとおり計算する記号と意味です。普通で数学で使う演算子と同じく、プログラム上でも同じ意味で使っています。&lt;/p&gt;&lt;p&gt;基本的に算数の加算「+」、減算「-」、掛け算「*」、割り算「/」があり、余り「%」、比較記号「&amp;lt;」,「&amp;gt;」、論理演算子「%%」、「||」、イコール「==」があります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;演算子&lt;/th&gt;        &lt;th&gt;使用方法&lt;/th&gt;		&lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td colspan=&quot;3&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;算術演算子&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;++&lt;/td&gt;		&lt;td&gt;++a, a++&lt;/td&gt;		&lt;td&gt;値を一つ加算します(前置演算子、後置演算子)&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;--&lt;/td&gt;		&lt;td&gt;--a, a--&lt;/td&gt;		&lt;td&gt;値を一つ減算します(前置演算子、後置演算子)&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;+&lt;/td&gt;		&lt;td&gt;a + b&lt;/td&gt;		&lt;td&gt;加算&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;-&lt;/td&gt;		&lt;td&gt;a - b&lt;/td&gt;		&lt;td&gt;減算&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;*&lt;/td&gt;		&lt;td&gt;a * b&lt;/td&gt;		&lt;td&gt;掛け算&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;/&lt;/td&gt;		&lt;td&gt;a / b&lt;/td&gt;		&lt;td&gt;割り算&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;%&lt;/td&gt;		&lt;td&gt;a % b&lt;/td&gt;		&lt;td&gt;余り&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td colspan=&quot;3&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;関係演算子&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;&amp;gt;&lt;/td&gt;		&lt;td&gt;a &amp;gt; b&lt;/td&gt;		&lt;td&gt;「a」が「b」より大きいなら「true」を返還、小さいか同じなら「false」を返還&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;gt;=&lt;/td&gt;		&lt;td&gt;a &amp;gt;= b&lt;/td&gt;		&lt;td&gt;「a」が「b」より大きいか同じなら「true」を返還、小さいなら「false」を返還&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;lt;&lt;/td&gt;		&lt;td&gt;a &amp;lt; b&lt;/td&gt;		&lt;td&gt;「a」が「b」より小さいなら「true」を返還、大きいか同じなら「false」を返還&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;lt;=&lt;/td&gt;		&lt;td&gt;a &amp;lt;= b&lt;/td&gt;		&lt;td&gt;「a」が「b」より小さいか同じなら「true」を返還、大きいなら「false」を返還 &lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;==&lt;/td&gt;		&lt;td&gt;a == b&lt;/td&gt;		&lt;td&gt;「a」と「b」が同じなら「true」を返還、違うなら「false」を返還&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;!=&lt;/td&gt;		&lt;td&gt;a != b&lt;/td&gt;		&lt;td&gt;「a」と「b」が違いなら「true」を返還、同じなら「false」を返還&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td colspan=&quot;3&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;論理演算子&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;lt;&amp;lt;&lt;/td&gt;		&lt;td&gt;a &amp;lt;&amp;lt; b&lt;/td&gt;		&lt;td&gt;整数「a」の２進数値を左側に「b」ほど移動させ、余りは「0」にする。&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;gt;&amp;gt;&lt;/td&gt;		&lt;td&gt;a &amp;gt;&amp;gt; b&lt;/td&gt;		&lt;td&gt;整数「a」の２進数値を右側に「b」ほど移動させ、余りは正数は「0」、負数は「1」にする。&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;amp;&lt;/td&gt;		&lt;td&gt;a &amp;amp; b&lt;/td&gt;		&lt;td&gt;「a」と「b」の論理「and」計算 例) 4(0100) &amp;amp; 5(0101) = 4(0100)&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;|&lt;/td&gt;		&lt;td&gt;a | b&lt;/td&gt;		&lt;td&gt;「a」と「b」の論理「or」計算 例) 4(0100) | 5(0101) = 5(0101)&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;^&lt;/td&gt;		&lt;td&gt;a ^ b&lt;/td&gt;		&lt;td&gt;「a」と「b」の論理「xor」計算 例) 4(0100) ^ 5(0101) = 1(0001)&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td colspan=&quot;3&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;代入演算子&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;+=&lt;/td&gt;		&lt;td&gt;a += b&lt;/td&gt;		&lt;td&gt;「a = a + b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;-=&lt;/td&gt;		&lt;td&gt;a -= b&lt;/td&gt;		&lt;td&gt;「a = a - b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;*=&lt;/td&gt;		&lt;td&gt;a *= b&lt;/td&gt;		&lt;td&gt;「a = a * b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;/=&lt;/td&gt;		&lt;td&gt;a /= b&lt;/td&gt;		&lt;td&gt;「a = a / b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;%=&lt;/td&gt;		&lt;td&gt;a %= b&lt;/td&gt;		&lt;td&gt;「a = a % b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;amp;=&lt;/td&gt;		&lt;td&gt;a &amp;amp;= b&lt;/td&gt;		&lt;td&gt;「a = a &amp;amp; b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;|=&lt;/td&gt;		&lt;td&gt;a |= b&lt;/td&gt;		&lt;td&gt;「a = a | b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;^= &lt;/td&gt;		&lt;td&gt;a ^= b&lt;/td&gt;		&lt;td&gt;「a = a ^ b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;lt;&amp;lt;=&lt;/td&gt;		&lt;td&gt;a &amp;lt;&amp;lt;= b&lt;/td&gt;		&lt;td&gt;「a = a &amp;lt;&amp;lt; b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;&amp;gt;&amp;gt;=&lt;/td&gt;		&lt;td&gt;a &amp;gt;&amp;gt;= b&lt;/td&gt;		&lt;td&gt;「a = a &amp;gt;&amp;gt; b」と同じ意味&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td colspan=&quot;3&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;三項演算子&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;		&lt;td&gt;?&lt;/td&gt;		&lt;td&gt;a = (b == c) ? d : e&lt;/td&gt;		&lt;td&gt;「b」と「c」が同じなら「a」変数に「d」値を代入、「b」と「c」が違いなら「e」値を代入&lt;/td&gt;	  &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=188&quot; data-filename=&quot;003.png&quot; style=&quot;width: 586px;&quot;&gt;&lt;/p&gt;&lt;p&gt;先に変数は「int」型の「ret」、「ret3」、「bool」型の「ret2」を生成しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;初めの数式は「ret」変数に「1 + 1」を入れました。結果は「2」になります。&lt;/p&gt;&lt;p&gt;２つ目、３つ目は増加、加減式ですね。２の値を増加すれば「3」になるし、加減すると「2」に戻ります。&lt;/p&gt;&lt;p&gt;４つ目、５つ目は「bool」の値を入れました。４つ目は「false」、５つ目は「true」の値が出ます。&lt;/p&gt;&lt;p&gt;ret3の変数に「3」の値を入れて値を引くして各の値が出力しました。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/44.html</guid><pubDate>Fri, 17 Jan 2020 07:36:46 +0900</pubDate></item><item><title>[Java] データタイプ</title><link>https://www.nowonbun.com/43.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の考えでプログラムでデータタイプは一番重要なものではないかと思います。&lt;/p&gt;&lt;p&gt;すべての変数にはこのデータタイプがあるし、変数でデータタイプを設定することでクラスのメモリサイズ、プログラムの性能と関係があることからです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;データタイプはjavaだって他のlanguageと比べて特別に差異があることではなく、c++とc#とほとンと似てることになります。&lt;/p&gt;&lt;p&gt;データタイプの種類は下記通りになります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;キーワード&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td colspan=&quot;2&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;文字形式データタイプ&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;char&lt;/td&gt;		&lt;td&gt;16ビットユニコードの文字(asciiコード参照)&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;string&lt;/td&gt;		&lt;td&gt;char形式になっている湯にコード文字列&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td colspan=&quot;2&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;bool形式(正、不)データタイプ&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;boolean&lt;/td&gt;		&lt;td&gt;正(true)、不(false)形式の論理データ&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td colspan=&quot;2&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;整数形式データタイプ&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;byte&lt;/td&gt;		&lt;td&gt;-128~127の範囲のデータ&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;short&lt;/td&gt;		&lt;td&gt;-32,768~32,767の範囲のデータ&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;int&lt;/td&gt;		&lt;td&gt;-2,147,483,648~2,147,483,647の範囲のデータ&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;long&lt;/td&gt;		&lt;td&gt;-9,233,372,036,854,755,808~9,223,372,036,854,755,807の範囲のデータ&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;        &lt;td colspan=&quot;2&quot; style=&quot;background-color:#c5fdfd;text-align:center&quot;&gt;実数形式データタイプ&lt;/td&gt;      &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;fload&lt;/td&gt;		&lt;td&gt;±1.5*10&lt;sup&gt;-45&lt;/sup&gt;~±3.4*10&lt;sup&gt;38&lt;/sup&gt;&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;double&lt;/td&gt;		&lt;td&gt;±5.0*10&lt;sup&gt;-324&lt;sup&gt;~±1.7*10&lt;sup&gt;308&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/td&gt;	  &lt;/tr&gt;	  &lt;tr&gt;	    &lt;td&gt;decimal&lt;/td&gt;		&lt;td&gt;±1.0*10&lt;sup&gt;-28&lt;/sup&gt;±7.9*10.28&lt;sup&gt;28&lt;/sup&gt;&lt;/td&gt;	  &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;上の表を見ると様々なデータタイプがありますが、実施にはすべてのデータタイプを使わないですね。得によく使いデータタイプなら「string」、「int」、「double」、「decimal」のことです。&lt;/p&gt;&lt;p&gt;参考に「double」と「decimal」の場合は実数系のデータタイプなので、簡単な「1+1」ほどの計算式でこの変数を使うと逆に無用なデータサイズになるので、プログラム性能が遅くなる原因になります。&lt;/p&gt;&lt;p&gt;でも、データの大きさを考えずに範囲以上のデータを使うと「overflow」のエラーが発生するので注意しなければならないです。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=186&quot; data-filename=&quot;001.png&quot; style=&quot;width: 587px;&quot;&gt;&lt;/p&gt;&lt;p&gt;データタイプを使う形式は変数の前で作成します。&lt;/p&gt;&lt;p&gt;上の例は「int」、「float」、「string」を使ったですね。&lt;/p&gt;&lt;p&gt;プログラムで数字で使用するデータは基本的に整数タイプ(int)で使います。でも、小数点の以下のデータを表現する実数の場合は「int」型で入力できないので、[float]や「double」を使います。&lt;/p&gt;&lt;p&gt;でもプログラム上で数字を書くとそれが整数か実数か知らないので「float」の場合は数字の後ろで「f」を「double」の場合は「d」を付けます。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;./getattachfile.ajax?idx=187&quot; data-filename=&quot;002.png&quot; style=&quot;width: 587px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ればエラーが発生しますね。&lt;/p&gt;&lt;p&gt;なぜなら、「ret」の場合は「int」型なのに文字を入れようとするからエラーが発生するし、ret3の場合はデータタイプを宣言しなかったですね。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/43.html</guid><pubDate>Fri, 17 Jan 2020 07:36:36 +0900</pubDate></item><item><title>[Java] 変数と定数</title><link>https://www.nowonbun.com/42.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;変数と定数に関してはすべてのlanguageと差異が多くないです。それでjavaだって別に他のlanguageと違うことではありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムは小さい単位でみれば一つの計算機と同じです。単純に値を加算するし、減算、乗算、除算の計算式ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それでプログラムで計算する時には数学の方程式だとおもったらよいです。例えば、x+y=zの式があり、ユーザからxの値は1yの値は2で入力されたら結果はzは3になりますという計算式ですね。&lt;/p&gt;&lt;p&gt;ここで我々が考えられることなら「+」、「=」は演算子で、「x」、「y」、「z」は変数になります。それを変数の値をメモリに格納して計算することです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=182&quot; data-filename=&quot;001.png&quot; style=&quot;width: 444px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例はeclipseでjavaプログラムを初めに生成する時の構造になります。基本的にpublic static void mainをクラスの中で探して実行することになります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「int z = x + y」があります。基本的に数学では「x + y = z」の形式ですがプログラムはイコールが前にあります。&lt;/p&gt;&lt;p&gt;その文法で計算すると「z」の値は「x」の「1」と「y」の「2」が加算して「3」になります。&lt;/p&gt;&lt;p&gt;結果は出力関数の「system.out.println」を利用して出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;定数に関して説明します。&lt;/p&gt;&lt;p&gt;プログラム上の形は差異がたくさんあることではなく、ただデータを変更できるかできないかの差だけです。定数の場合は変数宣言したところの前にfinalのキーワードを入れて後から変更ができないようにすることです。&lt;/p&gt;&lt;p&gt;この定数のデータは実務でマスターデータとして変更ないデータで職別データのため、またクラスの概念だと割り当てを固定にすることになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=185&quot; data-filename=&quot;002.png&quot; style=&quot;width: 626px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例で私が「f」の定数を宣言して「x + y + z」の値をまた入れようとしましたが、eclipse側でソースレベルでエラーが発生しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この変数と定数はプログラムを作成する時、すごくよく使う概念です。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/42.html</guid><pubDate>Fri, 17 Jan 2020 07:36:27 +0900</pubDate></item><item><title>[Java] Javaとは？、Javaインストール、Eclipseインストール</title><link>https://www.nowonbun.com/41.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日まで「c#」について勉強しましたが、今日から「java」についても勉強しようかと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「c#」と「java」の場合は互いに似ている言語だし、文法も似ているので、事前に一緒に「c#」を勉強した方は「java」も簡単に習得できる言語ではないかと思いになります。&lt;/p&gt;&lt;p&gt;とりあえず、「java」について調べてみます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;javaについて&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「java」は1991年代にジェームズ・ゴスリンとその人のチームによって開発されて1995年に発表しました。初めは家電製品等のため開発されましたが、現在はウェブアプリケーションで一番人気があるプログラム言語になりました。&lt;/p&gt;&lt;p&gt;現在、「java」はサン・マイクロシステムズによって無料で提供しているし、「java」のバージョンは12.0まで発表しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「java」の場合は「c#」を比べて値段が安いですが、安いって言うのは「c#」がお金がかかることではなく、javaの環境を作るように立ち上がるシステムが無料オープンソースが多いですね。&lt;/p&gt;&lt;p&gt;例えば、サーバの場合はcentosがあるしideツールでも「eclipse」、「netbeans」があるます。そしてウェブサーバ、アプリサーバの「apache」、「tomcat」、「glassfish」、「jboss」がすべて無料なので、システムを立ち上げる時、比較的に安く構築ができますね。&lt;/p&gt;&lt;p&gt;そうすろとこれからjavaを開発するようにjavaのインストールとeclipseをインストールします。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最近のwindows環境だと基本的にjavaがインストールされていますが、最新バージョンをダウンロードします。&lt;/p&gt;&lt;p&gt;(参考：javaのバージョンはoracleバージョンとopenjavaバージョンがありますが、oracleの場合は最近著作権の問題で一応無料ですが、念のためopenjavaでインストールします。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;javaインストール&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;リンク - &lt;a href=&quot;https://jdk.java.net/12/&quot;&gt;https://jdk.java.net/12/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=172&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のリンクを接続してopenjdk12をダウンロードします。ホームページ見るともう32ビットとプログラムを存在もしないですね。32ビットを利用したいなら、仕方がなくてoracle jskを使うしかないですね。&lt;/p&gt;&lt;p&gt;ダウンロードが完了すれば適当なところで圧縮を解凍します。私の場合はd:\javaに解凍しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaをインストールしましたら、これからはpathを設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=164&quot; data-filename=&quot;002.png&quot; style=&quot;width: 332px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=163&quot; data-filename=&quot;003.png&quot; style=&quot;width: 232px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=167&quot; data-filename=&quot;004.png&quot; style=&quot;width: 479px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてシステム環境設定の「java_home」をd:\javaに設定します。もし、java_homeの変数がなければ生成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=170&quot; data-filename=&quot;005.png&quot; style=&quot;width: 663px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=177&quot; data-filename=&quot;006.png&quot; style=&quot;width: 625px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これから「windowキー」 +「r」を打ってcmdのウィンドウを開きます。そしてコマンドで「java -version」を打ってバージョンが表示されるとjavaが正しくインストールされたかを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=165&quot; data-filename=&quot;008.png&quot; style=&quot;width: 634px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;eclipseインストール&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;これからjavaの開発ツール(ied)のeclipseをインストールします。実は開発ツールはeclipseではなく色々がありますね。でも私の場合はeclipseしか使えないし、他のツール、例えばnetbeansはすごく不便でした。多分、私の使い方を知らないからそうだと思いましたが、自分の個人的な感情はeclipseが一番いいではないかと思います。&lt;/p&gt;&lt;p&gt;リンク - &lt;a href=&quot;https://www.eclipse.org/downloads/packages/&quot; target=&quot;_blank&quot;&gt;https://www.eclipse.org/downloads/packages/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実はグーグルでただ検索してダウンロードしても構いないですが、ただstandardバージョンを使うと後でウェブサービスを開発する時に一々パッケージをインストールしなければならないので、すごく面倒になります。なので、基本的なパッケージがインストールされているenterprise versionをインストールする方が楽ですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=174&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=178&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ダウンロードが終われば、適当なところで圧縮を解凍します。私の場合はd:\eclipseに圧縮を解凍しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてeclipseを実行すればソースを格納するディレクトリを選択するポップアップでます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=166&quot; data-filename=&quot;011.png&quot; style=&quot;width: 615px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これも適当なところで指定するとよいです。私の場合はd:\workspaceに作成しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;すべてのインストールは完了しました。これからプロジェクトを生成してhello worldを出力します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=173&quot; data-filename=&quot;012.png&quot; style=&quot;width: 635px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=171&quot; data-filename=&quot;013.png&quot; style=&quot;width: 736px;&quot;&gt;&lt;/p&gt;&lt;p&gt;プロジェクトを生成しました。その後でクラスの中でmain関数を生成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=179&quot; data-filename=&quot;014.png&quot; style=&quot;width: 723px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=175&quot; data-filename=&quot;015.png&quot; style=&quot;width: 528px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ソースを作成しましたら、デバックをします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=168&quot; data-filename=&quot;016.png&quot; style=&quot;width: 453px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=176&quot; data-filename=&quot;017.png&quot; style=&quot;width: 844px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=169&quot; data-filename=&quot;018.png&quot; style=&quot;width: 569px;&quot;&gt;&lt;/p&gt;&lt;p&gt;hello worldの結果がでました。&lt;/p&gt;</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/41.html</guid><pubDate>Fri, 17 Jan 2020 07:36:17 +0900</pubDate></item><item><title>[C#] Thread(スレッド)</title><link>https://www.nowonbun.com/40.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は「thread」(スレッド)に関して勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;thread(スレッド)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;プログラムを扱ってある方なら、特にアプリの関して開発したことがある方ならスレッドについて一回以上に聞いたことがあると思います。&lt;/p&gt;&lt;p&gt;スレッドを定義するとプログラムを実行する最小の単位として一つのプロセス(プログラム)の中で一つ以上のスレッドを動かすことができまして並列処理をするように作成する要素だと思います。&lt;/p&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ko-kr/library/system.threading.thread(v=vs.110).aspx &quot; target=&quot;_blank&quot;&gt;thread(スレッド)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;説明が難しいですが、例を通って続きます。&lt;/p&gt;&lt;p&gt;上の例を見ると我々は「threadex(“test1”)」、「threadex(“test2”)」、「threadex(“test3”)」の順に実行することはよく知っています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=161&quot; data-filename=&quot;001.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも、プログラムを作成する時にパフォーマンスとためにあるいは他の理由のために、上のメソッドを同時に実行する時があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=159&quot; data-filename=&quot;002.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のソースを参照して結果を見ると「threadex(“test1”)」、「threadex(“test2”)」、「threadex(“test3”)」を順で呼び出しましたが、処理は順番通りではなく、同時に処理にするみたいにみえること、すなわち、並列に処理することで見えます。&lt;/p&gt;&lt;p&gt;スレッドを呼ばれた後に「startwatchthread」を関数を呼ばれる部分があります。スレッド処理の中では「program」のコンストラクタも一つのスレッドになるため、「threadex(“test1”)」、「threadex(“test2”)」、「threadex(“test3”)」をスレッド並列処理をすると各関数が終わる前に「program」のコンストラクタが終わってしまう現象になるはずです。&lt;/p&gt;&lt;p&gt;そのため、「startwatchthread」の関数は各スレッドが終わる時まで待つ処理、すなわち、メインスレッドがサブスレッドを待つ処理、改めていうと同期化処理を実装しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからスレッドを使うことでプログラムのパフォーマンスがどのくらいに改善することができるかを確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=158&quot; data-filename=&quot;003.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のソースを見るとスレッドを使わない処理時間(始めの例)とスレッドを使った処理時間(二つ目の例)を比較してみると約3倍に早くなることの結果が出ます。&lt;/p&gt;&lt;p&gt;スレッドを使うと必ずパフォーマンス改善になって処理速度がアップすることではないけれども、上の例はioみたいに処理パフォーマンスと関係がある要素は明確に処理時間の差が見えます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみるとスレッドを使うことがそんなに難しくなさそうだし、簡単に使えそうですね。でも実際プロジェクトする時にスレッドを簡単につかえられないし、みんなスレッドはプログラム処理の中で一番に難しいんだと言う方がいますが、その理由は同期化のせいです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;lock&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;上の例をみるとメンバ変数に「count」を割り当て「threadex」のメソッドの中で「i」の値を増加しています。それで、我々が予想するデータ値は(0 ~ 99までの合計) * 3倍になりますね。(1 ~ 100まで合計は5050(101*50) – 100 = 4950で3倍は14850)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=162&quot; data-filename=&quot;004.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも実際の結果を見ると値が「14850」ではないですね。もっと大変なことは実行するたびに値が一定値ではなく値が変わります。理由としては3つのスレッドが並列で流れているせいに発生することです。すなわち、「count」から取得値、または格納する時に3つスレッド達がお互いに影響されるためです。&lt;/p&gt;&lt;p&gt;改めていうと、「thradex(“test1”)」のスレッドが実行する時に「count」を取得して「temp」に格納して再格納する前に「thradex(“test2”)」で取得、「thradex(“test1”)」で「count」にデータを１を増加して格納しますが、「thradex(“test2”)」で「count = 0」から「1」を増加したデータを上書きしたせいです。そのために、3つのスレッドに「count」値にデータを増加したいと思うと値同期化が必要です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのために、3つのスレッドに「count」値にデータを増加したいと思うと値同期化が必要です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=160&quot; data-filename=&quot;005.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「lock」のキーワードはオブジェクトタイプの対して(int、charタイプはlockを設定できない)「lock」が解けるまで待機するキーワードですが上の例とおりに「lock」を掛けると三つのスレッドで流れてもロックのことで順番通りに処理するので結果が「14850」になる形になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;スレッド処理の中で「lock」まで勉強して同期化する方法まで勉強しましたが、スレッドが難しいというのはデッドロックのためです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;deadlock&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;デッドロックは二つ以上の処理フローがお互いに終わることを待ち状況になることをデッドロックといいます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=157&quot; data-filename=&quot;006.png&quot; style=&quot;width: 677px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみるとわざわざにデッドロックを掛けるように実装したので上の通りに実装するかたはいないと思いますが、デッドロックを説明するためにデッドロックが発生するように実装しました。&lt;/p&gt;&lt;p&gt;「threadex」のメソッドをみると「threadlist」のロックの下に「this」ロックがあり、次の処理は「this」のロックの下に「threadlist」のロックがある状況に実装しました。&lt;/p&gt;&lt;p&gt;上のプログラムを実行するみるととデッドロックに落ちます(プログラムが動かない状況)。なぜなら「threadlist → this」のロックは「this」のロックが解けるまでに待つ、「this →　threadlist」のロックは「threadlist」のロックが解けるまでに待つ状況になるとお互いにロックが解除することを待っている状況になりまして、デッドロックになります。&lt;/p&gt;&lt;p&gt;それで、わざとデッドロックが発生するように実装する方はいないと思いますが、実装ミスかスレッド計算ミスでデッドロックを発生するケースが多いですね。&lt;/p&gt;&lt;p&gt;「デッドロックが発生する時に修正するといいじゃない」と簡単に思うことができますが、実際にデッドロックが発生するように実装すると一定的に発生することではなく、起きる時もあるし起きない時もあるし、ロックのブロックが大きくなればデッドロック発生部分を知らない時もあるし、流れは止まってないがリックが発生してサーバが落ちるケースもあるので、原因不明になって直すことが簡単にできない可能性があります。(サーバ落ちる問題なら、全ソースをレビューするときもあります。）&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/40.html</guid><pubDate>Fri, 17 Jan 2020 07:35:16 +0900</pubDate></item><item><title>[C#] 「IDisposable」と「using」</title><link>https://www.nowonbun.com/39.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿までfileシステムについて勉強しました。少し勉強順番が悪くなりましたが、今日は「c#」の文法の「using」と「idisposable」のインターフェースについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;idisposable&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「idisposable」のインターフェースは「dispose」のメソッドを抽象してコネクションと関係あるクラスに継承して「ｄｉｓｐｏｓｅ」（解除）メソッドを実装させるようことです。すなわち、filestreamと通信、データベース連携等のクラスレベルでリソースを解除するためにdisposeメソッドを実装することです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.idisposable(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;idisposable インターフェイス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=154&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 800px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=156&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例は「dispose」メソッドでリソースを解除しなく、他のストリームで同じリソースのコネクションを取得するようにしてエラーを発生することを実装したことです。&lt;/p&gt;&lt;p&gt;すなわち、データを作成するリソースのコネクションを取得してリソースを解除しない状況で読み込むためにコネクションを取得するように実装したのでエラーが発生したことです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=155&quot; data-filename=&quot;003.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;リソースを取得~解除の規則はc#だけではなく全てのプログラム言語にも同じ規則です。それでリソースを取得する時には必ず解除しますという構造をちゃんと認識するべきです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで勉強したとおりに簡単なプログラムな作成する時にはリソース取得、解除がそんなに難しくないです。しかし大きいプログラムからはリソース返却するロジックはそんなに簡単ではありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;using&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「using」はソースの一番上端で「namespace」を宣言する時に使うキーワードです。でも、「.netframewor3.5」から「idisposable」インターフェースを継承しているクラスに囲まれていれば処理が終わる時期に「dispose」メソッドを呼び出す機能もあります。&lt;/p&gt;&lt;p&gt;上のコンストラクタをみると最後にtextwriterタイプのオブジェクトは「dispose」のメソッドを呼び出して解除しましたが、中のfilestream、bufferedstreamのストリームは解除することが大変になっています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=153&quot; data-filename=&quot;004.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今まで「idisposable」と「using」の関係について勉強しました。「using」と「idisposable」はjavaの「try」と「iclosable」の関係と同じですね。&lt;/p&gt;&lt;p&gt;「using」〜「idisposable」はプログラムの性能とは関係ないですが、リソース管理をしやすく処理して生産性を上がられるキーワードだと思うのでちゃんと勉強したほうがプログラムを開発する時に良いと思います。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/39.html</guid><pubDate>Fri, 17 Jan 2020 07:35:05 +0900</pubDate></item><item><title>[C#] ファイルシステム(File System) - FileStream、 Encoding、 Serializable</title><link>https://www.nowonbun.com/38.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿でファイルとディレクトリを扱う方法について勉強しました。今日はファイルを作成する方法について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;パソコンの中でファイルの種類は様々なことがあります。その中でドキュメントタイプだけで考えてもエクセル、ワード、テキスト、csv等の様々な種類があります。&lt;/p&gt;&lt;p&gt;でもドキュメントタイプか、イメージ、様々なデータでもファイルは基本的にバイナリデータでされています。バイナリデータということをプログラム的に考えると「byte」タイプにされていることの意味です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;filestream&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;c#にはその「byte」型にされているファイルを書き込むあるいは読み込むクラスがあり、それをc#では「filestream」というクラスがバイナリを扱うことです。そうすると「filestream」についてmsdnから調べ、使用方法について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.io.filestream(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;filestream クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=152&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;filestreamはmsdnをみると「ファイルについてストリーム(stream)を提供します」ということで書いています。&lt;/p&gt;&lt;p&gt;そうすると、streamについて知らないので、まずfilestreamを勉強する前にstreamについて勉強します。「stream」というのはファイルだけではなく通信と様々なデータを扱う時にstream(ストリーム)を使います。&lt;/p&gt;&lt;p&gt;我々がテキストを開いて文字を書いて格納するものまたは格納したファイルを開いて格納したデータを画面に確認するものだと思います。改めていうとデータを格納して格納したとおりに画面に見えることが当たり前だと思いますがパソコンの中では当たり前ではないですね。&lt;/p&gt;&lt;p&gt;テキストに「あいうえお」と書くとファイルが小さいからそのままで格納することができると思いますが、ファイルサイズが「100mb」「1gb」だとそのくらいの空間がハードディスクにない可能性もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=143&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして上の状況になるとデータを「20mb」「50mb」で分けてデータをハードディスクに格納します。でもユーザーが「file」を作成する時あるいは閲覧する時にファイルが分散されているものを探して合せることやファイルを作成する時にディスクをの空間を計算して分割するんだと思えばファイルシステムを実装することが結構難しくなると思われます。&lt;/p&gt;&lt;p&gt;それで「stream」では格納する時に一連のデータを受け取ってディスクの状況に合わせてファイルを作成することやファイルが分散されているものを一連のデータに組み合わせて返却するデータを返却するデータ構造パターンです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると「filestream」を利用して「byte」単位のデータをファイルに作成してみます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=149&quot; data-filename=&quot;003.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見るとbyte変数にasciiコードと合わせるデータを入れてファイルに出力しました。ただ、stringとint系を入れなくてbyte型に入れることにはパソコンはデータを文字ままで認識することではなく２陣データの形式で認識するので、byteタイプに変換する必要があります。byte形式の中でもunicode、shift-jis等があり、例はacsiiコードを利用してファイルを作成しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=145&quot; data-filename=&quot;004.gif&quot; style=&quot;width: 695px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうすればファイルを作成するたびにデータをbyte形式に変換しなければならないと思いますが、c#にはデータをbyte形式に変換するクラスを提供しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;encoding&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;encodingクラスはデータをbyte形式に変換するクラスです。そしてencodingクラスはバイナリコードのタイプのascii、ユニコード、shift-jisを選択して変換することもできます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.text.encoding(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;encoding クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=146&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=151&quot; data-filename=&quot;006.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると確かに「string」型のデータをユニコードのbyte形式に変換してファイルを作成しています。作成したファイルをメモ帳で開くと「string」式で格納したデータがメモ帳で表示されることを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;serializable(直列化)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今回はデータ単位の変換ではなく、クラス単位のデータを「byte」型に変換することです。「c#」はクラスを「byte」に変換するためには「serialize(直列化)」が必要です。&lt;/p&gt;&lt;p&gt;「c#」のdata形式は静的な構造体ではなくクラスタイプなのでデータの順番が無くポイント形式でされています。でも「file」のバイナリの構造に変換するには「stream」のデータ順番が必要だし構造的なデータ形式にされなければならないと思います。&lt;/p&gt;&lt;p&gt;そんなことでクラス形式のデータを「stream」式のデータ構造に変換することをserializable(直列化)だといいます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.serializableattribute(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;serializableattribute クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=150&quot; data-filename=&quot;007.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.runtime.serialization.formatters.binary.binaryformatter(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;binaryformatter クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=148&quot; data-filename=&quot;008.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;筆者は「serializable」と「binaryformatter」のことを紹介していますが、「c#」にはクラスを宣言することにクラスが「serializable」が可能かどうかを宣言して実際に「stream」のデータ構造に変換する時には「binaryformatter」のクラスを利用してクラスデータをstream形式に変換しています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=147&quot; data-filename=&quot;009.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみると「datanode」クラスを１０個割り当てリストに格納しています。そしてリスト自体を「binaryformatter」クラスを利用して「stream」形式に変換し、ファイルに出力する例になります。出力したファイルをメモ帳に開くと人間が認識できない形でデータが作成されたことを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=144&quot; data-filename=&quot;010.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今回は「serializable」して格納されたファイルを「binaryformatter」を利用して読み込んでクラスに割り当てしました。メモ帳には人間が認識できなかったデータでしだが、c#には「datanode 」クラスデータが１０個あるリストのデータで認識して読み込まれました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今までファイルを作成することや読み込む方法について勉強しました。プロジェクトでプログラムを作る時にファイルの関連モジュールはたくさんあると思われます。なのでファイルシステムは重要な部分だと思いますね。少なくても プログラムのlogを作成する部分でファイルの入出力(io)を使うと思います。そのことでプログラムを作成することではファイルの入出力は基本だと思うので、機能にとしてよく認知して勉強するほうが良いと思います。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/38.html</guid><pubDate>Fri, 17 Jan 2020 07:34:54 +0900</pubDate></item><item><title>[C#] ファイルシステム(File System) - FileInfo,DirectoryInfo</title><link>https://www.nowonbun.com/37.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日から「c#」の文法ではなく「c#.netframework」でよく使うクラス、システムについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;c#でプロジェクトを構築して実装する時によく使うクラスとネームスペースがあります。 それはファイルを扱うもののファイルシステム、通信する時に使うソケットシステム、データを構造的に構成するxmlシステム,jsonシステム等で「c#.netframework」から様々なモジュールシステムを提供しています。&lt;/p&gt;&lt;p&gt;その中で今日からはファイルを扱うクラスについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ファイルシステムは基本的にファイルとディレクトリを扱うクラ組です。体表的にファイルを扱うクラスは「fileinfo」とディレクトリを扱うクラスは「directoryinfo」があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;fileinfo&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;下記のアドレスリンクは「fileinfo」のクラスの説明です。接続して確認をしてください。&lt;/p&gt;&lt;br&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.io.fileinfo(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;fileinfo クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=141&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;fileinfoのクラスはファイルを扱うクラスです。ファイルのコピー、削除、移動、プロパティ情報を閲覧する場合に「fileinfo」クラスを利用して実装します。&lt;/p&gt;&lt;p&gt;上の例を見ると「test.txt」を読み込んで生成日付を出力しています。そしてファイルをコピーしてまた生成日付を取得して最終には削除する流れで実装されています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=139&quot; data-filename=&quot;002.png&quot; style=&quot;width: 739px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=137&quot; data-filename=&quot;003.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果を見ると「test2.txt」のファイルは生成してすぐ削除する流れなので、「work」のディレクトリの中には「test.txt」ファイルが見えないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;directoryinfo&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;下記のアドレスリンクは「directoryinfo」のクラスの説明です。接続して確認をしてください。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;msdnリンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.io.directoryinfo(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;directoryinfo クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=142&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;directoryinfoのクラスはディレクトリを扱うクラスです。ディレクトリのコピー、削除、移動、プロパティ情報を閲覧する場合に「directoryinfo」クラスを利用して実装されています。&lt;/p&gt;&lt;p&gt;上の例は「work」ディレクトリの生成日付を取得して出力していますね。後で「work」のディレクトリの中でファイルを取得して「fileinfo」のクラスに返却していますね。&lt;/p&gt;&lt;p&gt;そして下記ディレクトリの「create1」、「create2」を生成して「create2」のディレクトリは削除します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=138&quot; data-filename=&quot;006.png&quot; style=&quot;width: 739px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=140&quot; data-filename=&quot;007.png&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果としては「create2」ディレクトリを削除したので「create」ディレクトリだけあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回の投稿には「fileinfo」、「directoryinfo」を通ってファイルとディレクトリを扱う方法について勉強しました。その以外に「file」、「directory」クラスでもfileinfoとdiretoryinfoクラスみたいに実装が可能ですが、c#には「fileinfo」、「directoryinfo」を利用して実装するのをmsdnから推奨しているので「fileinfo」と「diretoryinfo」で実装することを確実に認知しておくほうが良いと思います。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/37.html</guid><pubDate>Fri, 17 Jan 2020 07:34:07 +0900</pubDate></item><item><title>[C#] MSDN(Microsoft Developer Network)</title><link>https://www.nowonbun.com/36.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで「c#」の基本的な文法については大体に勉強したと思います。これからは「c#.net framework」から提供する「class」について勉強するかと思いますが、実は「c#.net framework」から提供する「class」はすごく多いので全部できるか疑問がなりますね。（笑)&lt;/p&gt;&lt;p&gt;それで、「c#.net framework」のクラスについて勉強する前に「class」を使う方法について調べてみようかと思います。&lt;/p&gt;&lt;p&gt;「.net framework」には「class」を全て勉強しなくても、「class」の構成について説明しているマニュアルがあります。我々はそれを「msdn(microsoft developer network)」と言います。得にms関連プログラマ達にはプログラムバイブルとも呼ばれます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;msdn&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「.net frameworkのmsdn」のアドレスは下記とおりです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;リンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/&quot; target=&quot;_blank&quot;&gt;msdn&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;msdnに接続してみると様々なコンテンツがありますが、我々はプログラムの関連クラスドキュメントが必要なので「ドキュメント」項目に行きます。クラスの見る仕方を勉強するため、「string」クラスを例で「string」のドキュメントを参照してみましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;リンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.string(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;[msdn]string クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=132&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のアドレスで接続すると「string」のドキュメントに移動します。&lt;/p&gt;&lt;p&gt;「string」クラスのドキュメントを見ると「コンストラクタ」、「フィールド」、「メソッド」、「イベント」のことで区分して分けてなります。&lt;/p&gt;&lt;p&gt;※「string」は「イベント」がないので、実際に「msdn」のドキュメントを見ると「イベント」項目がありません。でもイベントがあるクラスを見ると「イベント」項目があるので参考してください。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ドキュメントを全般的に見ると我々が勉強したとおりにクラス基本構造で説明しています。すなわち、ユーザが「string」オブジェクトを使うようにアクセス修飾子が「public」段階のオブジェクトについて何のメソッドを使うとどの結果が出るかについて説明しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると、msdnを参照して「string」のクラスを使って見ましょう。&lt;/p&gt;&lt;p&gt;ドキュメントで「string」機能を見ると「tolower()」、「toupeer()」のメソッドがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=133&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のドキュメントを見ると「tolower()」は小文字に変換するメソッド、「toupper()」は大文字に変換するメソッドだと記述していますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=134&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;例を見ると「tolower()」と「toupper()」はドキュメント通りに結果を返却しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は「indexof()」、「lastindexof()」のメソッドについても勉強してみます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=136&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 753px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=135&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 753px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=131&quot; data-filename=&quot;007.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「indexof()」は「hello world」の文字列の前から最初に見つける「o」文字の位置を返却しますね。すなわち、「hello」の「o」文字の位置(4)を返却します。(インデックスは「0」から始まる)&lt;/p&gt;&lt;p&gt;「lastindexof」は後ろから最初に見つける「o」文字の位置を返却します。すなわち、「world」の「o」文字の位置(6)を返却します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで、「msdn」を通ってクラスのメソッドの使用方法について調べる方法を勉強しました。これから「file」扱う方法、「xml」、「stream」、「socket」等のプログラムを開発する時に基本的に使うクラスを勉強するつもりですね。&lt;/p&gt;&lt;p&gt;その時に「msdn」を利用して勉強するともっと理解しやすく、詳細的にクラス利用方法について勉強することができるじゃないかと思います。&lt;/p&gt;&lt;p&gt;そのため、「msdn」を使用方法についてしっかり知っていくとこれから勉強することが楽になると思います。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/36.html</guid><pubDate>Fri, 17 Jan 2020 07:34:00 +0900</pubDate></item><item><title>[C#] Attribute(アトリビュート)</title><link>https://www.nowonbun.com/35.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は(attribute)アトリビュートについて勉強します。c#のattribute(アトリビュート)はjavaのアノテーションと同じ意味のキーワードです。クラスあるいはメソッドを実装する場合に必要な情報と特性を定義することの意味です。&lt;/p&gt;&lt;p&gt;そうすればc#から基本的に提供するattribute(アトリビュート)とユーザーが作成して使う仕方について勉強してみましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;attribute(アトリビュート)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;attribute&lt;/th&gt;    &lt;th&gt;説明&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;    &lt;td&gt;clscompliant&lt;/td&gt;    &lt;td&gt;アセンブリのすべての型をclsに合わせて使用&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;obsolete&lt;/td&gt;    &lt;td&gt;使用しないと要素を表す。&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;conditional&lt;/td&gt;    &lt;td&gt;全処理機を識別子によって実行する可否を決定&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;dllimport&lt;/td&gt;    &lt;td&gt;非管理コードの形態で実行するメソッドを表す。&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;dispid&lt;/td&gt;    &lt;td&gt;comのdispatchのidを表す。&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;serializable&lt;/td&gt;    &lt;td&gt;クラスあるいは構造体がシリアルライズにするのを表す。&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;transaction&lt;/td&gt;    &lt;td&gt;トランザクションを無視になるか支援できるかを表す。&lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p&gt;筆者も上の表の中で「dllimport」、「serializable」、「transaction」を使ったことがありあます。「dllimport」の場合は「c」と「c++」あるいは「win　com+」のdllライブラリファイルをc#にインポートするようにするアトリビュートです。&lt;/p&gt;&lt;p&gt;上の例は「dllimport」のアトリビュートでcom+ dllライブラリを参照して使うものです。&lt;/p&gt;&lt;p&gt;「writeprivateprofilestring」と「getprivateprofilestring」の場合は「c++」、「mfc」で開発したことがある方ならしてると思いますが、「ini」環境ファイルを読み込むまたは書き込むような関数です。windowの中で組込のメソッドですね。「messagebox」の場合も旧windowのメッセージの組込のメソッドです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=128&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=129&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまで、c#から提供するアトリビュートを使う方法を勉強しました。&lt;/p&gt;&lt;p&gt;表としてはたくさんありますが、筆者も使ったことがないし、実際に「dllimport」以外のアトリビュートは使わないのでここまで勉強します。&lt;/p&gt;&lt;p&gt;これからはユーザーがアトリビュートを作成して使う方法を勉強します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=130&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;まず、アトリビュートを「attribute」クラスから継承して作成します。ここで「attributeusage」のアトリビュートで「attributeexam」のクラスはどのタイプのアトリビュートかを明示します。&lt;/p&gt;&lt;p&gt;「attributeexam」の形態はクラス型なので、メンバ変数、プロパティ、メソッド、イベント等を作成できますが、アトリビュートとして使うものは「コンストラクタ」と「プロパティ」なのでメソッド、イベントは作成しません。&lt;/p&gt;&lt;p&gt;その後で[program]クラスの「print」メソッド上に「attributeexam」のアトリビュートを宣言します。&lt;/p&gt;&lt;p&gt;アトリビュートは宣言だけでは何も意味がないので、ここからは「reflection」を通ってアトリビュートの値を取得します。そして、アトリビュートの値を出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで勉強したとおりにアトリビュートはクラスやオブジェクトの意味ではなくて、実装するところでメソッドの情報の正義と特性の正義することで意味があります。&lt;/p&gt;&lt;p&gt;後で、フレームワーク(orm,mvc等)を構築する時にこのアトリビュートは属性の正義、di依存性のためオブジェクトを明示すること等の役で使っています。&lt;/p&gt;&lt;p&gt;oopの高級文法を勉強するために、アトリビュートは大事なので流れはしっかり覚えていきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/35.html</guid><pubDate>Fri, 17 Jan 2020 07:33:50 +0900</pubDate></item><item><title>[C#] Reflection(リフレクション)</title><link>https://www.nowonbun.com/34.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は「reflection(リフレクション)」について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;reflection(リフレクション)の機能はc#だけにある機能ではなく、c言語の以降のプログラム言語なら全部支援している機能だと思います。&lt;/p&gt;&lt;p&gt;そのほど、プログラミングの中で重要な部分だし、動的なプログラムを実装するところになくてならない部分だと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;reflection(リフレクション)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今まで我々はクラスを割り当てるし、変数を宣言するし、メソッドを呼び出すことでプログラムを実装しました。reflectionはそのプログラムの流れを静的で実装する(ソースの中でメソッド名を呼び出す)ことではなく動的に実装する(ソースの中で呼び出すメソッドが決まってない)ための機能です。&lt;/p&gt;&lt;p&gt;すなわち、任意なクラスのメソッドを呼び出すためにはソースの中でメソッド名を実装して使うとおもいますが、reflectionの場合はそのメソッド名によってメソッドオブジェクトを取得してinvokeメソッド(実行)を通って実装することと思います。&lt;/p&gt;&lt;p&gt;上のソースを見ると普通のクラスを割り当ててメソッドを呼び出す方法です。でも次の例はreflectionを利用して静的に実装した部分を動的に実装することです。&lt;/p&gt;&lt;p&gt;上の例はメソッドをreflection（リフレクション)タイプで動的にメソッドを呼び出したソースです。ソースを見るとクラスは「activator.createinstance」のメソッドを通ってクラスをインスタンス化(割り当て)します。そしてインスタンス化されたオブジェクトから「getmethod」メソッドを通ってメソッドのオブジェクトを取得してinvoke(実行)することでリフレクションタイプを実装したものです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=125&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例だけみるとなぜreflectionタイプに実装するかを分かりません。&lt;/p&gt;&lt;p&gt;上の例を見ると「print1」、「print2」、「print3」、「print4」、「print5」を呼び出すメソッド「program.print」で呼び出すメソッドを決めることではなくて「program.print」メソッドを呼ばせる外部からメソッド種類を決める形になっています。 すなわち、プログラムのメソッドを呼び出す仕方で実装する時に決めることではなく、外部入力ことでメソッド処理を制御ができる意味になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=126&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうするとreflection(リフレクション)の種類について調べてみます。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;リフレクション関数&lt;/th&gt;    &lt;th&gt;説明&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;    &lt;td&gt;getconstructor(type[])&lt;/td&gt;    &lt;td&gt;コンストラクタを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getconstructors()&lt;/td&gt;    &lt;td&gt;すべてのコンストラクタを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getevent(string)&lt;/td&gt;    &lt;td&gt;イベントを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getevents()&lt;/td&gt;    &lt;td&gt;すべてのイベントを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getcustomattributes(boolean)&lt;/td&gt;    &lt;td&gt;アトリビュートを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getcustomattributes(type, boolean)&lt;/td&gt;    &lt;td&gt;すべてのアトリビュートを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getfield(string)&lt;/td&gt;    &lt;td&gt;デリゲートフィールドを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getfields()&lt;/td&gt;    &lt;td&gt;すべてのデリゲートフィールドを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getmember(string)&lt;/td&gt;    &lt;td&gt;メンバオブジェクト(プロセス修飾子がpublicになっているもの)を取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getmembers()&lt;/td&gt;    &lt;td&gt;メンバオブジェクト(プロセス修飾子がpublicになっているもの)を取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getmethod(string)&lt;/td&gt;    &lt;td&gt;メソッドを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getmethods()&lt;/td&gt;    &lt;td&gt;すべてのメソッドを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getproperty(string)&lt;/td&gt;    &lt;td&gt;プロパテイを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;getproperties()&lt;/td&gt;    &lt;td&gt;すべてのプロパテイを取得するメソッド&lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p&gt;参考リンク - &lt;a href=&quot;//msdn.microsoft.com/ja-jp/library/system.type(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;microsoftのmsdn - type クラス&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=127&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今までreflection(リフレクション)について勉強しました。前の投稿で勉強したことで「dynamic」もreflection(リフレクション)種類の中で１つですね。&lt;/p&gt;&lt;p&gt;実際にプログラムを実装する時に動的な実装スタイルでreflectionをよく使うし、プログラムを制御するようなプログラムに様々スタイルで応用ができます。&lt;/p&gt;&lt;p&gt;でも、reflectionは静的に実装することよりは遅いし、ソースコードが難しくなって可読性が悪くなる問題があります。それを考えて使うとreflection(リフレクション)はいい文法だと思います。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/34.html</guid><pubDate>Fri, 17 Jan 2020 07:33:42 +0900</pubDate></item><item><title>[C#] Objectタイプ、varタイプ(匿名タイプ)、dynamicタイプ</title><link>https://www.nowonbun.com/33.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は高級データタイプ文法のobjectタイプ、varタイプ(匿名タイプ)、dynamicタイプについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者はc#の勉強の初め部分でデータタイプについて勉強したことがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowonbun.com/6.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 5] データタイプとリテラル(literal)、 nullable&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowonbun.com/7.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 6] 変数と定数&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;すなわち、データを宣言して使うことあるいはクラスを割当して使う方法は「データタイプ　変数名 = new クラス名()」の形で使いました。&lt;/p&gt;&lt;p&gt;上の例を見るとデータタイプに「testclass1」を宣言してクラスを割り当てて使います。ここまでは今まで勉強したとおりに問題がありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;objectタイプ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;それでは、c#のことではすべてのデータタイプとクラスの最高の親クラスが存在します。それを「object」タイプで基本のメソッドは「tostring」等を持っているクラスです。&lt;/p&gt;&lt;p&gt;それですべてのクラス、データタイプは「tostring」を持っていることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=124&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうすると次は「object」タイプの例です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=121&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でもデータタイプを「object」で宣言して「testclass1」を割り当てれば、データタイプが一番上位の抽象クラスを宣言したことなので、「testclass1」タイプままで使われずに、「object」のタイプに使われるので「testclass1」の属性を使うことができないですね。それで「testclass1」属性を使うためには「testclass1」クラスに強制キャスティングしてから使うことができます。&lt;/p&gt;&lt;p&gt;しかし、強制キャスティングの問題はコンパイルする前の状況でエラーを発見しにくいし、ソース可読性も落ちる問題が発生します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=123&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;匿名タイプ(var)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;それでデータタイプを正義しなくて使えるタイプがあります。「object」タイプほどにデータタイプのとしての役割はありませんが、割り当てる時にデータタイプを明示しなくて使うことができる匿名タイプがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=122&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも、匿名タイプは見た目は「object」タイプと似ていることでみえますが、コンパイル段階でクラスを割り当てる時にデータタイプが決めることなので他のタイプに再割当てはできません。&lt;/p&gt;&lt;p&gt;すなわち、匿名タイプはソース段階の見た目を整理することだけなので性能にも影響がありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;dynamic&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;匿名クラスの再割当てる問題を解決するようなタイプが「dynamic」タイプです。匿名タイプはデータタイプをコンパイルする前に決めて使うタイプなら「dynamic」はコンパイルする時にデータタイプを決めるタイプです。&lt;/p&gt;&lt;p&gt;上の例を見ると「dynamic」タイプを使うと「var」と比べて再割当てても変数を使えるし、最後のループ(foreach)部分は「testclass1」と「testclass2」は抽象クラスで結んでいることではないが、同じクラスらしくメソッドを呼ばせることができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで使った部分で「var」と「dynamic」の差を見ると「dynamic」が活用度が高いようで、応用もできそうですね。でも「dynamic」の場合はコンパイル後でデータタイプが決めるタイプで「reflect」と関係があります。&lt;/p&gt;&lt;p&gt;「reflect」は次の投稿で勉強しようかと思いますが、簡単に言うとプログラム自体をすべて「static」化して「invoke」することなので、性能が既存のことより遅くなります。 すなわち、上のループの例みたいに抽象クラスを利用しなくて,メソッド名だけ合わせて使えば大量処理プログラムを作成する時にすごく遅くなります。「reflect」の説明は後で詳しくしましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;改めて纏めると、筆者の場合は「dynamic」タイプはウェブ環境と性能に影響がない場合に使いますが、その以外は使わないほうがよいです。（プログラマ達のスタイルはすべて違うので筆者が言うのが正解ではなく、自分の考えです。)&lt;/p&gt;&lt;p&gt;そして、「var」タイプの場合は勧めないです。確かに「var」タイプはソース作成量を縮めてソース生産性が高くなると思いますが、逆に可読性が落ちるので綺麗が実装ができると思わないです。&lt;/p&gt;&lt;p&gt;でも、「dynamic」は可読性が落ちますが、代わりにソース生産性だけではなく、抽象しなくても抽象クラスを使いらしく作成ができますので、上の条件通りに性能の影響がない場合にはよく使う方です。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/33.html</guid><pubDate>Fri, 17 Jan 2020 07:33:33 +0900</pubDate></item><item><title>[C#] Partial Type(クラス分割)、拡張メソッド</title><link>https://www.nowonbun.com/32.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はc#のpartial typeと拡張メソッドについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラミングをしてみるとクラス内の処理が多くなってソース行目が長くなる場合があります。&lt;/p&gt;&lt;p&gt;最近はide(visual studio)がすごくよいので、ソースが大きくてもメソッド検索やプロパティ検索が早めにできますが、それでもソースが大きいのはクラスサイズが大きくなって性能が遅くなる可能性がありますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;partial type&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;それで、コンパイルする時には１つのクラスになりますが、ソースファイルを分けて作成できる文法の「partial type」があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=116&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「partialclass」のクラスを４つに分けて作成しました。でも、「partialclass」を割り当てて使う時には１つのクラスように使います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者はクラス分割(partial type)を使ったことがほとんどありません。そんなにソースを長く作成する前に抽象と継承を使ってソースを減らすか、クラスが大きくなると思うと、 クラス自体を分けて実装しますね。partial typeを使うくらいのクラスの大きさなら割り当てする時にクラスサイズが大きいので、遅くなりますね。&lt;/p&gt; &lt;p&gt;ソースの長さのために使うことではなく、機能として分けて管理することように実装すれば「partial type」を使用することも良いと思いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;拡張メソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;これからはクラス機能を追加する方法で拡張メソッドについて勉強します。クラスの機能を追加する方法ではクラスを継承してメソッドを追加する方法があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=117&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;クラスにメソッドを拡張する時にはクラスを継承する方法が正確です。でも機能を１つだけ追加するように派生クラスを作る場合、または「sealed」になったクラス(継承できないクラス)に機能を追加する場合には継承する方法でできませんね。&lt;/p&gt;&lt;p&gt;そのため、c#は継承しなくてもメソッドを追加する方法で拡張メソッドを提供しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowonbun.com/20.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 19] 継承とsealedクラス&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=118&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「parentclass」クラス内では「print2」メソッドがありません。でも「main」で割り当てて使う方法をみるとメソッド「print2」があるように使っています。「print2」メソッドは「parentclass」のクラスの内ではなく、「program」クラスの中で「parentclass」のメソッド拡張されて「print2」メソッドがあるようになりました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして「string」クラスの場合は基本的に「sealed」キーワードが付けていて継承をできないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=120&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも「string」クラスも必要によってメソッド拡張をしなければならない場合もあります。その時にはメソッド拡張機能を利用して機能追加すれば良いと思います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=119&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;拡張メソッドの機能は実際にプロジェクトする時にもよく使う機能です。プロジェクトを始まる前に普通は特殊文字列処理、特殊アルゴリズム、ログ処理等の共通メソッドを「static」タイプで実装しますね。 でも「static」形式ではなく、この拡張メソッド機能を利用すると共通関数をもっとしやすく使えることではないかと思いますね。&lt;/p&gt;&lt;p&gt;そのことで、比較的によく使うタイプなので、確かに認知していきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/32.html</guid><pubDate>Fri, 17 Jan 2020 07:33:22 +0900</pubDate></item><item><title>[C#] Lamda(ラムダ)</title><link>https://www.nowonbun.com/31.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はc#のlamdaについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを開発した経験がある方なら最近にlamda(ラムダ)について聞いたことがあると思います。&lt;/p&gt;&lt;p&gt;最近、トレンドになっている関数型プログラミングがこのラムダ式を利用して作成するからです。正確に言うとlamda式（ラムダ）は関数型プログラミングの匿名メソッド式を簡略に記述するような方法です。&lt;/p&gt;&lt;p&gt;すなわち、匿名メソッドを簡略に記述する式がlamda式です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;lamda&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;下記の例は匿名メソッドを既存の方法のdelegateを利用して生成しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=113&quot; data-filename=&quot;0001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowonbun.com/26.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 25] delegate(デリゲート)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;上の例は「delegate」の投稿で勉強したことがある例です。「delegate」キーワードで匿名メソッドを作成することではメンバーで宣言された「delegate」のデータタイプにパラメタデータタイプを合わせて作成します。戻り値もメンバーで宣言された「delegate」のデータタイプに合わせて返却します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;次の例は「lamda」式で匿名メソッドを実装したことです。&lt;/p&gt;&lt;p&gt;上の例をみると既存の「delegate」から「delegate」のキーワードが省略して、パラメタのデータタイプも省略しました。&lt;/p&gt;&lt;p&gt;上の例を見ると「delegate」式の匿名メソッドを記述する文法より少し簡略になりました。しかし、上の例だけみるとlamda式で実装すればいい点が何かを知れないですね。&lt;/p&gt;&lt;p&gt;それなら複雑に匿名メソッドで使う型の「enumerable」クラスのメソッドで例を確認してみると差が確実に見えそうです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowonbun.com/29.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 28] linq(リンク)-2 (メソッド式)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;次の例を「enumerable」クラスのメソッドの「join」です。joinメソッドのパラメタは匿名メソッドの３個があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=114&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると２つのリストがあり、joinメソッドを通ってリストを併合します。「join」メソッドのパラメタは３つの匿名メソッドが必要です。それで始めのjoinメソッドには「delegate」の匿名メソッドを利用して実装しています。そして２つ目のjoinメソッドは「lamda」式を利用して実装していますね。&lt;/p&gt;&lt;p&gt;性能は差が無いですが、ソースの可読性がたくさん上がることになります。（ソースが簡単になるとソース可読性が上がります。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最近のトレンドは関数型プログラミングですが、「delegate」メソッド式よりlamda式で実装すれば複雑な処理も簡単に実装できると思います。後の関数プログラムの並列処理(パラレル)もlamda式で実装すれば簡単に実装ができます。&lt;/p&gt;&lt;p&gt;javaは「delegate」はないですが、lamda式はあります。それでlamda式に実装するとjava開発者もソースを読むことができるのでlamda式で作成することに勧めます。&lt;/p&gt;&lt;p&gt;それで関数型プログラムを実装する時はlamda式で作成するようによく覚えましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/31.html</guid><pubDate>Fri, 17 Jan 2020 07:33:13 +0900</pubDate></item><item><title>[C#] LINQ(リンク)-3 (Enumerableクラス)</title><link>https://www.nowonbun.com/30.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はlinq(リンク)の「enumerable」について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「enumerable」は前の投稿で勉強したlinq(メソッド)も含めていることですが、コレクションのタイプのクラスなら(リスト、ディクショナリ、テーブル等)データを扱うように「enumerable」のクラスを拡張してメソッドを使えます。&lt;/p&gt;&lt;p&gt;すなわち「enumerable」はデータを扱うクラスとして「where」、「orderby」、「select」の以外に「sum」、「average」、「max」、「min」、「aggregate」などのメソッドがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると今日は「select」、「where」、「oderby」以外の「enumerable」クラスメソッドについて勉強しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;max&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;maxのメソッドはコレクションタイプのクラスの中でデータの最大値を救うものです。このメソッドの返却値は整数、実数のみです。すなわち、文字、文字列、ブール代数(boolean)の値で返却をできないという意味です。&lt;/p&gt;&lt;p&gt;上の例をみるとリストにtestclassのクラスを格納してmaxメソッドで最大値を検索しています。すなわち匿名メソッドでクラスのnumberデータを返却して結果はそのクラス達の最大値が出ると予想になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=103&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;min&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;minのメソッドはコレクションタイプのクラスの中でデータの最少値を救うものです。このメソッドもmaxと同じとおりに整数、実数のみに返却します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=104&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;sum&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;sumのメソッドはコレクションタイプのクラスの中でデータの合計値を救うものです。このメソッドもmaxとminと同じとおりに整数、実数のみに返却します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=105&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;average&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;averageのメソッドはコレクションタイプのクラスの中でデータの平均値を救うものです。このメソッドもmaxとminとsuｍと同じとおりに整数、実数のみに返却します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=106&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまで数と関係がある「enumerable」のメソッドを調べてみました。次からはデータを扱って処理する「enumerable」クラスの「aggregate」と「zip」メソッドについて調べます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;aggregate&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;aggregateのメソッドはコレクションタイプのリストを繰り返してリストのデータを累積するものです。パラメタは累積しているデータと、新しく累積するデータを受け取ります。パラメタと返却値のデータタイプは対象のコレクションデータタイプと一致になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=111&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;zip&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;zipメソッドは二つのコレクションを併合することです。すなわち、対象コレクションに他のリストのデータを同じインデックスとおりにデータを併合したい際に使います。&lt;/p&gt;&lt;p&gt;始めのパラメタは併合したいコレクションリスト、二つ目が匿名メソッドになりあます。匿名メソッドのデータタイプは初めは対象コレクションリストのデータタイプ、二つ目は併合するコレクションリストのデータタイプになります。コレクションリストのインデックスが合わないデータは処理しません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=109&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで「enumerable」のデータ数計算とデータを扱いメソッドについて調べてみました。&lt;/p&gt;&lt;p&gt;「linq」の「enumerable」クラスのメソッドを使うと基本的に返却の値は「ienumerable」インタフェースタイプになります。&lt;/p&gt;&lt;p&gt;ただ「ienumerable」タイプを繰り返して使えることもできますが、他のコレクションに変換する時があるはずと思います。&lt;/p&gt;&lt;p&gt;それで「enumerable」クラスは他のコレクションタイプに変換する「toarray」、「tolist」、「todictionary」、「single」のメソッドがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;tolist&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「tolist」は「ienumerable」から「リスト」タイプに変換する「enumerable」のクラスメソッドです。パラメタはなしで、リストのデータタイプは「ienumerable」の同じタイプに返却します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=108&quot; data-filename=&quot;007.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;todictionary&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「todictionary」は「ienumerable」から「ディクショナリ」タイプに変換する「enumerable」のクラスメソッドです。匿名メソッドのパラメタはリストのオブジェクトを受けるし、返却値はキーを返却します。「todictionary」で返却したコレクションのキータイプは匿名メソッドで返却したデータタイプだし、値は「ienumerable」のオブジェクトのタイプになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=112&quot; data-filename=&quot;008.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;toarray&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「toarray」は「ienumerable」から「配列」タイプに変換する「enumerable」のクラスメソッドです。パラメタはなしで、リストのデータタイプは「ienumerable」の同じタイプに返却します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=107&quot; data-filename=&quot;009.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;single&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「single」は「ienumerable」のデータが一つの場合にコレクションタイプではなく、「ienumerable」のオブジェクトのタイプに返却するメソッドです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=110&quot; data-filename=&quot;010.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今までlinqの「enumerable」について勉強しました。プログラムはホームページなどみたいにデータを扱わないプロジェクトもありますが、ほとんどデータを扱うプロジェクトが多いです。&lt;/p&gt;&lt;p&gt;それで「c#」の場合はデータを扱う「linq」の「enumeration」クラスを置き、複雑なアルゴリズムを知らなくてもデータ処理ができるようになっています。&lt;/p&gt;&lt;p&gt;また、enumerableは関数型プログラムを指向しているし、パラレル処理でも「enumerable」クラスを利用して処理します。これからの投稿からにも「enumerable」をよく使うのでここで使用する方法を確かに認知していきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/30.html</guid><pubDate>Fri, 17 Jan 2020 07:33:05 +0900</pubDate></item><item><title>[C#] LINQ(リンク)-2 (メソッド式)</title><link>https://www.nowonbun.com/29.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿から続いてlinq(リンク)のメソッド式について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;linq(リンク) - メソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;前の投稿にはlinqを「sqlquery」タイプで使いました。筆者もソースの可読性のため「sqlquery」タイプをお勧めしますが、仕様によって検索条件が複雑になると「sqlquery」だけですべての条件を実装できないと思います。&lt;/p&gt;&lt;p&gt;そのためクエリタイプのlinqではなく、メソッドタイプの「linq」があって実装できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;whereメソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=99&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見るとlist(リスト)で「where」メソッドを使っています。そのメソッド中でデリゲートの匿名メソッドを使って繰り返して返却値が「true」場合にデータを出すようになっています。&lt;/p&gt;&lt;p&gt;すなわち、上の例は初めの「where」メソッドで「number」の値が5以上のデータかつ２つ目の「where」メソッドで「number」が８の以下のデータを返却してデータを出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;orderメソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=101&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例は「linq」の「orderby」の降順のメソッドです。where関数と同じみたいにメソッド中には匿名メソッドで処理して、返却値は順番対象の値を返却します。&lt;/p&gt;&lt;p&gt;すなわち、「linqexampledata」の「number」の降順になって「9,8,7,6」になります。出力はデータの値を出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;selectメソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=100&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例の場合は「select」メソッドを利用して「linqexampledata」タイプから「string」タイプに変換していますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;joinメソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=102&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例は２つのリストを組み合わせて結果を出力することです。様々の処理が入りましたが、「join」メソッドだけ見るとデリゲートが３つがあることが確認できます。&lt;/p&gt;&lt;p&gt;初めのパラメタは組み合わせるリスト、２つ目は対象レコードで比較するデータ、３つ目は組み合わせるリストの比較するデータ、最後は組み合わせたデータを返却するデリゲートになっています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今までlinqの表現式をメソッドで作成する方法について勉強しました。ここで言うことで筆者はlinqメソッド形式と言いますが、実は「enumerable」の処理だと言うし「linq」メソッドはその「enumerable」の処理メソッドの中で１つのメソッドです。&lt;/p&gt;&lt;p&gt;そうすると次の投稿は「enumerable」の他の式について調べてます。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/29.html</guid><pubDate>Fri, 17 Jan 2020 07:32:55 +0900</pubDate></item><item><title>[C#] LINQ(リンク)-1</title><link>https://www.nowonbun.com/28.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はc#ののlinqについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを開発するとlist（リスト),map(dictionary)などをたくさん使うと思います。例えば仕様によって同じタイプのデータをリスト化にして実装するほうが実装が綺麗にできるし、ソース整理が楽だと思います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=95&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;前の投稿でもlistについて勉強したことがあるので上の例を解析ができると思います。そうすれば上の「number」の「2」を検索するようにはどうしましょうか？一般的にはループで分岐文を付け入れて検索します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=96&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例はデータ複雑度が低いので簡単に実装ができますが、クラスのデータが複雑だし、量が多い場合は実装も大変になるし、データ処理時間も結構かかると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;linq&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;その場合があるとデータベースのクエリみたいに簡単に検索ができるのがあればいいと思われますね。それで「.net framework3.5」からリスト、ディクショナリをsqlクエリみたいなキーワードで簡単に検索ができるように「linq」ということを提供しています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=97&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「getsearch2」のメソッドの中でsqlクエリみたいな「from」、「where」、「select」のキーワードがあります。結果は「getsearch」と同様に「number」を検索して「data」の値を返却します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると「linq」のキーワードについて詳しく勉強しましょう。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;linqキーワード&lt;/th&gt;    &lt;th&gt;説明&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;    &lt;td&gt;from〜in&lt;/td&gt;    &lt;td&gt;検索するリストあるいはディクショナリ、データテーブルを指定&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;where&lt;/td&gt;    &lt;td&gt;リストを検索する条件&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;join&lt;/td&gt;    &lt;td&gt;２つ以上のデータリストを結合&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;orderby&lt;/td&gt;    &lt;td&gt;結果のデータリストの整列&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;group&lt;/td&gt;    &lt;td&gt;結果のデータリストのグループ化&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;select&lt;/td&gt;    &lt;td&gt;結果データを抽出&lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p&gt;linqの場合は上のキーワードを使ってリストを検索をします。そして検索した後のデータはただのリストを返却することではなく「ienumerable」タイプで返却しますね。&lt;/p&gt; &lt;p&gt;「ienumerable」は「yield」のキーワードを勉強する際に説明したことがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowonbun.com/25.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 24] indexer(インデクサー)とyield(リファレンス)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;もう１回説明すると「ienumerable」は「interator」パターンと関係があるクラスです。「ienumerable」のタイプからデータ取得方法は「ienumerator」に変換することや、「tolist」メソッドを使ってリストタイプに返却することや、「toarray」メソッドを使って配列で取得することや、また結果の値が１つの場合に「tosingle」のメソッドで単一結果を取得する方法があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=98&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今まで「linq」の基本文法について勉強しました。上の例をみると２つのリストを「join」キーワードで結んでデータ処理しています。それをただのループで実装すると思えばソースが複雑度がかなりあがると思いますね。&lt;/p&gt;&lt;p&gt;c#「linq」はデータをsqlクエリみたい扱う方法だけあることではないけど、上の例だけみても「linq」を使うと実装が簡単になることを確認できますね。&lt;/p&gt;&lt;p&gt;上の形式はリンクのsqlクエリ文法ですが、次の投稿ではメソッドタイプの「linq」について勉強します。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/28.html</guid><pubDate>Fri, 17 Jan 2020 07:32:46 +0900</pubDate></item><item><title>[C#] event(イベント)</title><link>https://www.nowonbun.com/27.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はevent(イベント)について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿で「delegate」はメソッドの動作を集まって呼び出せるものだと勉強しました。その中で「delegateフィールド」を通って「delegate」を格納あるいは呼び出すのができます。&lt;/p&gt;&lt;p&gt;でも「delegateフィールド」は「public」で公開すると内部だけではなくクラスの外部でも呼び出すのができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=92&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「delegate」はメソッドの代理子なので上のことに実装するのは悪いではないですが、そのことよりクラスの内部処理を外部に呼び出すのは怪しいじゃないかと思えられますね。&lt;/p&gt;&lt;p&gt;すなわち、「delegate」フィールドはクラスの内部処理が内部と外部のメソッドに呼び出すことができる型になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;event(インベント)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「event」の場合はクラスの外部で呼び出すのを防止しています。使用方法は既存の「delegate」フィールドの前に「event」キーワードを付けることで使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=94&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 800px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=91&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「delegatefield」と「event」の差を纏めると下記とおりです。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;ul&gt;	&lt;li&gt;・delegateフィールドは使用演算子は(=,+=,-=)ですが、イベントは(+=,-=)だけです。&lt;/li&gt;	&lt;li&gt;・delegateフィールドはクラス内部、外部すべて呼び出すのができますが、eventはクラス内部だけ呼び出せます。&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=93&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/27.html</guid><pubDate>Fri, 17 Jan 2020 07:32:38 +0900</pubDate></item><item><title>[C#] delegate(デリゲート)</title><link>https://www.nowonbun.com/26.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はdelegate(デリゲート)について勉強しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前に筆者がoop(オブジェクト指向プログラム)について説明したことがあります。oopの特徴はカプセル、継承、抽象、ポリモーフィズムによってクラス単位でデータを扱う方法です。&lt;/p&gt;&lt;p&gt;そのことによってプログラムを設計する時に何のデータを受け取ってどんな処理するし、どんな結果あるいはデータを出力する流れを作成するのができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;oopの概念はオブジェクトの流れとしては定義していますが処理する方法には定義してないです。それで一から最後まで流れを決めてプログラミングするのでプログラムの性能が制限的になるし並列処理の実装が難しくなります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのため、最近のプログラム言語のパラダイムは関数型のプログラムになりました。関数型のプログラムの理論は昔からありましたが、実装が難しい短所でよく使えませんでしだが、最近は関数型言語も誕生したし、方法でも前より発展してc#にも「.net framework3.0」が文法から並立処理、匿名メソッド、lamdaが追加されました。&lt;/p&gt;&lt;p&gt;それで今日はc#の関数型のプログラムの初めの「delegate」について勉強します。「delegate」のキーワードは初期c#モデルからも使えますが、匿名メソッド、lamda式は「.net framework 3.0」から使用できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;delegate&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「delegate」は意味とおりに代理子です。すなわち、メソッドの抽象だと思えば理解しやすいと思いますが、メソッドを「delegate」を利用して一つのタイプに変換して呼び出す方法です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=89&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「delegate」を通ってメソッドを呼び出します。「testmethod」「testmethod1」「testmethod2」は別のメソッドですが、呼び出すのはリストに結んで一括で呼び出せます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;delegateフィールド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「delegate」はメソッドを代理に呼び出すの意味は理解しました。デリゲートはメソッドを抽象(?)してメソッドを纏めって使う方法なのでいつもリストと一緒に使うはずです。&lt;/p&gt;&lt;p&gt;「delegate」フィールドはそのデリゲートリスト代わりに「デリゲート」をリストらしく格納できられるものです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=90&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;匿名メソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今までメソッドはメソッドの型を実装した後呼び出して使うことで勉強しました。でもメソッドをデリゲートで使うことならメソッド名が必要ではない場合もあると思います。そのみたいにメソッド型が有りず、実装だけあるメソッドを匿名メソッドということがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=88&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今まで「delegate」について勉強しました。「delegate」は次の投稿から勉強する並列処理(parallel)、ランダ(lamda)、イベント(event)と関係があるので確実に勉強していきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/26.html</guid><pubDate>Fri, 17 Jan 2020 07:32:28 +0900</pubDate></item><item><title>[C#] indexer(インデクサー)とyield(リファレンス)</title><link>https://www.nowonbun.com/25.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はindexer(インデクサー)とyield(リファレンス)について勉強します。&lt;/p&gt;&lt;p&gt;indexerとyieldの場合は他の言語にはない文法です。なので少し理解が大変だと思われることもできるが以外に簡単だしよく理解して利用すればプログラム品質があがることにもできると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;indexer(インデクサー)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;indexerはクラスを配列みたいに宣言するように使用するキーワードです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=86&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみるとクラスを配列みたいに使っています。でも内部は本当の配列の構造になっていません。ただ、クラスを使用方法で配列みたいに宣言することで見やすくなることなので性能には影響がありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;yield&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;yieldの場合はデザインパタンの「interator」パタンと関係があるキーワードです。&lt;/p&gt;&lt;p&gt;「interator」パタンは繰り返す的なデータ集団を一つずつに分離してデータを取り出しするパタンをいいます。普通のリストでデータを取り出す型は下記とおりです。&lt;/p&gt;&lt;p&gt;上の例をみると外部で「listtest」クラスのメンバ変数「list」からデータを取得するようにはメンバ変数自体を返却するかインデックスを受け取って返却するかの一つです。&lt;/p&gt;&lt;p&gt;初めの方法でメンバ変数「list」を返却することですが、そうすればoopの特性のカプセル化の意味がなくなります。実際に実装する形は２つ目ですが、インデックスを計算するようにリストの内部関数を連携して作成すべきです。(adapterパタン - リスト個数関数、リスト削除関数、リスト取得関数等)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=87&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見るとリストを返却することではなく、ienumerableタイプを返却します。それでクラス内のリストと外部クラスで呼び出したリストのオブジェクトを分離しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;初めに説明したとおりにindexer,yieldは他の言語にはないキーワードです。(筆者が知ってる言語中では。)それで開発する間によく使うキーワードではないと思います。それでもよく認識して使えば可読性が上がると思うのでよく覚えていきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/25.html</guid><pubDate>Fri, 17 Jan 2020 07:32:17 +0900</pubDate></item><item><title>[C#] 例外処理(try〜catch,throwそしてfinally)</title><link>https://www.nowonbun.com/24.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は例外処理について勉強します。例外処理はキーワード名をみればエラーを解決するキーワードみたいですが実はそうではありません。大きくみると全域の分岐というの意味が近いと思われます。&lt;/p&gt;&lt;p&gt;この全域の分岐はエラー処理するところでよく使われるので例外処理と呼ばれるかも知れません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;try〜catch、throw&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;例外処理はプロセス処理順「try」ブロックの内で「exception」クラスタイプを「throw」から投げれば「catch」で受け取ります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=83&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみると「if」文と差がなさそうですね。でも「try〜catch,throw」は「try」ブロックの内で「throw」を発生することを「catch」で受け取るものなので「ｔｒｙ」のブロックのメソッド内で「throw」を投げても「catch」で受け取ります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=84&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして継承関係でも「try〜catch、throw」ができます。すなわち親クラスで「exception」を「throw」で投げたら派生クラスの「try〜catch」で受け取ることができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=85&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまで確認すると確かに一般分岐と差がありますね。一般分岐の場合は条件によって処理プロセスが変わりますが、「try〜catch、throw」の場合は「try」ブロックの内で「throw」を投げると「catch」にで受け取ることで処理になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;finally&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「try〜catch」の場合は処理中で投げる形態だから「throw」の次のレベルソースが実行しないです。そうことになると必ず実行すべきなソースレベルがある場合に論理的なエラーがなる可能性があります。&lt;/p&gt;&lt;p&gt;上の例を見ると「method」で「exception」が発生すれば「i++」は実行しないので無限ループになります。(実は例みたいに極端的に実装しない。)&lt;/p&gt;&lt;p&gt;それでエラーが発生(throw)しても無限ループにならないように「finally」キーワードを使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=81&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「finally」の場合は「try」のブロックの内で返却「return」しても必ず処理するブロックです。なのでプログラムリソースを解除するところでよく使いますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=82&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/24.html</guid><pubDate>Fri, 17 Jan 2020 07:32:08 +0900</pubDate></item><item><title>[C#] インタフェース( interface )</title><link>https://www.nowonbun.com/23.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はインタフェースについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで継承すると思えばクラスあるいは抽象クラスから引継いてもらってクラスを生成することでした。でもその形なら２つ以上の継承をできずに統一されたデータタイプに結ぶことができないですね。&lt;/p&gt;&lt;p&gt;各クラスは機能別で分けて処理するプロジェクトの案件がある場合、継承クラスをatype,btype,ctype,dtypeを作成して実装します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=78&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも上の場合は一つずつ区分ができますが２つ以上に機能を結ぶのはできないですね。そのため、多重継承ができるものが必要でそれをインタフェース(interface)と言います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;インタフェース(interface)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;インタフェース(interface)は抽象体なので実装しているロジックがあることではなく、抽象メソッドだけあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=79&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見るとインタフェースを使われなくても、プログラム作成することができそうですね。ですから、インタフェースを使わなくても問題がなさそうだし、性能にも影響がなさそうですね。&lt;/p&gt;&lt;p&gt;そのいうとおりでインタフェースを知らなくてもプログラムを作成できます。でもプロジェクトをデザイン、すなわちコーディング設計をする時にはインタフェースがなければ実装が大変になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;例えば、プロジェクトを構成する時にdbが２つがあると考えてみましょう。２つのデータベースで構成されているテーブル(データ構造)も全て違うことで、ユーザの場合は２つのデータを選ぶことではなく一つのデータベースから取得するみたいに構成して提供しましょうという課題があると考えましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=80&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると全体構造は少し複雑になりましたが、ロジックを使うユーザ(main関数)はデータベースを気にしずにデータだけ考えてロジックを実装ができます。&lt;/p&gt;&lt;p&gt;また、上の条件ならデータベースが２つではなくもっと追加になってもソース修正が要らずにインタフェースに合わせてdblistに追加することができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プロジェクトは一人で立ち上げることよりチームを組んで立ち上げる時が多いです。その時にモジュール実装するたびにモジュール間に機能影響があったり、エラーが発生するとプロジェクトを進めることが大変になると思います。&lt;/p&gt;&lt;p&gt;それでoop開発はモジュールの結合分離することで勧めます。そのためにoopを実装するためにはインタフェースが必要なことです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プロジェクト構成方法、ソースを実装する方法には後でデザインパタンを勉強する時に詳しく勉強しましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/23.html</guid><pubDate>Fri, 17 Jan 2020 07:31:59 +0900</pubDate></item><item><title>[C#] this、base、ポリモーフィズム( overload (多型) )</title><link>https://www.nowonbun.com/22.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は「this」、「base」、「ポリモーフィズム( overload (多型) )」について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿で継承について勉強したことがあります。継承のことを図で示せば下記とおりです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=75&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 200px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の図を考えながら「this」、「base」を勉強しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;this&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;プログラムを作成すると多くの変数とメソッドを作ります。その度に変数名とメソッド名を命名するのは大変だと思います。それでクラスの中でメンバ変数あるいはメソッド(コンストラクタ)を同じ名で命名して同じ名の変数とメソッド(コンストラクタ)を「this」にキーワードで見分けして使います。&lt;/p&gt;&lt;p&gt;上の例を見るとローカルパラメタの変数名を「data」に命名し、メンバの変数名も「data」に命名しました。 そうするとローカルメソッドの内で「data」名を使うと思えばメンバ変数を使いますかローカルを使いますか？答えは一番近い変数を使います。&lt;/p&gt;&lt;p&gt;すなわち、「data」の変数はローカルパラメタの変数を参照していると言う意味です。改めていうと、「data」はローカルパラメタ「data」を指しているデータだし、「this.data」はメンバ変数の「data」を指しているデータです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=77&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;大体的に「this」はメンバ変数か、ローカル変数かを見分けするために使いますが、コンストラクタで他のコンストラクタを呼び出す時も使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=76&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「main」メソッドの内で「testclass()」を割り当ててパラメタがないコンストラクタを呼び出します。コンストラクタの隣を見ると「this(0)」が付けて「int」のパラメタがあるコンストラクタを呼び出します。 また、パラメタが「int」型をコンストラクタは隣の「string」のパラメタがあるコンストラクタを呼び出します。&lt;/p&gt;&lt;p&gt;纏めて順番に並べると「testclass(string s)」→「testclass(int i)」→「testclass()」の順で呼び出します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;base&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「this」はクラスの自分自身を指すと思うと「base」の場合は親クラスを指しているキーワードです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=73&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「base」、「this」の意味を確実に知ることになります。まず、コンストラクタの「base」は「this」の自分自身ではなく親クラスのコンストラクタを指していますね。&lt;/p&gt;&lt;p&gt;また、メソッドの中で使った「base」も親クラスのメソッドを指しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;ポリモーフィズム(多型)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;前の投稿で「oop」の特徴について説明したことがあります。「oop」の特徴は抽象化、継承、ポリモーフィズム(多型)、カプセルがあります。その中でこれからポリモーフィズム(多型)について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;既存に勉強したとおりならコンストラクタを作成する時にパラメタだけ変わって作成したことがあります。同様の意味でメソッド名を一致し、パラメタのタイプと個数を見分けて作成することをポリモーフィズム(多型)と言います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=74&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「main」関数から呼ばれる関数名はすべて「testmethod」です。でも「testclass」の中で処理するメソッドは違います。&lt;/p&gt;&lt;p&gt;初めのパラメタがないメソッドを呼ばれて「 console.writeline(&quot;testmethod()&quot;);」を実行します。２つ目はパラメタが「int」型のメソッドを呼び出します。最後はパラメタ「string」型のメソッドを呼び出します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の形のとおりに作成したのをポリモーフィズム(多型)あるいは「overload」と言います。&lt;/p&gt;&lt;p&gt;プログラムのテストを受ければよく出題される問題が「override」と「overload」の差です。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;ul&gt;&lt;li&gt;overrideは仮想メソッドあるいは抽象メソッドから再実装することです。&lt;/li&gt;&lt;li&gt;overloadは多型(ポリモーフィズム)のでパラメタタイプ別で同じメソッド名を定義することです。&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p&gt;「overload」と「override」は見分けが大変なので意味を確実に覚えて行きましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/22.html</guid><pubDate>Fri, 17 Jan 2020 07:31:50 +0900</pubDate></item><item><title>[C#] 抽象クラス、抽象メソッド、仮想メソッド</title><link>https://www.nowonbun.com/21.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は抽象クラス、抽象メソッド、仮想メソッドについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;抽象クラス&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;前の投稿で親クラスから継承すると親クラスの機能を引継いでもらって機能拡張をできることを勉強しました。&lt;/p&gt;&lt;p&gt;でも、プロジェクトによって親クラス段階で仕様が決めておらず、派生クラス段階で仕様が決められる場合があります。&lt;/p&gt;&lt;p&gt;例えば、各クラスの変数の初期値は違うけれど、変数、メソッドの構造が同様で作りたい場合があります。その時に親クラスからすべて一緒の変数、メソッドを作成して派生クラスからデータを取得するように作成します。その時に親クラスから取得メソッドの実装が決めておらず、派生クラス(子クラス)で実装させ、親クラスは派生クラスの実装させたことを呼び出すことです。&lt;/p&gt;&lt;p&gt;すなわち、親クラスはそのメソッドを実装予約(抽象メソッド)して継承すれば実装することになっているクラスを抽象クラスといいます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=70&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;抽象クラスと一般クラスの構造は同じですが、一般クラスは継承しなくてそのままクラスとして使えるけど抽象クラスの場合は継承しなくて使えません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=72&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 760px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;抽象メソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;抽象メソッドの場合は必ず抽象クラス内だけ使えます。すなわち、抽象メソッドがあれば必ずクラスを抽象クラスに変換しなければならないという意味です。&lt;/p&gt;&lt;p&gt;上の例を見ると「abstractclass」クラス内で抽象メソッド「getdate()」を宣言「abstract」しています。そのことを「childbclass」、「childcclass」クラスが継承して抽象メソッド「getdate()」を再実装「override」しています。そして親クラスのコンストラクタで派生メソッドを呼び出して変数「data」を設定しています。派生クラスの抽象メソッドを当該データから返却しています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=71&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果を見ると各クラスの変数「data」の値を出力しています。そして結果は派生メソッドで返却したデータを「data」に格納して示させています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;仮想メソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;抽象メソッドは親クラスで実装しておらず、派生クラスに実装を引継ぎます。でも、親クラスで全然実装しないことではなく、一部実装して派生クラス(子クラス)にも引き継いで再実装(override)する場合もあると思いますね。あるいは再実装しなく、親クラスのデフォルトに実装してメソッドを使われる時もあります。&lt;/p&gt;&lt;p&gt;そのメソッドを仮想メソッドといいます。仮想メソッドは返却タイプ前に「virtual」とキーワードをつけます。&lt;/p&gt;&lt;p&gt;上の例を見ると親クラスが仮想メソッド「getdate()」を宣言しました。そして「childaclass」の場合は再実装しないし「childbclass」、「childcclass」の場合は既存とおりに再実装しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=69&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果をみると再宣言しなかったクラス「childaclass」のメソッドは親クラスで実装したメソッドを呼び出され、データを取得します。「childbclass」、「childcclass」の場合は再宣言したメソッドからデータを取り出します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;仮想メソッドは再宣言しくても独立に使うことでできるので、抽象クラスではなく一般クラスでも使うことができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで抽象クラス、抽象メソッド、仮想メソッドについて勉強しました。プロジェクトをすると様々問題が発生し、どうすれば実装ができるか、またどうすれば既存の修正を最少にしてバージョンアップをするかについて悩むのが多いと思われます。結局ソフト開発はどのぐらい早めに開発できるか正確にできるか理解にしやすいかが問題ですね。そのための現在は開発構造理論で「oop(オブジェクト指向プログラミング)」の概念が導入されました。その「oop」の概念の始めが抽象、仮想になっています。&lt;/p&gt;&lt;p&gt;これから勉強すること、後でデザインパタン、リファクタリング方法のこともすべて抽象、仮想の応用になっているので確実に覚えていきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/21.html</guid><pubDate>Fri, 17 Jan 2020 07:31:41 +0900</pubDate></item><item><title>[C#]  継承とSealedクラス</title><link>https://www.nowonbun.com/20.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は継承とsealedクラスについて勉強します。oopの特徴は抽象化、継承、多型、カプセル化があります。カプセルの場合はアクセス修飾子を勉強する時に説明したことがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;./14.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 13] アクセス修飾子(public, private, protected)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はoopの特徴の中の継承について勉強しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;継承&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;この間にクラス、メソッド、プロパティ、変数の使用方法について勉強しました。正直にプログラムはその４つだけを知っても実装ができます。&lt;/p&gt;&lt;p&gt;でも、プロジェクトが大きくなればなるほどその４つだけで実装が大変だし、出来上がった後を考えるとメンテおよびソース管理がすごく大変になると思います。&lt;/p&gt;&lt;p&gt;その理由で継承は実装と管理のために使うと思っても結構です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;継承の意味は親クラスから機能を引継いでもらい子クラスを生成することです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=66&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例をみると「successionbclass」を割り当てて「data1」のプロパティを呼び出します。でも「successionbclass」クラス内部には「data1」のプロパティがありません。&lt;/p&gt;&lt;p&gt;しかし例の結果を見ると「successionbclass」に「data1」のデータが格納されるし、結果としても出力されます。&lt;/p&gt;&lt;p&gt;なぜなら、「successionbclass」クラスは「successionaclass」クラスから機能をすべて継承したからのです。すなわち、「successionbclass」クラスは「successionaclass」クラスの機能をすべて使われると意味ですね。&lt;/p&gt;&lt;p&gt;上の例を見ると「successionbclass」クラスの場合は「successionaclass」、「successioncclass」クラスと「successiondclass」クラスの場合は「successionbclass」を継承しています。&lt;/p&gt;&lt;p&gt;もし、「successioncclass」のクラスと「successiondclass」のクラスが継承しなくてクラス内部で「data1」、「data2」を実装すると考えてみましょう。&lt;/p&gt;&lt;p&gt;プロジェクト中で「data1」のデータタイプが「int」から「string」に修正することが発生すると継承しない場合は「successioncclass」のクラスと「successiondclass」のクラスを両方修正しなければならないのです。 しかし、継承していると思うと「successionaclass」だけ修正するので、修正工数も縮まるし、バグのリスク、管理的にも良いです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;sealedクラス&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;継承はコード管理と生産性のために使いますが、「.net framwork」から提供するクラスを利用するためにも使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=65&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも、継承がいいことだけあるものではありません。例えば、c#のデータタイプ型のオブジェクトを継承すると思うと逆に性能が落ちる時もありますね。&lt;/p&gt;&lt;p&gt;また、市販ソースコードを開発する時はモジュールは公開しなければならないけど、ソースコードは公開したくないやクラスの継承もできないようにやりたい時もあります。 （継承すると内部処理が大体に見えます。）その時に「sealed」キーワードを付けて継承防止がする方法があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=67&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=68&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/20.html</guid><pubDate>Fri, 17 Jan 2020 07:31:33 +0900</pubDate></item><item><title>[C#] enum(列挙型)</title><link>https://www.nowonbun.com/19.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はenum(列挙型)について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿で「const」、「static」を勉強したことがあります。そのことを合わせて定義変数を作られることを知っています。&lt;/p&gt;&lt;p&gt;「enum」の場合は定義変数と似ている概念ですが、データの値より集計的な区別のため使うキーワードです。それで「enum」は値のとしての意味を持ってることよりプロセス制御のため使えるものです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;enum&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;改めていうと、enumは分岐の制御のために整数を集合的に定義するものです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=64&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「enum」は分岐制御の区別のために定義しています。上の型が一般的に「enum」を使う方法ですね。でも「enum」にも実際の整数を与えて設定するの方法もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=63&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「enum」のメンバに実際整数を格納して、プラグとして使っています。でも「enum」には上みたいに整数は格納できますが、実数、文字(列)は格納できません。&lt;/p&gt;&lt;p&gt;上の例は初めの例とにていますね。でも、前は「switch」文で分岐しましたが、今回は列挙変数「weak」を直接に出力しました。&lt;/p&gt;&lt;p&gt;２つ目の例とおりなら「０〜７」間の数字が出力すると予想になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=62&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果は予想と違いますね。結果を見ると「enum」のメンバ名ままで出力しました。それで前の例と今回の例と比較すれば列挙型の上をみるとアトリビュート「flags」が付けていることを確認できます。&lt;/p&gt;&lt;p&gt;「flags」のアトリビュートは「tostring」で出力する時にアトリビュート「flags」がなければ整数値、アトリビュート「flags」が付けていると「enum」の変数名が出力します。&lt;/p&gt;&lt;p&gt;列挙変数「process」に値が「5」になることは予想できます。でも、列挙型のアトリビュートに「flags」が付けているので、変数名を出力しようとしますが、列挙メンバに「5」の値を持っているメンバがありません。この場合はビット演算子で計算したとおりに「type」、「type3」が出力します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=61&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/19.html</guid><pubDate>Fri, 17 Jan 2020 07:31:25 +0900</pubDate></item><item><title>[C#] struct(構造体)</title><link>https://www.nowonbun.com/18.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はstruct(構造体)について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;struct&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「struct」の意味的には「class(クラス)」と同じですね。すなわち、データを縛る最小単位です。&lt;/p&gt;&lt;p&gt;そうするとなぜ「class」と「struct」にキーワードを分けただろうかと言えばメモリ参照方法の差があります。&lt;/p&gt;&lt;p&gt;「class」の場合は外部でメモリに割り当ててメモリ参照タイプとして使いますが、「struct」の場合は宣言する時に「struct」内部でメモリに割り当てて値タイプとして使うの差があります。&lt;/p&gt;&lt;p&gt;上の例をみるとクラスの場合は「aclass」を宣言して「new」キーワードで割り当てます。&lt;/p&gt;&lt;p&gt;そして「aclass」の変数「data」に「10」の値を格納します。その後で「bclass」を宣言して「aclass」をメモリアドレスを代入します。&lt;/p&gt;&lt;p&gt;その後で「bclass」の変数「data」に「15」の値を格納すると「aclass」の変数「data」の値はどうでしょうか？&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前のクラスの投稿にも説明しましたが、上の場合は「aclass」と「bclass」が同じクラスを参照しているので両方「15」の値を持っていることを知っています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;./16.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 15] クラス(class)とコンストラクタ、そしてnew(割り当て)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると「astruct」と「bstruct」も同じパタンを考えれば両方の変数「data」が「15」になると思われますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=60&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果を見れば予想結果と違いますね。結果を見ると「aclass」と「bclass」は確かに同じメモリアドレスを入っていますが、「astruct」と「bstruct」の場合はメモリアドレスが違いますね。&lt;/p&gt;&lt;p&gt;すなわち「teststruct bstruct」を宣言する時に内部でメモリに割り当てて後「bstruct」に「astruct」の値をコピーしたと意味になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしたらこれから「struct」の使用方法について勉強してみましょう。&lt;/p&gt;&lt;p&gt;とりあえず、上の構造を見ると「struct」もコンストラクタがあります。構造体の場合もコンストラクタを呼び出すためには「new」キーワードを使います。その場合は内部からメモリが割り当てることではなく、クラスみたいに外部からメモリが割り当てます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、継承について勉強する前ですが、構造体はstructから継承ができません。(それで、プロパティを使いません。)&lt;/p&gt;&lt;p&gt;でも、インタフェースからは継承をできますね。この部分は継承とインタフェースを勉強するときに詳しく話しましょう。&lt;/p&gt;&lt;p&gt;「struct」の構成はメンバ変数とメソッドだけありますね。すなわち、クラスのイベント、プロパティは使えません。(「使いません」という意味は「できません」という意味と違います。クラスみたいにすべての構成を作成はできますけど、そうすると構造体の特徴がなくなります。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;構造体(struct)を纏めると下記とおりです。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;  &lt;ul&gt;   &lt;li&gt;宣言する時に自動で内部割り当てをします。&lt;/li&gt;   &lt;li&gt;宣言する時にメンバ変数のデータを入れないとエラーになります。&lt;/li&gt;   &lt;li&gt;構造体は基本的にoopの概念と違うのでイベント、プロパティは使いません。&lt;/li&gt;   &lt;li&gt;参照形式ではなく、値形式で構成しています。&lt;/li&gt;   &lt;li&gt;heapの宣言をすることではないので、「gc」から消滅されることではなく一般変数と同じサイクルを持ってブロックが終わると消滅されます。&lt;/li&gt;  &lt;/ul&gt;&lt;/blockquote&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/18.html</guid><pubDate>Fri, 17 Jan 2020 07:31:16 +0900</pubDate></item><item><title>[C#] static</title><link>https://www.nowonbun.com/17.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は「static」について勉強します。「static」は俗に静的キーワードと言います。「static」の種類は「staticメソッド」、「static変数」、「staticクラス」があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;staticメソッド&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今まで勉強したとおりならメソッドを使うためにはクラスを割り当てなければならないです。なぜなら、oopの最小単位はクラスだし、メソッドはクラスの内部に存在しているからです。&lt;/p&gt;&lt;p&gt;でもクラスとは関係なく、計算だけするメソッドが必要な時もあります。例えば、パラメタで「int」タイプデータを２つを受け取って、パラメタの数を足す計算だけするメソッドがあると思いましょう。そしてそのメソッドを使うためにクラスを割り当てる(new)ことはメモリが惜しい感じがしますね。&lt;/p&gt;&lt;p&gt;その時に「static」メソッドに実装すればクラスを割り当てずにメソッドを使うことができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=55&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「new」(割り当て)をしなくてメソッドを使います。そうすれば、staticメソッドからクラス内部のメンバ変数を使えるかと疑問になりますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=59&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 650px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上をみるとエラーが発生しますね。なぜなら「static」メソッドの場合はクラスを割り当てて使うものではなく静的領域なので、動的なクラスの部分に直接に参照ができないです。&lt;/p&gt;&lt;p&gt;でも、メソッドの中でクラスを割り当てたら使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=56&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;static変数&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;static変数は消されない変数だといいます。すなわち、クラスの変数はクラスが割り当てる時に変数の値が生成してクラスが解除する時に変数の値が無くなります。&lt;/p&gt;&lt;p&gt;でも、プロジェクトの中で唯一に宣言するし、解除が行わない変数も必要だと思いますね。その時に使う変数を「static」変数と言います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=58&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;staticクラス&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「staticクラス」はクラスの構成メンバがすべて構成が「static」になります。そしてstaticクラスの場合はコンストラクタをもってられません。&lt;/p&gt;&lt;p&gt;なぜなら、「staticクラス」は割り当て(new)られないので、コンストラクタが存在できません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=57&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/17.html</guid><pubDate>Fri, 17 Jan 2020 07:31:08 +0900</pubDate></item><item><title>[C#] 制御文 - ループ(for, while, do〜while, foreach)</title><link>https://www.nowonbun.com/11.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前の投稿で分岐に関して勉強しました。今日は引き続いて制御文のループに関して勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ループは単語のいみとおりに繰り返す処理ということです。ループの種類は「for」、「while」、「do〜while」、「foreach」の４つがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;for 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「for」文は初期化より終了条件が偽になるまで増減値を変換しながら繰り返す制御文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=36&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p&gt;例を見ると「i」の変数に「0」の値を初期して「i &amp;lt; 10」の条件をチェックします。結果が「真」になるので「console.writeline(i);」を実行します。文の処理が終わって増減式に行って「i」の値を増加(i = 1)します。&lt;/p&gt;&lt;p&gt;また「i &amp;lt; 10」の条件をチェックしてまた「真」になるので「console.writelist(i);」を実行します。そのままに「i」の値が「10」になるまで繰り返します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=30&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;while 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「while」文は条件式が真になる間に繰り返す制御文です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=34&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「while」文は「for」文の初期式と増減式が除いてるものです。上の例をみると「while」文には別に増減式がないので「i++」を除いたら無限ループ(ループが終わらない状態)になる可能性があるので気をつけてください。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=31&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;do〜while 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「do〜while」文は「while」と似ています。でも「while」は初めから条件式をチェックして繰り返しますが「do〜while」文は１回実行した後から条件式をチェックします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=32&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=29&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「do〜while」文は条件をチェックして文を実行することではなく文を実行してから条件を繰り返すかをチェックするものです。&lt;/p&gt;&lt;p&gt;上の例を見るとwhileの場合は「i &amp;lt; 0」の条件に満たさないので「console.writeline(&quot;while&quot; + i);」が実行されなかったです。&lt;/p&gt;&lt;p&gt;でも「do〜while」文の場合は「console.writeline(&quot;do while &quot; + i);」を１回に実行した後に条件文をチェックするので「do while 0」が出力されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実際にプロジェクトする時に「do〜while」文は一般ループと流れが違うから判断がつかないことが多く発生します。それで「do〜while」文を使うのはお勧めしません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;foreach 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;配列またはリストの個数のほどに繰り返します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=33&quot; data-filename=&quot;007.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「foreach」はデザインパタンの「iterator」パタンと関係があります。すなわち、配列の個数に繰り返しながら配列のデータを取り出して使えることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=35&quot; data-filename=&quot;008.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/11.html</guid><pubDate>Fri, 17 Jan 2020 07:30:07 +0900</pubDate></item><item><title>[C#] クラス(class)とコンストラクタ、そしてnew(割り当て)</title><link>https://www.nowonbun.com/16.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はクラスについて勉強します。プログラムを少しでも扱ったことがある方なら「クラス」について聞いたことがあると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;クラス(class)&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;クラスはoop(オブジェクト指向プログラム)の最小単位です。構成要素はメンバ変数、プロパティ、メソッド、イベントがあります。その中で我々は変数、プロパティ、メソッドについて勉強しました。イベントはデリゲートと関係がありまして少し後で勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;./7.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 6] 変数と定数&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;./15.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 14] プロパティ(property)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;./13.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 12] メソッド(関数)とvoid型&lt;/a&gt;&lt;/p&gt;&lt;p&gt;クラスの構成は上のとおりです。使用方法では「new」キーワードを使ってメモリに割り当て使います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;new&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「new」キーワードは配列を宣言する時に使ったことがあります。配列を宣言する時と同様にクラスの「new」もメモリに「割り当てをします」という意味です。&lt;/p&gt;&lt;p&gt;上の例を見ると割り当て演算子の区切りで「testclass test」「new testclass」に分けて考えて見ましょう。前の「testclass test」は変数と同様の意味でメモリアドレス(整数)が入ります。&lt;/p&gt;&lt;p&gt;「new testclass」の場合はメモリ(heap)に「testclass」を割り当てます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=53&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージとおりにクラスが宣言し割り当てたと思われます。すなわち、「test」変数は「heap」に「testclass」が割り当てたメモリアドレスがあると意味です。そして割り当てた「testclass」のデータを取得することはコンマ「.」の区切りで取得できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「test」変数名は「testclass」が割り当ててメモリアドレスが格納されたことは理解しました。そうすると「test」で割り当てたクラスの「data」変数にデータを格納して見ましょう。&lt;/p&gt;&lt;p&gt;上のソースを見るとクラスの構造の中で「data」のプロパティがありますが、読み専用になっています。でも,「setdata」のメソッドを見ると「&quot;test&quot;」の文字列を合成して「data」に格納するところがあります。そうするとメソッドを通って「data」に「data」の値を格納します。(合成されて「testdata」になる。)&lt;/p&gt;&lt;p&gt;そして「data」プロパティを通って「data」の値を出力して結果を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=49&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;予想とおりに結果を得られました。次からクラス参照について詳しく勉強してみましょう。&lt;/p&gt;&lt;p&gt;今回の例は前の例通りに「test」に「testclass」を割り当てます。そのあとで「test」の変数「data」に「data」を入力します。そして「test2」に「test」を代入し、「test2」の変数「data」に「clear」のデータを格納すれば「test」の変数「data」の値は何でしょうか？&lt;/p&gt;&lt;p&gt;ただ、基本的に考えると「test」の変数「data」の値は「data」、「test2」の変数「data」は「clear」になると思いますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=52&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも結果は両方「clear」になりました。なぜなら、初めに「test」に割り当ててメモリアドレスを「test2」を代入したからです。すなわち、クラス内のデータが複製して新しいクラスが割り当てたことではなく、同じクラスを見ていることの意味ですね。それで「test」と「test2」は割り当てた同じクラスを参照している結果になったことです。そしてメモリアドレス結果「gethashcode」を見ても「test」と「test2」のメモリアドレスは同じになっています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=54&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今回は「test」、「test2」に「new」をして割り当てて結果を確認してみましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=50&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;結果をみると「test」、「test2」は別にクラスを割り当てました。メモリアドレス「gethashcode」を確認してもクラスの変数「data」を見ても予想とおりに結果を得たことを確認しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;コンストラクタ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今までクラスを宣言して割り当てることまで勉強しました。上の例をみると「setdata」メソッドにデータを格納していますね。でも、メソッドを通って格納することではなく、クラスが割り当てるタイミングでデータを初期化したいという時もありえます。&lt;/p&gt;&lt;p&gt;それでクラスが割り当てる時に呼ばれるメソッドがありまして、それをコンストラクタといいます。&lt;/p&gt;&lt;p&gt;コンストラクタはメソッドと形態が似ていますが、返却値がないこととコンストラクタ名はクラス名と一致することで「クラス」と「コンストラクタ」を区別します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=51&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;予想とおりの結果を得られました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでクラスについて勉強しました。クラスはoopで大事な位置になっています。後からインタフェース、抽象クラス、継承などの概念は基本的にクラスから派生した意味です。それでこのクラスを確実に覚えば勉強がよく進められると思います。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/16.html</guid><pubDate>Fri, 17 Jan 2020 07:29:45 +0900</pubDate></item><item><title>[C#] プロパティ(property)</title><link>https://www.nowonbun.com/15.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はプロパティについて勉強します。前の投稿に「変数」について勉強しましたが、その中でメンバ変数が今日勉強するプロパティと関係があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;./7.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 6] 変数と定数&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;oop(オブジェクト指向プログラム)の特徴でカプセルがあります。クラスを宣言して使う立場ではクラスの変数とメソッドを参照制限にすることをカプセルと言います。この制限はプログラム的で実装禁止ではありませんが、コーディングの規約(プログラム実装の方法として決められた約束)によって決められています。&lt;/p&gt;&lt;p&gt;その規約の一つがクラスの「メンバ変数は「private」にする」、すなわち外部から参照禁止になっています。そうするとメンバ変数の値は外部で取得をどうするかといえばプロパティを通って取得します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=48&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例の「name」が基本的に使うプロパティの構造です。変数名が小文字で書いてるものをプロパティの変数名から語頭１桁を大文字に変換して書きます。&lt;/p&gt;&lt;p&gt;「name」のデータは外部で直接に参照できなくて、「name」のプロパティを通って取得できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;読み専用プロパティの場合は「set」部分を省略して作成します。それで「comp」プロパティは「comp」変数からデータを取得できますが、格納ができない状況になっています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;応用プロパティの場合は「string」タイプのデータを受け取ります。そして文字分け関数で文字列のデータを分けます。各「year」、「month」、「day」の変数に「int」型にて変換して格納します。&lt;/p&gt;&lt;p&gt;また、逆に外部から取得する時は「year」、「month」、「day」データを合わせて「string」タイプに変換して返却しています。外部で見るとプロパティは「birth」タイプしか見えない構造になっています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実際にプログラム実装する時はほとんど基本プロパティ型を使います。それで「.net framework 3.0」からはメンバ変数も省略が可能な形式があります。&lt;/p&gt;&lt;p&gt;今までプロパティについて勉強しました。でも、これだけではなぜプロパティを使うかを確かに認識ができません。プロパティの場合はただカプセルの理由だけではなく、継承、抽象等oopの特徴の部分と密接な関係があります。今はインタフェースや抽象クラスの概念がない状況では説明が難しいですね。とりあえず、上の形式で使い進んで、またインタフェース、抽象クラスチャプターで詳しく勉強しましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/15.html</guid><pubDate>Fri, 17 Jan 2020 07:29:35 +0900</pubDate></item><item><title>[C#] アクセス修飾子(public, private, protected)</title><link>https://www.nowonbun.com/14.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はアクセス修飾子について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;アクセス修飾子&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;アクセス修飾子はoopの基本特性のカプセル化と関係があります。&lt;/p&gt;&lt;p&gt;次の投稿のクラスについて勉強する時に詳しく説明すると思いますが、「c#」プログラミングはoop(オブジェクト指向プログラム)と呼びます。&lt;/p&gt;&lt;p&gt;そしてoopの最小の単位のオブジェクトはクラスです。そしてクラスの中には様々なデータがあります。&lt;/p&gt;&lt;p&gt;データを定義する時は見せても良いデータがありますが、隠さなければならないデータもあります。&lt;/p&gt;&lt;p&gt;それを区別しながら作成する方をカプセル化と言います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうすると、アクセス修飾子の種類は下記とおりです。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;アクセス修飾子&lt;/th&gt;    &lt;th&gt;内部クラス&lt;/th&gt;    &lt;th&gt;外部クラス&lt;/th&gt;    &lt;th&gt;派生クラス&lt;/th&gt;    &lt;th&gt;プロジェクト&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;    &lt;th&gt;public&lt;/th&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;○&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;th&gt;private&lt;/th&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;th&gt;protected&lt;/th&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;th&gt;internal&lt;/th&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;th&gt;protected internal&lt;/th&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;    &lt;td&gt;○&lt;/td&gt;    &lt;td&gt;&lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p&gt;上の例は実際にそのように実装するとダメですが、アクセス修飾子の説明ために作成しました。&lt;/p&gt;&lt;p&gt;とにかく、例を見ると「public」は変数「name」、「birth」、「year」、メソッド「setdata」が外部から見えます。逆に変数「year_birth」、「month_birth」、「day_birth」、メソッド「yearcalc」は「humen」クラスの構成より「year」を計算するためのデータなので外部から見せる必要がありません。&lt;/p&gt;&lt;p&gt;逆に考えてすべての変数、メソッドが「public」になって外部に見せることになるとクラスの処理には問題がないですが、プロジェクト管理するためには深刻な問題が発生する可能性があります。&lt;/p&gt;&lt;p&gt;なぜなら、ただ「name」、「birth」、「year」だけ見える時はクラスを知らない方が見てもユーザと関係があるクラスだと思いますが、すべてのデータが開けると意味がわからなくなります。&lt;/p&gt;&lt;p&gt;また、上の例は簡単なので処理問題では発生しないけれども複雑のプログラムなら処理中で計算データを変更させると結果データが可笑しく出る可能性があることです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=47&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/14.html</guid><pubDate>Fri, 17 Jan 2020 07:29:26 +0900</pubDate></item><item><title>[C#] メソッド(関数)とvoid型</title><link>https://www.nowonbun.com/13.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はc#のメソッドに関して勉強します。メソッドあるいは関数と呼ばれる機能は数学の関数(function)と同じ意味です。すなわち、関数に任意の数を入れると関数の式によって計算をされる数の値がでることになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=40&quot; data-filename=&quot;001.png&quot; style=&quot;width: 466px;&quot;&gt;&lt;/p&gt;&lt;p&gt;それなら、プログラムの関数の使用方法は下記のとおりです。&lt;/p&gt;&lt;p&gt;上の例で「static」のキーワードはとりあえず無視しましょう。例を説明すると「exammethod」、「exammethod」の関数があります。「exammethod」の場合は「10」のデータを入れると「10」倍になって「100」の値が返却すると思います。&lt;/p&gt;&lt;p&gt;「exammethod2」の場合は「10」、「20」のデータを入れると２つのデータが足すので「30」のデータが返却すると思いますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=41&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;メソッド(関数)は上の形態が基本ですが返却値が１つではなく２つ以上になるあるいはパラメタの個数が動的になる場合もあります。&lt;/p&gt;&lt;p&gt;上の関数の場合はパラメタ「b」は「a」の値の商、「c」には「a」の値の余のデータが返却し、メソッド(関数)は余が「0」の場合は「true」、その以外は「false」を返却します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=42&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;パラメタ個数が可変の場合は下記とおりです。&lt;/p&gt;&lt;p&gt;上の例はパラメタで受け取ったデータをすべて合計する関数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=43&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;void&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今まで我々は関数の返却値があるように作成しました。でも逆に返却値が必要ではない場合もありますね。例えも上の返却値が２つ以上の例を見ると関数返却値は余が「0」かどうかの値を返却しました。&lt;/p&gt;&lt;p&gt;でも、「0」かどうかの値は要らずに商と余だけ返却したい時があると思いますね。その場合は返却値に「void」のキーワードを書いて「返却をしない」というを明示します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=44&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今までメソッド(関数)の方法にかんして勉強しました。メソッド(関数)のことは数学のファンクションみたいに結果値に置換ができます。それなら数学の数列という数の並びがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;たとえば「1」から「10」の合計はどうすればいうと数式に変換すると「1+2+3+4+5+6+7+8+9+10」になります。「10」の「1」を足すの等差数列を分析すると「9」の「1」を足すの等差数列+「10」に表現ができますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;すなわち「n」の「1」を足すの等差数列は(n-1)の「1」を足すの等差数列に表現ができます。&lt;/p&gt;&lt;p&gt;そのとおりに「1」の等差数列は「1」になりますね。それをプログラムで実装すると下記とおりです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=45&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると「sumlist」の関数の中で「sumlist」を呼び出しています。そのように自分が自分を呼び出すことをプログラムには「再帰関数」と呼びます。&lt;/p&gt;&lt;p&gt;でも実際にプログラムを作る時に再帰関数はよく使えません。性能問題もあるしstackoverflowが発生する可能性があるからです。できれば「for」文で実装できれば、「for」文のほうで作成するほうが良いと思います。&lt;/p&gt;&lt;p&gt;逆に再帰関数はアルゴリズム的に使う場合があるので、状況をみてループがよいか再帰関数がよいかを判断して使ってください。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=46&quot; data-filename=&quot;007.jpg&quot; style=&quot;width: 555px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/13.html</guid><pubDate>Fri, 17 Jan 2020 07:29:17 +0900</pubDate></item><item><title>[C#] 制御文 - ループ分岐(break, continue)</title><link>https://www.nowonbun.com/12.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は制御文の最後のループ分岐に関して勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々がプログラムロジックを作成すると無限ループを作る時があります。でも本当に無限になるとプログラムが終わらないのでループの中で止まること、すなわち分岐ループが必要です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;break 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「break」はループ制御を抜け出す時に使う制御文です。&lt;/p&gt;&lt;p&gt;上の式を見ると「while」文は条件式がいつも「真」(true)になるので無限ループになります。でも、文の中で「if」によって「i」が「10」になると「break」文を呼ばれて無限ループから抜け出します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=38&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ループを強制的に抜け出すのは「break」になります。でも抜け出すことではなく、ループ文を終わらせずに次のインデックスに行くケースもあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;contineu 文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「continue」はループ制御の次のインデックスに飛び超える制御です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=39&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると別に「break」、「continue」を使わなくても「if」文だけで処理ができそうですね。でも「break」、「continue」をよく使うとソースが綺麗になるのでループの中には状態をよくみて使うほうが良いと思います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=37&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/12.html</guid><pubDate>Fri, 17 Jan 2020 07:29:06 +0900</pubDate></item><item><title>[C#] 制御文 - 分岐 (if, switch〜case, goto)</title><link>https://www.nowonbun.com/10.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日からは制御文を勉強します。プログラムの制御文はc#だけではなく、c言語やjavaと同じです。そしてその中で制御文は大きく３つの形で分けます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムの流れで何の項目を選んで流すかを決める分岐制御、特定ブロックの流れを繰り返すループ、ループの流れを分岐するループ分岐があります。&lt;/p&gt;&lt;p&gt;その中で今日は分岐(if, switch〜case, goto)を勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;if〜else if〜else文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;if〜else if〜else文は真、偽によって処理する制御文です。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=28&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を説明すると変数「a」の値は「5」なので一つ目の分岐では「else if(a &amp;gt; 0)」を通って「console.writeline(&quot;文２&quot;);」になります。&lt;/p&gt;&lt;p&gt;次の変数「b」の場合は「true」だから「if」の条件を満たします。それで「console.writeline(&quot;文４&quot;);」に実行されます。&lt;/p&gt;&lt;p&gt;最後も「if」条件を満たすので「console.writeline(&quot;文６&quot;);」を実行します。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=26&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;switch文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「switch」は制御条件値が間に合うところを処理するマルチ制御文です。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=27&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 450px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例を見ると変数「a」は「5」の値が格納されています。それで「switch」の「case 5」を通って「console.writeline(&quot;文１&quot;);」を実行します。&lt;/p&gt;&lt;p&gt;c#の「switch」文は他の言語と違うところがあります。それはc++、javaの場合は「switch〜case」に行って「break」を付けないことができます。「break」がなければ次の文に実行する処理になるがc#の場合はこの「case」の後に「break」が必須キーワードなので「break」を利用して次の段階に行く処理がありません。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=24&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;goto文&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「goto」文はラベルの部分に強制的に移動する制御文です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして「goto」文はプログラムの中で使わない制御文です。なぜならプログラムの中で「goto」文が多いなら性能(パフォーマンス)が悪くなるし、後でソース管理が大変になるからです。参考してください。&lt;/p&gt;&lt;p&gt;上の例を見ると実行中で「goto test」文にあうと「test」ラベルに移動ます。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=25&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今日は制御文の分岐に関して勉強しました。その中で「if」の場合はプログラムで一番多く使う制御なのでよく覚えて行きましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/10.html</guid><pubDate>Fri, 17 Jan 2020 07:28:47 +0900</pubDate></item><item><title>[C#] 演算子</title><link>https://www.nowonbun.com/9.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はプログラムの演算子について勉強します。&lt;/p&gt;&lt;p&gt;プログラムは演算子が数学らしい数式の演算子があるし、その以外に論理演算子、条件演算子などもあります。&lt;/p&gt;&lt;p&gt;演算子に関することは下記の表と例を参考して詳しく説明します。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;演算子タイプ&lt;/th&gt;                &lt;th&gt;演算子&lt;/th&gt;                                &lt;th&gt;例&lt;/th&gt;            &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;                &lt;td&gt;数式演算子&lt;/td&gt;                &lt;td&gt;+, -, *, /, %&lt;/td&gt;                                &lt;td&gt;int a = (x + y - z) * (b / c) % d;&lt;/td&gt;                            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;割当演算子&lt;/td&gt;                &lt;td&gt;=, +=, -=, *=, /=, %=&lt;/td&gt;                &lt;td&gt;int a = 100;&lt;br&gt;sum += a;&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;増加/減少演算子&lt;/td&gt;                &lt;td&gt;++, --&lt;/td&gt;                &lt;td&gt;int i = 1;&lt;br&gt;i++;&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;論理演算子&lt;/td&gt;                &lt;td&gt;&amp;amp;&amp;amp; (and), || (or), ! (not)&lt;/td&gt;                &lt;td&gt;if ((a &amp;gt; 1 &amp;amp;&amp;amp; b &amp;lt; 0) || c == 1 || !d)&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;関係/比較演算子&lt;/td&gt;                &lt;td&gt;&amp;lt;, &amp;gt;, ==, !=, &amp;gt;=, &amp;lt;=&lt;/td&gt;                &lt;td&gt;if (a &amp;lt;= b)&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;ビット演算子&lt;/td&gt;                &lt;td&gt;&amp;amp; (and), | (or), ^ (xor)&lt;/td&gt;                &lt;td&gt;byte a=7;&lt;br&gt;byte b=(a &amp;amp; 3) | 4;&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;シフト演算子&lt;/td&gt;                &lt;td&gt;&amp;gt;&amp;gt;, &amp;lt;&amp;lt;&lt;/td&gt;                &lt;td&gt;int i=8;&lt;br&gt;i = i &amp;lt;&amp;lt; 5;&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;条件演算子&lt;/td&gt;                &lt;td&gt;?&lt;br&gt;?? (c# 3.0以上だけ)&lt;/td&gt;                &lt;td&gt;int val = (a &amp;gt; b) ? a : b;&lt;br&gt;string s = str ?? &quot;(null)&quot;;&lt;/td&gt;            &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=23&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;c#は「null-coalescing operation」という演算子があります。記号は「??」の形で使います。&lt;/p&gt;&lt;p&gt;「null-coalescing operation」は簡単にいうと「null」をチェックする演算子です。「??」の左の被演算子の値が「null」の場合に右の被演算子を返却するし、「null」ではない場合はそのままに左の被演算子を返却します。&lt;/p&gt;&lt;p&gt;下記の例を参考してください。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=22&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/9.html</guid><pubDate>Fri, 17 Jan 2020 07:28:36 +0900</pubDate></item><item><title>[C#] 配列とリスト(List)、 そしてArrayList</title><link>https://www.nowonbun.com/8.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は配列について勉強します。我々がプログラムを作成すれば変数宣言をたくさんすると思います。&lt;/p&gt;&lt;p&gt;例えば、１ヶ月のスケジュールのプログラムを作成すると思えば１ヶ月間のデータを格納する変数が必要だと思います。&lt;/p&gt;&lt;p&gt;さらに考えると、１ヶ月ではなく１年分だと思うと365個の変数が必要です。そうするとソース管理が大変になると思います。それでその場合は同じタイプの変数を結んで配列に作ります。&lt;/p&gt;&lt;p&gt;配列の仕様方法については下記のとおりになります。&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=21&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の列例を見ると整数タイプの「int」系で「test」の変数に10個を宣言すると意味になります。&lt;/p&gt;&lt;p&gt;配列は「0」番から始まって10個なので、「9」番までメモリに宣言されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;もし「10」番以上にデータを入れるとエラーになります。&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=20&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;こんなみたいに配列を使う場合、何個を使うかを決めて宣言します。プログラム設計によって違うと思いますが、プログラムで変数を何個を使うか知らないケースもあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その場合にできるほど、大きく配列を宣言するのはできないので、動的の配列、すなわちリストを使います。&lt;/p&gt;&lt;p&gt;c#ではlistはクラス形態なので仕様方法は、下記とおりになります。&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=19&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;配列を比べてリストは個数宣言が必要なく使います。でも今回は個数でけではなくデータタイプも知らないケースがあります。&lt;/p&gt;&lt;p&gt;その場合はlist&amp;lt;object&amp;gt;を使っても良いですが、クラスとしてはarraylistがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=18&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで配列、リスト(list)、arraylistについて勉強しました。&lt;/p&gt;&lt;p&gt;機能だけ見るとarraylistが使いやすいし、配列は厳しそうですね。それならarraylistだけ使えばいいと思いになりますが、配列とarraylistの差は利便性だけではなく、性能(パフォーマンス)も差があります。&lt;/p&gt;&lt;p&gt;リスト、arraylistはクラスタイプなので構造体の配列より遅くなります。(配列リストの場合は再宣言、連携リストの場合は検索)データ処理量が少なければ何でも使っても構わないですが、大量のデータの場合はどんなタイプを使うかのことで実行速度の差が発生します。&lt;/p&gt;&lt;p&gt;それで正確に使うのがプログラム品質のため良いと思います。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/8.html</guid><pubDate>Fri, 17 Jan 2020 07:27:52 +0900</pubDate></item><item><title>[C#] 変数と定数</title><link>https://www.nowonbun.com/7.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日は変数と定数、すなわちメモリにデータを格納する場所について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを作成して、様々な数を計算すると結果の値を何処か格納して保管する必要があります。&lt;/p&gt;&lt;p&gt;そのため、プログラムを下記の形式で作成しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img style=&quot;width: 600px;&quot; src=&quot;./getattachfile.ajax?idx=14&quot; data-filename=&quot;001.jpg&quot;&gt;&lt;/p&gt;&lt;p&gt;上のことを見ると変数はメモリに格納する場所になることは分かりました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それならプログラムの設計によってデータが変わらないデータもある可能性がありますね。&lt;/p&gt;&lt;p&gt;その時に変数宣言する仕方で「const」をつけると変わらない変数、すなわち定数になります。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img style=&quot;width: 600px;&quot; src=&quot;./getattachfile.ajax?idx=17&quot; data-filename=&quot;002.jpg&quot;&gt;&lt;/p&gt;&lt;p&gt;変数の場合は宣言する場所によって変数の使用方法が変わります。&lt;/p&gt;&lt;p&gt;メンバ変数の場合はクラスが生成する時に生成されてクラスが解除する時に解除します。ローカルの場合はローカルブロックが閉じる時に解除します。&lt;/p&gt;&lt;p&gt;この変数のcycleはクラスを勉強する時に詳しく勉強するので、今は使う仕方だけちゃんと覚えて行きましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/7.html</guid><pubDate>Fri, 17 Jan 2020 07:27:39 +0900</pubDate></item><item><title>[C#] データタイプとリテラル(literal)、 Nullable</title><link>https://www.nowonbun.com/6.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;今日はデータタイプとリテラル(literal)、nullableについて勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;とりあえず、データタイプについて説明します。&lt;/p&gt;&lt;p&gt;我々がパソコンでプログラムを作ることは大きい計算機を作ることだと思うと良いです。利用の目的は差異があると思いますが、ゲーム、デザインツール、バッチプログラムなども内部を見ると結局に数の計算になっています。&lt;/p&gt;&lt;p&gt;人間は整数、実数の区別せずに計算ができますが、パソコンの場合は整数、実数、文字が完全に分けてあります。それをデータタイプと命名してメモリを宣言する時に定義します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうするとデータタイプ種類と説明に下記に記述します。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;c#データタイプ&lt;/th&gt;    &lt;th&gt;.netデータタイプ&lt;/th&gt;    &lt;th&gt;説明&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;    &lt;td&gt;bool&lt;/td&gt;    &lt;td&gt;system.boolean&lt;/td&gt;    &lt;td&gt;true or false&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;                &lt;td&gt;byte&lt;/td&gt;                &lt;td&gt;system.byte&lt;/td&gt;                &lt;td&gt;8ビットunsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;sbyte&lt;/td&gt;                &lt;td&gt;system.sbyte&lt;/td&gt;                &lt;td&gt;8ビットsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;short&lt;/td&gt;                &lt;td&gt;system.int16&lt;/td&gt;                &lt;td&gt;16ビットsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;int&lt;/td&gt;                &lt;td&gt;system.int32&lt;/td&gt;                &lt;td&gt;32ビットsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;long&lt;/td&gt;                &lt;td&gt;system.int64&lt;/td&gt;                &lt;td&gt;64ビットsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;ushort&lt;/td&gt;                &lt;td&gt;system.uint16&lt;/td&gt;                &lt;td&gt;16ビットunsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;uint&lt;/td&gt;                &lt;td&gt;system.uint32&lt;/td&gt;                &lt;td&gt;32ビットunsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;ulong&lt;/td&gt;                &lt;td&gt;system.uint64&lt;/td&gt;                &lt;td&gt;64ビットunsigned integer&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;float&lt;/td&gt;                &lt;td&gt;system.single&lt;/td&gt;                &lt;td&gt;32ビットsingle precision浮動小数点数&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;double&lt;/td&gt;                &lt;td&gt;system.double&lt;/td&gt;                &lt;td&gt;64ビットdouble precision浮動小数点数&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;decimal&lt;/td&gt;                &lt;td&gt;system.decimal&lt;/td&gt;                &lt;td&gt;128ビットdecimal&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;char&lt;/td&gt;                &lt;td&gt;system.char&lt;/td&gt;                &lt;td&gt;16ビットユニコード文字&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;string&lt;/td&gt;                &lt;td&gt;system.string&lt;/td&gt;                &lt;td&gt;ユニコード文字列&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;&lt;/td&gt;                &lt;td&gt;system.datetime&lt;/td&gt;                &lt;td&gt;時間&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;object&lt;/td&gt;                &lt;td&gt;system.object&lt;/td&gt;                &lt;td&gt;すべての親タイプ&lt;/td&gt;            &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=11&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 700px;&quot;&gt;&lt;/p&gt;&lt;p&gt;簡単に例を作成してみましたが、データタイプはデータを扱う部分の全てのところで使っています。すなわち、変数宣言、メソッド返却、パラメターなどがありますね。&lt;/p&gt;&lt;p&gt;変数でデータタイプの宣言する部分を見ると「double b = 0.0;」の部分があります。その部分は間違ってないけど、実数のデータタイプは「double」以外に「float」もありますね。&lt;/p&gt;&lt;p&gt;宣言すると「double」系の場合は「double b = 0.0;」は良いけど、「float c = 0.0;」はエラーになりますね。&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=10&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 818px;&quot;&gt;&lt;/p&gt;&lt;p&gt;コードで「0.0」は「double」系に認識するので、データタイプが合わないエラーが発生します。&lt;/p&gt;&lt;p&gt;そうすると、「flaot」系の宣言はどうふうに使うかと見ると「0.0」の語尾に「f」を付けます。それをリテラル(literal)と言います。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;c#リテラルデータタイプ&lt;/th&gt;    &lt;th&gt;suffix&lt;/th&gt;    &lt;th&gt;例&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;                &lt;td&gt;long&lt;/td&gt;                &lt;td&gt;l&lt;/td&gt;                                &lt;td&gt;1024l&lt;/td&gt;                            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;uint&lt;/td&gt;                &lt;td&gt;u&lt;/td&gt;                &lt;td&gt;1024u&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;ulong&lt;/td&gt;                &lt;td&gt;ul&lt;/td&gt;                &lt;td&gt;1024ul&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;float&lt;/td&gt;                &lt;td&gt;f&lt;/td&gt;                &lt;td&gt;10.24f&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;double&lt;/td&gt;                &lt;td&gt;d&lt;/td&gt;                &lt;td&gt;10.24dまたは10.24&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;decimal&lt;/td&gt;                &lt;td&gt;m&lt;/td&gt;                &lt;td&gt;10.24m&lt;/td&gt;            &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p&gt;メモリには基本的にデータがアリ、ナシが存在します。そのことでデータがなしという意味はプログラム的に「null」(ヌル)と呼びます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でもc#は基本データタイプにはnullを許しません。int(整数データタイプ)の場合は「int a;」に宣言すると基本値「0」が設定します。でもこの基本設定値が問題になるケースがあります。&lt;/p&gt;&lt;p&gt;「0」のことも値として使う場合は変数の初期化して格納された値か計算して格納された値かを判断できないです。その場合に初期化の値を「null」に設定して、変数の状態を「null」か「0」かのことで判断できます。&lt;/p&gt;&lt;p&gt;データタイプに「null」を許されるのはデータタイプの語尾に「?」を付けて「null」を宣言することです。&lt;/p&gt;&lt;p&gt;今までデータタイプについて勉強しました。特にデータタイプとリテラルの場合はc#ではなく、c言語、javaにと同じ形式で使っていますね。&lt;/p&gt;&lt;p&gt;データタイプとリテラルはプログラム開発の中で大切な部分なのでちゃんと覚えていきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/6.html</guid><pubDate>Fri, 17 Jan 2020 07:27:28 +0900</pubDate></item><item><title>[C#] コメント</title><link>https://www.nowonbun.com/5.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;前の投稿でプログラムの基本構造について勉強しました。そう見るとアセンブラーよりは読みやすいですが、人間が読みやすいには言えません。&lt;/p&gt;&lt;p&gt;簡単なプログラムなら解読するのが大変ではないけど、複雑度が上がるとコードを読むのがだんだん大変になると思いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それでプログラムをコーディング式ではなく、人が読みやすい方法でコメントがあります。&lt;/p&gt;&lt;p&gt;プログラム中でコメントを付ける方法は３つがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;改行タイプのコメントです。使用方法は改行頭に「//」を付けて使います。&lt;/p&gt;&lt;p&gt;次はブロックタイプのコメントがあります。使用方法は下記とおりです。&lt;/p&gt;&lt;p&gt;ブロックタイプのコメントは重複処理ができないので、使用するときに注意が必要です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最後にxmlコメントがあります。xmlコメントはプロジェクトが終了する時にxmlコメントでマニュアルを生成できるコメントです。javaの場合はjavadocと同じコメントです。&lt;/p&gt;&lt;p&gt;(でも実際にxmlコメントでマニュアルまで生成しません。機能としてはありますが…)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;使用方法はclass頭あるいはmethod頭で「///」を付けて使います。&lt;/p&gt;&lt;p&gt;xmlコメントの場合各タグがあって、タグ別で説明する区切りがあります。下記の表を参考してください。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;xmlコメントタグ&lt;/th&gt;    &lt;th&gt;説明&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;    &lt;td&gt;summary&lt;/td&gt;    &lt;td&gt;形式あるいは形式メンバ設定&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;remarks&lt;/td&gt;    &lt;td&gt;詳細な説明&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;para&lt;/td&gt;    &lt;td&gt;remarksの追加説明&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;value&lt;/td&gt;    &lt;td&gt;プロパティの説明&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;example&lt;/td&gt;    &lt;td&gt;使用例&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;list&lt;/td&gt;    &lt;td&gt;リストとテーブル生成&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;code&lt;/td&gt;    &lt;td&gt;何行目のコードで表示する時に使用&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;see&lt;/td&gt;    &lt;td&gt;テキスト内部のリンク指定&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;seealso&lt;/td&gt;    &lt;td&gt;参考部分に表せるテキスト指定&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;exception&lt;/td&gt;    &lt;td&gt;例外説明&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;permision&lt;/td&gt;    &lt;td&gt;接近権限説明&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;param&lt;/td&gt;    &lt;td&gt;メソッドのパラメター説明&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;return&lt;/td&gt;    &lt;td&gt;返却値を説明&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;c&lt;/td&gt;    &lt;td&gt;説明中で含めているコード&lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p&gt;プロジェクトを進める時に簡単なプログラムは一人で作成できますが、普通のプロジェクトならチームを組んで進めると思います。その時にメンバ間にコミュニケーションが合わないとプロジェクトがうまく進めると思わないですね。&lt;/p&gt;&lt;p&gt;また、プロジェクトが完了できて、数月を過ぎて後にバージョンアップがあることやバグが発生してメンテが必要な時にソース内容を覚えると問題がないですが、逆に仕様を忘れてしまうケースがありますね。&lt;/p&gt;&lt;p&gt;そのためにxmlコメントを利用してプロジェクトあるいはクラス、メソッドの説明を書いておいて、コミュニケーション、メンテ、仕様整理する時に利用すると良いと思います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=9&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 660px;&quot;&gt;&lt;/p&gt;&lt;p&gt;xmlコメント以外に改行コメント、ブロックコメントはc#ではなく、c言語、javaにも同じ形式で使えますね。コメントはプログラムの勉強を始まる時に学ぶ重要な部分なのでちゃんと覚えていきましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/5.html</guid><pubDate>Fri, 17 Jan 2020 07:27:17 +0900</pubDate></item><item><title>[C#]  基本構造と「Hello world」</title><link>https://www.nowonbun.com/4.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;今日からc#の基本文法について勉強します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それならvisualstudioを起動して新しいプロジェクト(ctrl+shift+n)を生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=8&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 700px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうすれば下記とおりに画面が出ますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=7&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 795px;&quot;&gt;&lt;/p&gt;&lt;p&gt;テンプレート項目で「コンソールアプリケーション」というリストを選択します。その後で「名前」項目にプロジェクト名を書き込みます。(私の場合はhelloworldということに書き込みました。)&lt;/p&gt;&lt;p&gt;そして「ok」ボタンを押下して新しいプロジェクトを生成します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=6&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 795px;&quot;&gt;&lt;/p&gt;&lt;p&gt;新しいプロジェクトが開けると基本的なプログラムの構造は準備しています。次の投稿から具体的に勉強するので、今日は一旦「namespace」の中で「class」の中で「main」のメソッドにコードを書き込んで作業します。&lt;/p&gt;&lt;p&gt;これから「helloworld」を出力しましょう。&lt;/p&gt;&lt;p&gt;c#でコンソール関連クラスは「console」のクラスです。その中で出力するメソッドは「write」あるいは「writeline」のメソッドを利用します。&lt;/p&gt;&lt;p&gt;その通りにコーディングをすると下記みたいになります。&lt;/p&gt;&lt;p&gt;ソースコーディングが作成できたら「f5」キーを押下してデバックをしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=5&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 676px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果は予想とおりに得ました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ちなみにコーディングについて説明します。コーディング内容を見ると行の最後にセミコロン(;)があります。それはブロックを開閉表示(｛、｝)以外にソース命令語が終了する時にセミコロンをつけることでコーディング約束が決めています。初心者の場合はセミコロンの漏れでコンパイルエラーが発生する時があるのでご注意してください。&lt;/p&gt;&lt;p&gt;また、上のソースを見ると最後に「console.writeline(“press any key…”); consolre.readlist();」の部分があります。&lt;/p&gt;&lt;p&gt;その部分を消して実行(f5)するとあっというまで結果コンソールが開いて閉じます。それならソース実行結果を確認できないのでしばらくにはソースを組む時にその2行ソースを追加しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで「helloworld」を出力しましたが、考えよりプログラムが簡単に作成できましたよね。c#の利点は初心者も簡単にしやすくプログラムを作成できるし開発進入壁が低いことです。&lt;/p&gt;&lt;p&gt;でもどんな言語でも開発が複雑になると言語の特徴を100％に活かせる必要がありますので勉強が必要です。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/4.html</guid><pubDate>Fri, 17 Jan 2020 07:27:07 +0900</pubDate></item><item><title>[C#] IDE(統合開発環境)のインストール</title><link>https://www.nowonbun.com/3.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日はc#開発環境を構築します。c#を開発するようにはmicrosoftのvisual studioが必要です。&lt;/p&gt;&lt;p&gt;visual studioは昔には高いツールだったんでしたが、最近はcommunityバージョンで無料で提供しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;url - &lt;a href=&quot;https://visualstudio.microsoft.com/ja/vs/&quot; target=&quot;_blank&quot;&gt;visual studio download&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;現在(2019年7月)は上のurlで接続して下記の形のホームページが出ます。実際にホームページを見ると様々なダウンロードボタンがありますが我々は「community」バージョンをダウンロードして勉強します。&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=4&quot; data-filename=&quot;001.png&quot; style=&quot;width: 818px;&quot;&gt;&lt;/p&gt;&lt;p&gt;さて、インストールファイルをダウンロードが完了し実行するとインストールが始まりますね。&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=3&quot; data-filename=&quot;002.png&quot; style=&quot;width: 818px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=2&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 818px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストールが完了したらvisualstudioを実行してみましょう。&lt;/p&gt;&lt;p&gt;始めに実行すると「初期のemailアドレスを入力して登録してください。」という意味のメッセージが出ます。既存にmicrosoftのホームページに接続してログインしたemailのアドレスを入力してemailから認証番号をもらいます。&lt;/p&gt;&lt;p&gt;もし、登録してないならmicrosoftホームページに行って登録してください。(私の場合は既存に登録したので手続きは省略します。)&lt;/p&gt;&lt;p&gt;認証番号登録が完了すると下記のとおりにメッセージが出て次の段階に超えます。&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=1&quot; data-filename=&quot;004.png&quot; style=&quot;width: 770px;&quot;&gt;&lt;/p&gt;&lt;p&gt;最終に上の画面が出ますとインストールが成功です。&lt;/p&gt;&lt;p&gt;ここまでc#の開発準備を完了しました。次の投稿ではc#のプログラム基本構造を勉強し、「helloworld」を出力しましょう。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/3.html</guid><pubDate>Fri, 17 Jan 2020 07:26:45 +0900</pubDate></item><item><title>[C#] C#とは？</title><link>https://www.nowonbun.com/2.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;今日はc#を勉強する前にc#について説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラム言語はc、c++、java、c#など様々な言語があります。&lt;/p&gt;&lt;p&gt;言語の誕生時期はc言語が一番早いし、次はmicrosoftからウィンドウ開発をしやすくするc++（mfc）、プログラムについて少しでも勉強したら聞いたかも知らない言語のjava、その次がこれから勉強しようと思うc#の順になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;誕生時期を見るとc#は上の4つの言語の中で最後になりますが、最後に誕生したから一番いい言語では思わられませんね。プログラム言語は各特徴があり、開発状況のたびに使う方法が違うと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;各言語について簡単に説明するとc言語の場合はハードウェア系とos系(カーネル)、ドライバー系で主に使うし、c++(mfc)はグラフィック系またはc#で実装が大変な部分、c#よりメモリ管理が厳しい環境で使いますね。&lt;/p&gt;&lt;p&gt;javaの場合はネットワークのウェブ系、アンドロイドモバイル系で使うし、c#はネットワークサーバクライアントウィンドウ（cs)系でよく使います。機能として使うところはそのとおりですが、プロジェクトの予算、環境などの影響でウィンドウプログラムをjavaで開発するし、c++とc#を混在して使う時もあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;c#は.net frameworkの上で動いています。.netframeworkはウィンドウosしかないのでlinuxやウィンドウ以外の環境では開発ができません。&lt;/p&gt;&lt;p&gt;現在(2016年5月).netframeworkのバージョンは4.6まで発表してc#のバージョンは6.0まで発表しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;c#のバージョン別で説明すると下記のとおりになります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt; &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;  &lt;thead&gt;   &lt;tr&gt;    &lt;th&gt;c# バージョン&lt;/th&gt;    &lt;th&gt;重要機能&lt;/th&gt;   &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;   &lt;tr&gt;    &lt;td&gt;c# 2.0&lt;/td&gt;    &lt;td&gt;     &lt;ul&gt;      &lt;li&gt;c# generics&lt;/li&gt;      &lt;li&gt;anonymous method (匿名メソッド)&lt;/li&gt;      &lt;li&gt;nullable type&lt;/li&gt;      &lt;li&gt;partial type&lt;/li&gt;      &lt;li&gt;c# yieldキーワード&lt;/li&gt;      &lt;li&gt;delegateについてcovariance/contravariance&lt;/li&gt;     &lt;/ul&gt;    &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;c# 3.0&lt;/td&gt;    &lt;td&gt;     &lt;ul&gt;      &lt;li&gt;lambda expression (ラムダ)&lt;/li&gt;      &lt;li&gt;anonymous type (匿名タイプ)&lt;/li&gt;      &lt;li&gt;extension method (拡張メソッド)&lt;/li&gt;      &lt;li&gt;c# var キーワード (implicit type)&lt;/li&gt;      &lt;li&gt;linq&lt;/li&gt;      &lt;li&gt;expression tree&lt;/li&gt;     &lt;/ul&gt;    &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;c# 4.0&lt;/td&gt;    &lt;td&gt;     &lt;ul&gt;      &lt;li&gt;c# dynamic (late binding)&lt;/li&gt;      &lt;li&gt;named argument&lt;/li&gt;      &lt;li&gt;optional argument&lt;/li&gt;      &lt;li&gt;indexed property&lt;/li&gt;     &lt;/ul&gt;    &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;c# 5.0&lt;/td&gt;    &lt;td&gt;     &lt;ul&gt;      &lt;li&gt;c# async / await&lt;/li&gt;      &lt;li&gt;caller information&lt;/li&gt;     &lt;/ul&gt;    &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;c# 6.0&lt;/td&gt;    &lt;td&gt;     &lt;ul&gt;      &lt;li&gt;null-conditional operator(null条件演算子)&lt;/li&gt;      &lt;li&gt;string interpolation(文字列挿入機能)&lt;/li&gt;      &lt;li&gt;dictionary initializer&lt;/li&gt;      &lt;li&gt;nameof 演算子&lt;/li&gt;      &lt;li&gt;using static 文&lt;/li&gt;      &lt;li&gt;catch/finally のブロックでawait 使用&lt;/li&gt;      &lt;li&gt;exception filter 支援&lt;/li&gt;      &lt;li&gt;auto-property initializer(自動プロパティー初期化)&lt;/li&gt;      &lt;li&gt;getter only(読み専用プロパティ)&lt;/li&gt;      &lt;li&gt;expression-bodied member 使用&lt;/li&gt;      &lt;li&gt;構造体基本コンストラクタ&lt;/li&gt;     &lt;/ul&gt;    &lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;p&gt;これからはc#について勉強すると思いますが、流れとしては初めに基本文法からバージョン別文法、コーディング規約をして後はデータ処理、ウィンドウ開発、ネットワーク開発など順に投稿すると思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;予定のことを見ると面白そうですね。(笑）もし間違い部分、日本語がおかしい部分があれば指摘をお願いします。&lt;/p&gt;</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/2.html</guid><pubDate>Fri, 17 Jan 2020 07:26:34 +0900</pubDate></item><item><title>[PHP] $_SERVER, $GLOBALS, $_GET, $_POST, $_REQUEST, $_COOKIE, $_SESSION, $_FILES, $_ENV(getenv())</title><link>https://www.nowonbun.com/145.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpのはウェブスクリプト言語です。ウェブサービスを立ち上がってウェブブラウザと連携すれば様々な情報をブラウザから受け取ります。&lt;/p&gt;&lt;p&gt;例えば、ウェブサービスの環境情報やブラウザからのrequest情報、セッション、クッキーなどの情報がありますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それをphpは「$_server, $globals, $_get, $_post, $_request, $_cookie, $_session, $_files, $_env(getenv())」の変数でサーバとクライアント間で発生した情報を取得するのができます。&lt;/p&gt;&lt;p&gt;上の変数を理解するようにはウェブ環境の理解が少し必要です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブとは簡単に考えるとウェブサーバとブラウザ間で非同期通信するプログラムです。ブラウザからurlのアドレスでウェブページをサーバに要請(request)するとサーバの場合はその要請によってhtmlファイルを作成してブラウザに応答(response)します。&lt;/p&gt;&lt;p&gt;すごくシンプルな形式でその以外のファイルはファイルサーバみたいにイメージやjavascriptファイル(.js)、style sheetファイル(.css)をダウンロードして、ブラウザで動作するし(javascript)、デザインを描画(styel sheet)、イメージを表示するなどの動作します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ブラウザからウェブサーバに要請するタイプは２つがあります。それはget方式とpost方式があります。getの場合はブラウザのurlの中でクエスチョンマークの区切りでデータをurlに付けサーバに要請するタイプです。&lt;/p&gt;&lt;p&gt;postの場合はデータをプロトコールのヘッダに含めて要請するタイプですね。&lt;/p&gt;&lt;p&gt;各サーバとブラウザにはプログラム実行中でデータを格納して使っていますが、ブラウザ側でデータを持っていることをクッキー(cookie)というし、サーバ側にデータを持っているのはセッション(session)といいます。&lt;/p&gt;&lt;p&gt;しかしブラウザ単位でどのセッションを使うかの設定はブラウザ側のクッキーの格納して要請するたびにセッションキーでサーバ側のセッションを持って来て使う流れで運用しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;すごくシンプルに説明しましたが、詳細のは下記のところで確認してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://developer.mozilla.org/ja/docs/web/http/overview&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/ja/docs/web/http/overview&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_server&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.server.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.server.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$_serverの変数ではサーバの環境設定に関するデータがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=758&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$_server変数をvar_dumpに確認するとデータが多いですね。&lt;/p&gt;&lt;p&gt;この中でよく使えるデータは「document_root」と「server_name」、「http_host」、「http_accept」などがありますね。特に「$_server[&quot;document_root&quot;]」の場合は物理的にサーバの中のファイルを読み出す時やphpファイルincludeなどをする時によく使います。&lt;/p&gt;&lt;p&gt;os情報があれば良いと思いますが、os情報はないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$globals&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/language.variables.superglobals.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/language.variables.superglobals.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$globalsは流れているセッションのステップで宣言されている全ての変数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=767&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の出力結果をみれば、$_serverのデータもあります。そして$dataとtestクラスを$objで宣言しましたので、それも$globalsの変数で確認できますね。&lt;/p&gt;&lt;p&gt;クラスのprivateの値まで確認できます。率直に全てのデータがみえる変数なのでセキュリティとしてはかなり危ない変数ですね。&lt;/p&gt;&lt;p&gt;この変数を間違って使用して本番ウェブサイトなどで出力されたらパスワードやサーバ情報が漏れになる可能性があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$globalsの変数は連関配列タイプなので$globals[&quot;data&quot;]みたいの形式でデータを読込みや書込みができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_get&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.get.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.get.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$_getはブラウザからget方式で要請する時にパラメタ値を取得する変数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=755&quot; data-filename=&quot;003.png&quot; style=&quot;width: 509px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例でみるとブラウザのurlで「localhost/index.php?data=1&amp;amp;test=helloworld」で要請しました。&lt;/p&gt;&lt;p&gt;意味はlocalhostのホストサーバでindex.phpを要請します。後「?」の区切りでget方式のパラメタデータをサーバに送ることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;変数の区切りは「&amp;amp;」で「data」の値は「1」、「test」の値は「helloworld」になります。ここで注意点はgetのデータは全て文字列です。&lt;/p&gt;&lt;p&gt;つまり「data」の値が「1」ですが、数のデータの「1」ではなく、文字列としての「1」です。php側で定数値で使いたいならデータタイプ変換が必要です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_post&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.post.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.post.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;要請方式でgetの場合はurlで含めて要請することならpostの場合はhttpプロトコールでデータ値を含めて要請することです。&lt;/p&gt;&lt;p&gt;ウェブでpostタイプで要請するのを再現したいなら「form」タグを生成してメソッドを「post」で設定します。「form」タグの中で「input」タグの値(value)をいれてサブミット(submit)するとpostタイプに要請します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=756&quot; data-filename=&quot;004.png&quot; style=&quot;width: 482px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=768&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば初めのイメージの結果はget方式でウェブサイトに接続しましたので、$_postの値がありません。テキストボックスにデータをいれてサブミットボタンを押下するとそのデータがpost形式でサーバに要請するのでデータが表示されることを確認できます。&lt;/p&gt;&lt;p&gt;postで変数名はinputのnameの属性で決めることになります。つまり、初めのテキストボックスはnameが「data」なので「data=1」、次は「test」なので「test=hello world」に転送します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_request&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.request.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.request.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上で$_getと$_postを区分してデータを取得しましたが、$_requestはget、postと関係しずにパラメタデータを取得する変数です。&lt;/p&gt;&lt;p&gt;(phpマニュアルでは$_requestで$_cookieの値も出ると説明していますが、筆者が確認したところでcookieはでないですね。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=759&quot; data-filename=&quot;006.png&quot; style=&quot;width: 506px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のテキストデータで初めは「test」、２つめは「aaaa」のデータを入れてサブミットボタンを押下しました。&lt;/p&gt;&lt;p&gt;結果はgetデータ「data=1&amp;amp;test1=helloworld」とpostデータ「data=test&amp;amp;posttest=aaaa」にサーバに転送しますね。&lt;/p&gt;&lt;p&gt;$_requestのけっかは「data」の場合はgetとpostの両方データがありますが、postの値がありますね。getのtest1とpostのposttestがあります。&lt;/p&gt;&lt;p&gt;$_requestの場合は要請方法に関係しずにデータを読み込むのができるので楽だと思いますが、postの値をgetのパラメタで変調が可能にみえるのでセキュリティとしてはよくないですね。&lt;/p&gt;&lt;p&gt;筆者もpost、getを使うことが楽でrequest変数はよく使わないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_cookie&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.cookies.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.cookies.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cookieやsessionを理解するようにはウェブ構造に関して調べなければならないです。ここではcookieとsessionの概念を知ることで説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ブラウザのcookieの値はgetやpostで要請する時にサーバ側に全てヘッダにつけて転送します。(ブラウザの仕様)なのでサーバ側にはクライアントのcookieの値を確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=764&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=763&quot; data-filename=&quot;008.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=766&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javascriptでcookie設定が可能ですが、そうするとプログラムが複雑になるので、一応ブラウザのapplicationタブでcookie設定ができるので、ブラウザで設定しました。&lt;/p&gt;&lt;p&gt;初めのページ要請する時にはcookieの値がなかったのでnullになりましたが、dataとtestのデータを入れたら$_cookieの変数でデータがあることを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_session&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.session.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.session.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;server-clientのセッション間でブラウザ側に格納するデータはcookieだと思うとsessionはサーバ側に格納するデータです。&lt;/p&gt;&lt;p&gt;session値はブラウザ側のcookieにあるセッションキーによってサーバ側に格納します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=770&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=765&quot; data-filename=&quot;011.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpでsessionを使うようにはsession_start()関数を呼び出さなければならないです。session_start()関数はブラウザのcookieにセッションキーを与えてサーバ側でsessionデータを使えるように設定する役の関数です。&lt;/p&gt;&lt;p&gt;初めの結果イメージをみればresponseのヘッダで「set-cookie」にセッションキーが設定することをみれます。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.session-start.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.session-start.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それをウェブページを再要請するとsessionの「sessiontest」キーで「good job」のデータがあることを確認できます。&lt;/p&gt;&lt;p&gt;sessionの値はサーバ側でデータを削除するかsessionがexpireになるとなくなります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_files&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.files.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.files.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$_filesの場合はブラウザからファイルをアップロードする時にファイルの情報がある変数です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=757&quot; data-filename=&quot;012.png&quot; style=&quot;width: 542px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=760&quot; data-filename=&quot;013.png&quot; style=&quot;width: 737px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のタイプがfileに設定したinputオブジェクトにデータを設定してサブミットボタンを押下するとブラウザからウェブサーバにファイルをアップロードします。&lt;/p&gt;&lt;p&gt;実際にアップロードしたデータは$_files[&quot;tmp_name&quot;]で確認すると任意フォルダに格納されますが、そこからデータをファイルコピーやファイル移動すればよいです。&lt;/p&gt;&lt;p&gt;詳しい説明はphpのioを説明する時に詳細に調べます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;$_env&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.environment.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/reserved.variables.environment.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$_envに関してマニュアルを確認すると環境変数の設定値がある変数だと説明していますが、自分の場合は「null」がでますね。&lt;/p&gt;&lt;p&gt;グーグルで調べてみますが、正確な情報がないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;マニュアルで$_envとgetenv()関数は同じ役で結果も同じだと書いていますが、getenv()は値があるのに$_envがnull理由を分からないですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=769&quot; data-filename=&quot;014.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応、個人情報がでるのでデータをブロックしましたが、ロカールのシステム環境変数データが表示されます。&lt;/p&gt;&lt;p&gt;環境変数データはシステム環境変数をいうことです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=762&quot; data-filename=&quot;015.png&quot; style=&quot;width: 493px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=761&quot; data-filename=&quot;016.png&quot; style=&quot;width: 457px;&quot;&gt;&lt;br&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/145.html</guid><pubDate>Fri, 17 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] データ確認関数(var_dump, debug_zval_dump, print_r)</title><link>https://www.nowonbun.com/144.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラムを開発する時にデータの流れを確認しなければならない時があります。その流れのポイントを取って確認する作業をデバッグと言います。&lt;/p&gt;&lt;p&gt;簡単なウェブページを作成することならデバッグなしでも値の流れを確認できて、作業ができるかもしれませんが、データベースからデータを検索して取得する流れだと思えば、データの中間でデータが上手く入れ込むか、上手く取得するかを確認することや、もし予想以外のデータがあり、途中で何が間違っているかの確認が必要な時がありますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaやc#の場合はいい開発ツール(ide)があり、breakpointでデータ追跡が可能ですが、phpの場合はスクリプト言語なので、デバックができるいい開発ツールがないと思います。&lt;/p&gt;&lt;p&gt;先にグーグルで検索してみたらzendstudioがありますね。まだ使ったことがないのでどうかなよく知りません。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.zend.com/en/downloads&quot; target=&quot;_blank&quot;&gt;https://www.zend.com/en/downloads&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今はphpのideツールではjavaでも使うideツールのeclipseを使っていますが、これがphpのデバックができないです。&lt;/p&gt;&lt;p&gt;正確に言うとできないことではないですが、筆者の場合は使ったことがないです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://xdebug.org/&quot; target=&quot;_blank&quot;&gt;https://xdebug.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://wiki.eclipse.org/debugging_using_xdebug&quot; target=&quot;_blank&quot;&gt;https://wiki.eclipse.org/debugging_using_xdebug&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://yard.tistory.com/entry/eclipse-php-debug-&quot; target=&quot;_blank&quot;&gt;https://yard.tistory.com/entry/eclipse-php-debug-&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=752&quot; data-filename=&quot;001.png&quot; style=&quot;width: 364px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私もデバックができるように設定してみましたが、結局失敗しました。&lt;/p&gt;&lt;p&gt;stack-overflowの説明とおりだと、eclipse自体にバッグがありそうですね。もし、できる方がいらっしゃいなら教えてください。&lt;/p&gt;&lt;p&gt;後でzendstudioで挑戦してみなければならないですね。(zendstudioが無料ではなく、有料です。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者の場合は今までphpを開発する時に別にデバックをしながら開発したことではないです。今はeclipseが慣れているから使いますが、10年前はただnotepad++で開発しました。&lt;/p&gt;&lt;p&gt;phpはスクリプトなので、ソース修正が簡単だし、すぐ確認できるので「var_dump」の関数を利用して確認ができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=753&quot; data-filename=&quot;002.png&quot; style=&quot;width: 377px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一応、文字がすごく小さく表示されますが、index.phpの8行目、intタイプの値が101ということで表示されますね。phpでデータタイプのことを別に気にしませんが、var_dumpではデータタイプも表示しますね。&lt;/p&gt;&lt;p&gt;筆者の場合は普通でvar_dumpを利用しますが、それと似ているな「debug_zval_dump」、「print_r」という関数もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=754&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみればデータを確認することでは「var_dump」がみやすいですね。しかし「debug_zval_dump」、「print_r」も悪くなさそうなので、簡単に値を確認する状況なら使ってみるのも悪くないと思います。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.var-dump.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.var-dump.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.debug-zval-dump.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.debug-zval-dump.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.print-r.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.print-r.php&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/144.html</guid><pubDate>Thu, 16 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] 例外処理(try ~ catch ~ finally)</title><link>https://www.nowonbun.com/143.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラミングで例外処理は重要です。例外処理はプログラムロジックで開発者が考えられなかったこと、ユーザから可笑しいデータを受け取ったものを処理する文法です。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/24.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 23] 例外処理(try〜catch,throwそしてfinally)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/59.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 19] 例外処理( try ~ catch)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;特に「php」で他の言語と差別性があることではないです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/language.exceptions.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/language.exceptions.php&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=750&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば、example関数は呼び出せたらthrowでexceptionが発生します。メインロジックで「try ~ catch ~ finally」の構文でtryの領域でexample関数を呼出します。&lt;/p&gt;&lt;p&gt;example関数ではexceptionで例外が発生して、catch領域に移動し、＄errormessageの変数にエラーメッセージのデータを入れます。&lt;/p&gt;&lt;p&gt;最終的に「try ~ catch」構文の関係なずに、finallyの領域に移動しますが、$checkデータを「1」を加算しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;結果をみるとエラーメッセージと$checkの値が「1」になることを確認できます。&lt;/p&gt;&lt;p&gt;ここで確認ポイントはtry領域でexample()関数を呼出した後checkの変数が加算するところがありますが、example関数でエラーが発生しましたので、checkの加算は実施してないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;基本的にthrowを発生すると処理インタラプトの「try ~ catch」に移動しますが、exceptionを継承してcatchを種類別で処理することもできます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=749&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;example関数に「1」という値をいれて「myexception1」を発生する。&lt;/p&gt;&lt;p&gt;catchでは「myexception1」、「myexception2」、「exception」の例外を設定してエラー別で処理領域を分離しました。&lt;/p&gt;&lt;p&gt;結果をみれば「101」になりましたので、「myexcepion1」が呼び出せ、finallyの領域に移動したことを確認できますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参考で文字上の例で「myexception1」が設定してない場合は「exception」のエラーが発生されます。&lt;/p&gt;&lt;p&gt;「exception」の領域が一番上に設定すると区分なしですべてのエラーがexceptionに通るので、一番下に配置しなければならないです。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/143.html</guid><pubDate>Wed, 15 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[CSS] 範囲と指定に関する選択子(全体選択子、要素選択子、孫選択子、子選択子、隣接選択子)</title><link>https://www.nowonbun.com/124.html</link><description>&lt;p&gt;選択された要素の基準で隣接された要素や派生(下位)要素を選択する方法に関する記述です。&lt;/p&gt;&lt;p&gt;styleでアスタリスクマーク(*)はすべての要素を選択する方法です。すべての要素はfont-styleや基本padding、marginを設定する時に使いますが、すべての要素に反映があるのでよく使わない選択子です。&lt;/p&gt;&lt;p&gt;そしてstyle設定でタグあるいはidやclass、属性で要素を選択しますが、コンマ(,)を使えば複数選択も可能です。&lt;/p&gt;&lt;p&gt;例えば「p, div」といえばpタグとdivタグを選択することです。&lt;/p&gt;&lt;p&gt;そして孫選択子、子選択子の意味は孫選択子の場合、選択要素の中であるすべての派生タグをいうことで子選択子は選択した直下の派生タグを選択することです。&lt;/p&gt;&lt;p&gt;上の条件の構造でhtmlが作成したと思えば、aタグの孫要素は「b, c, d, e」タグになるし、子要素は「b, c」にあんることです。&lt;/p&gt;&lt;p&gt;つまり、「a d」の指定みたいに、aとd間にスペースを置くと、aタグの孫要素のdタグを選択することです。&lt;/p&gt;&lt;p&gt;子要素でみると「a &amp;gt; b &amp;gt; d」の選択子になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;隣接選択子で「+」を使用すれば同じレベルの要素で次(派生ではない)に配置された要素、つまり「b + c」で設定するえば「c」を選択することです。「b + f」の場合はbタグすぐあとで「f」タグがないので何も選択されない結果になります。&lt;/p&gt;&lt;p&gt;「~」の場合は「+」みたいに派生ではなく同じレベルの後で配置された要素ですが、すぐ後ろふくめすべての要素ですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=751&quot; data-filename=&quot;001.png&quot; style=&quot;width: 674px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみれば初めは孫要素を選択するので.p1のh1と.p3のh3になります。でも.p2のh2の場合は.p2の子要素なので.p4のh2タグは当該事項ではありません。&lt;/p&gt;&lt;p&gt;~を使って+をつかったので先にクラスが.p1タグの後のdivタグの背景をすべて黄色に設定して、p1タグの次の要素を赤色に設定しますね。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/124.html</guid><pubDate>Tue, 14 Jan 2020 18:04:37 +0900</pubDate></item><item><title>[CSS] 属性選択子</title><link>https://www.nowonbun.com/120.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssの選択子で一番良く使う選択子はタグによって、「id」によって(#id)、「class」によって(.class)が一番良く使う選択子で次がこの属性選択子ではないかと思います。&lt;/p&gt;&lt;p&gt;htmlタグではタグ名があるし、タグテキストがあります。そして属性(アトリビュート)がありますね。&lt;/p&gt;&lt;p&gt;css側で上の属性によって選択しましょう。&lt;/p&gt;&lt;p&gt;上の例は全て「input」タグが４つ、「a」タグが３つがありますね。&lt;/p&gt;&lt;p&gt;cssｍｐ属性選択子で選択してスタイルを付けましょう。&lt;/p&gt;&lt;p&gt;上の例をみればbodyの中でタグは全て７つがあります。inputタグは４つで、aタグが３つがあります。&lt;/p&gt;&lt;p&gt;属性選択子はブランケット([])で選択します。&lt;/p&gt;&lt;p&gt;上の通りで一番上のテキストボックスは枠が黒くなりますね。&lt;/p&gt;&lt;p&gt;２つ目のスタイルはボタンタイプのinputタグの枠が赤になります。&lt;/p&gt;&lt;p&gt;３つ目はvalue属性、つまり、値がsubmitを含めているボタンは枠が青になります。&lt;/p&gt;&lt;p&gt;４つ目はhrefの属性が「https」で始まる「a」タグの文字が緑になります。&lt;/p&gt;&lt;p&gt;５つ目はhrefの属性が「localhost」で終わる「a」タグの文字がグレーになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=668&quot; data-filename=&quot;001.png&quot; style=&quot;width: 365px;&quot;&gt;&lt;/p&gt;&lt;p&gt;属性選択子はcss selectorの中で良く使う選択子です。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/120.html</guid><pubDate>Tue, 14 Jan 2020 17:25:53 +0900</pubDate></item><item><title>[PHP] 配列とリスト(list)</title><link>https://www.nowonbun.com/142.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaやc#で配列とリスト(list)は別の文法です。array(配列)の場合はその個数を決めてデータを入れるし、配列の個数を減らしたり増えたりするのが出来ないです。&lt;/p&gt;&lt;p&gt;list(リスト)の場合は連結リストアルゴリズムでなっている構造でポインタを連携しながら追加したり削除したりする資料構造になっています。&lt;/p&gt;&lt;p&gt;phpではその配列とリストの区分が別に分けていることではなく、arraryで宣言してリストみたいに追加や削除ができる構造になっています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=744&quot; data-filename=&quot;001.png&quot; style=&quot;width: 592px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてphpには連関配列ということでマップやディクショナリみたいに使う配列があります。&lt;/p&gt;&lt;p&gt;連関配列は上の配列でインデックスの数代わりに文字を入れると連関配列になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=747&quot; data-filename=&quot;002.png&quot; style=&quot;width: 640px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで配列(リスト)の定義を確認しました。それでデータを追加や削除に関して確認しましょう。&lt;/p&gt;&lt;p&gt;関数としてはarray_pushとarray_pop関数があります。array_pushは配列のデータを続けて入れることです。つまり、上の例で[3]までデータを入れたら[4]にデータを入れることですね。&lt;/p&gt;&lt;p&gt;array_popは最後のデータ[4]までデータを入れたら[4]データをリターンして削除する関数です。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.array-push.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.array-push.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.array-pop.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.array-pop.php&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=748&quot; data-filename=&quot;003.png&quot; style=&quot;width: 594px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;array_popの場合は最後でデータを取り除きますが、最初のデータを取り除き関数(array_shift)もあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.array-shift.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.array-shift.php&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=745&quot; data-filename=&quot;004.png&quot; style=&quot;width: 587px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は配列の中でデータを入れる関数(array_splice)です。&lt;/p&gt;&lt;p&gt;array_spliceは一つのデータを入れることより、２つの配列を合わせることと同じです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.array-splice.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.array-splice.php&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=746&quot; data-filename=&quot;005.png&quot; style=&quot;width: 584px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後、sort関数、extract関数、array_walk関数がありますが、sortの場合は整列、extractは抽出ですが、あまり使わないですね。&lt;/p&gt;&lt;p&gt;sortの場合はリストの数字の対象なので、クラスやオブジェクトタイプならsort関数を作らなければならないと思います。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.sort.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.sort.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.extract.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.extract.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/manual/en/function.array-walk.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/manual/en/function.array-walk.php&lt;/a&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/142.html</guid><pubDate>Tue, 14 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[CSS] Selector(選択子)</title><link>https://www.nowonbun.com/119.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssでselectorというのはhtmlドキュメントにスタイルを付けるような指示子ということです。このselectorは単一のタグを設定も可能し、復讐のタグの設定も可能です。&lt;/p&gt;&lt;p&gt;そして、タグだけの指示だと特定タグを選択するのは大変ですが、アトリビュート、配列順番なのでも選択が可能です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参照リンク - &lt;a href=&quot;https://www.w3schools.com/cssref/css_selectors.asp&quot; target=&quot;_blank&quot;&gt;https://www.w3schools.com/cssref/css_selectors.asp&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;css selectorを確認するように先にhtmlドキュメントを作成しましょう。&lt;/p&gt;&lt;p&gt;上のhtmlタグは普通のテーブルタグです。htmlタグを作成したことがある方なら構造がすく理解すると思いますね。&lt;/p&gt;&lt;p&gt;そうすると我々は「tbody」タグの１番の「tr」タグの１版「td」タグを選択したいならどうしましょうか？&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単にタグで選択すると「table#test &amp;gt; tbody &amp;gt; tr:nth-child(0) &amp;gt; td:nth-child(0)」になります。&lt;/p&gt;&lt;p&gt;意味としてはtableのアトリビュートのiｄがtestのタグの直下派生のtbodyの直下派生のtrタグの０番目の直下派生のtdタグの0番目のタグを指しています。&lt;/p&gt;&lt;p&gt;複雑ですね。でもタグを指しる時にはこんなに細かく全てのタグ名を書く必要はないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=667&quot; data-filename=&quot;001.png&quot; style=&quot;width: 623px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;タグでスタイルを定義するのはそんなに難しくないですね。&lt;/p&gt;&lt;p&gt;それなら、css selectorに関して纏めます。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr&gt;        &lt;th&gt;選択子&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;.class&lt;/td&gt;        &lt;td&gt;class=”class”の全てのオブジェクトを選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;#id&lt;/td&gt;        &lt;td&gt;id=”id”のオブジェクトを選択(タグのidはページの雄一が仕様です。)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;*&lt;/td&gt;        &lt;td&gt;全体選択子全てのオブジェクトを選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;element&lt;/td&gt;        &lt;td&gt;要素選択子 - 指定した要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;element1,element2&lt;/td&gt;        &lt;td&gt;要素選択子 - 選択する要素を様々を指定(element1とelement2を選択)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;element1 element2&lt;/td&gt;        &lt;td&gt;子選択子 - 指定された親要素の指定された派生要素の全て要素を指定(element1の派生の全てelement2)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;element&amp;gt;element&lt;/td&gt;        &lt;td&gt;子選択子 - 指定された親要素の直下の派生要素だけ指定(elementの直下の派生element2)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;element+element&lt;/td&gt;        &lt;td&gt;隣接選択子 - 指定された要素と同じレーベルの次の要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;element1~element2&lt;/td&gt;        &lt;td&gt;element1要素の後である全てのelement2要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;[attribute]&lt;/td&gt;        &lt;td&gt;属性選択子 - 指定された属性を持っている全て要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;[attribute=value]&lt;/td&gt;        &lt;td&gt;属性選択子 - 指定された属性の値を持っている全ての要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;[attribute~=value]&lt;/td&gt;        &lt;td&gt;属性選択子 - 指定された属性に指定された値を含めている全ての要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;[attribute|=value]&lt;/td&gt;        &lt;td&gt;属性選択子 - 指定された属性の値が指定された値で始まる全ての要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;[attribute^=value]&lt;/td&gt;        &lt;td&gt;属性選択子 - 指定された属性の値が指定された値で始まる全ての要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;[attribute$=value]&lt;/td&gt;        &lt;td&gt;属性選択子 - 指定された属性が指定された値で終わる全ての要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;[attribute*=value]&lt;/td&gt;        &lt;td&gt;属性選択子 - 指定された属性値が指定された値を含めている全ての要素を指定&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:active&lt;/td&gt;        &lt;td&gt;全ての活性化になっている要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:after&lt;/td&gt;        &lt;td&gt;指定された要素の次を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:before&lt;/td&gt;        &lt;td&gt;指定された要素の前を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:checked&lt;/td&gt;        &lt;td&gt;全てのcheckedされた要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:disabled&lt;/td&gt;        &lt;td&gt;全てのdisabledされた要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:empty&lt;/td&gt;        &lt;td&gt;派生ノードがない要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:enabled&lt;/td&gt;        &lt;td&gt;全てのenabledされた要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:first-child&lt;/td&gt;        &lt;td&gt;指定された要素の初めの派生ノードを選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:first-letter&lt;/td&gt;        &lt;td&gt;指定された要素の初めの文字を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:first-line&lt;/td&gt;        &lt;td&gt;指定された要素の初め行を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:first-of-type&lt;/td&gt;        &lt;td&gt;指定された要素の初めの派生ノードの全ての要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:focus&lt;/td&gt;        &lt;td&gt;全てのフォーカスされた要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:hover&lt;/td&gt;        &lt;td&gt;マウスがhoverされた要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:in-range&lt;/td&gt;        &lt;td&gt;指定された範囲内の値で入力要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:invalid&lt;/td&gt;        &lt;td&gt;間違って値を持っている全ての入力要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:lang(language)&lt;/td&gt;        &lt;td&gt;指定された値の言語でされている要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:last-child&lt;/td&gt;        &lt;td&gt;指定された派生ノードの最後要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:last-of-type&lt;/td&gt;        &lt;td&gt;指定された要素の最後の派生ノードの全ての要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:not&lt;/td&gt;        &lt;td&gt;指定された要素がない要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:nth-child(n)&lt;/td&gt;        &lt;td&gt;指定された要素と同じレベルの(n)番目の要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:nth-last-child(n)&lt;/td&gt;        &lt;td&gt;指定された要素と同じレベルの後から(ｎ)番目の要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:nth-last-of-type(n)&lt;/td&gt;        &lt;td&gt;最後ノードから計算、親の２つ目に指定された要素の全ての要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:nth-of-type(n)&lt;/td&gt;        &lt;td&gt;親の２つ目に指定された要素の全ての要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:only-of-type&lt;/td&gt;        &lt;td&gt;親の雄一な指定された要素の全ての要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:only-child&lt;/td&gt;        &lt;td&gt;派生ノードが一つの要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:optional&lt;/td&gt;        &lt;td&gt;指定された必須属性がない要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:out-of-range&lt;/td&gt;        &lt;td&gt;指定された範囲外になっている入力要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:read-only&lt;/td&gt;        &lt;td&gt;読み取り専用の入力要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:read-write&lt;/td&gt;        &lt;td&gt;読み取り専用がない入力要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:required&lt;/td&gt;        &lt;td&gt;指定された必須属性の要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:root&lt;/td&gt;        &lt;td&gt;ドキュメントのルートの要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;::selection&lt;/td&gt;        &lt;td&gt;ユーザによって選択された要素の一部を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:target&lt;/td&gt;        &lt;td&gt;targetに指定された要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:valid&lt;/td&gt;        &lt;td&gt;有効な値を持っている全ての入力要素を選択&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;:visited&lt;/td&gt;        &lt;td&gt;訪問したページのリンクの要素&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;纏めてみると量がかなりありますね。部分的にセレクトの種類別で分けて例や詳しく説明します。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/119.html</guid><pubDate>Mon, 13 Jan 2020 13:59:26 +0900</pubDate></item><item><title>[PHP] インタフェースと抽象クラス、クラス継承、parent、this</title><link>https://www.nowonbun.com/141.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でphpのclassを宣言して使う方法に関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/140.html&quot; target=&quot;_blank&quot;&gt;[php] functionとclass使用方法、アクセス修飾子、そしてstatic&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpもクラスがあるのでインタフェース(interface)と抽象クラス(abstract class)があります。&lt;/p&gt;&lt;p&gt;個人的な考えはphpにはデータタイプの指示子がないのでインタフェース役がコンパイル言語(javaやc#)より活用性が少ないではないかと思います。筆者も実際にphpでinterfaceを使ったことがないですね。&lt;/p&gt;&lt;p&gt;でも抽象クラスはよく使います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=743&quot; data-filename=&quot;001.png&quot; style=&quot;width: 543px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみればitestインタフェースとabstract抽象クラスとtestクラスがあります。&lt;/p&gt;&lt;p&gt;依存層は「itest -&amp;gt; abstracttest -&amp;gt; test」でなっています。それでtestを宣言してrunを実行すればabstracttestのrunメソッドが実行してrunメソッド中では派生クラスの「print()」関数を呼び出す結果は「helloworld」になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここでparentとthisの概念ですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=742&quot; data-filename=&quot;002.png&quot; style=&quot;width: 543px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;$thisの場合は実行しているクラスのメンバーをさしています。すなわち、メンバー変数か関数を指しています。$thisの場合はc++のポインタの形で矢印で指示(-&amp;gt;)をしています。&lt;/p&gt;&lt;p&gt;しかしparentの場合はparent::の形で指しています。&amp;amp;parent-&amp;gt;の形ではエラーが発生します。文法が面白いですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例はobj-&amp;gt;runを通ってabstracttestのrunが呼び出してrun関数で抽象メソッドprintが呼び出します。&lt;/p&gt;&lt;p&gt;抽象メソッドprintが呼び出したのでtestクラスのprintが呼び出してprint関数で上位クラスのsetdataにデータを入れてgetdataでデータを持ってきて変換する形です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私がデータを「hello world」を入れたので結果は「hello world」が出ます。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/141.html</guid><pubDate>Mon, 13 Jan 2020 03:00:00 +0900</pubDate></item><item><title>[PHP] functionとclass使用方法、アクセス修飾子、そしてstatic</title><link>https://www.nowonbun.com/140.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;phpは基本的にスクリプト言語なので、javascriptみたいに「function」と「class」を宣言しなくてもphpページを作ることができます。&lt;/p&gt;&lt;p&gt;でも、最近ウェブプログラムはデータベースからデータを読み込んでそのままにウェブサービスに書き出すことではなく、複雑な計算と様々なデータを総合的に見せるポータルプログラム形式が多いのでかなり複雑に作成することになります。&lt;/p&gt;&lt;p&gt;その時に単純にデータベースあるいはファイルなどからデータを読み込んで計算しながらウェブページに掲示すればプログラムがかなり複雑になるし再使用性がたくさん落ちることになります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それでfunction(関数)やclass形式な構造が必要です。&lt;/p&gt;&lt;p&gt;先、functionの構造は「java」と「c#」みたいに返却タイプがあることではなく、「javascript」みたいにないですね。初めからphpは変数宣言する時もデータタイプを宣言することではないからだと思いますね。&lt;/p&gt;&lt;p&gt;「javascript」と似てるな構造になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=739&quot; data-filename=&quot;001.png&quot; style=&quot;width: 461px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpでクラスの構造は一般oopプログラムと似てます。メンバー変数があるし、関数がある構造になります。&lt;/p&gt;&lt;p&gt;ここでメンバー変数で「private」というアクセス修飾子を使いました。クラス内部の関数の場合はアクセス修飾子が必須ではないですが、メンバー変数には必ずアクセス修飾子が必要です。&lt;/p&gt;&lt;p&gt;アクセス修飾子は「private」、「protected」、「public」があります。「private」の場合はインスタント外部でアクセス禁止、「protected」の場合はインスタントの内部、派生クラスの関数だけでアクセスができます。「public」の場合はインスタントの外部、内部でとこでもアクセスができます。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;	&lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;区分&lt;/th&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;アクセス修飾子&lt;/th&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;  	&lt;tbody&gt;  		&lt;tr&gt;			&lt;td rowspan=&quot;3&quot; style=&quot;background-color:#c5fdfd;text-align:center;white-space: nowrap;&quot;&gt;アクセス権限&lt;/td&gt;  			&lt;td style=&quot;white-space: nowrap;&quot;&gt;public&lt;/td&gt;  			&lt;td&gt;すべてクラスでアクセスが可能です。&lt;/td&gt;  		&lt;/tr&gt;  		&lt;tr&gt;  			&lt;td style=&quot;white-space: nowrap;&quot;&gt;private&lt;/td&gt;  			&lt;td&gt;クラス内だけアクセスが可能です。&lt;/td&gt;  		&lt;/tr&gt;  		&lt;tr&gt;  			&lt;td&gt;protected&lt;/td&gt;  			&lt;td&gt;クラスと派生クラス関係のクラスによってアクセスが可能です。&lt;/td&gt;  		&lt;/tr&gt;  	&lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/51.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 11] アクセス修飾子&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/14.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 13] アクセス修飾子(public, private, protected)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;関数の場合はアクセス修飾子が必須ではないですが、クラスのカプセル化で構成するようにはアクセス修飾子が必要です。&lt;/p&gt;&lt;p&gt;クラスのコンストラクタはjavaやc#みたいにクラスと同名で作成することではなく、__constructの関数名が定義されています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして関数の内でメンバー変数をアクセスするようには必ず「$this」のキーワードを使用して「$this-&amp;gt;変数名」でアクセスすればよいです。&lt;/p&gt;&lt;p&gt;phpには別に変数宣言方法がないので、「$this」を省略することになるとローカル変数になります。筆者もたまにミスする領域ですが、変数を間違って参照してバグが発生する時があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;インスタンスを生成する時にはコンストラクトがない場合は「()」を省略してもよいですが、ソースの可読性のため、必ず書いているのが良いと思います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=740&quot; data-filename=&quot;002.png&quot; style=&quot;width: 540px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpでもインスタンスを生成するのは「new」キーワードで生成します。oopと似ているな構造になりますね。&lt;/p&gt;&lt;p&gt;しかし内部的には「oop」と動作方法は差がありますが、実装する形は似ているので初心者がphpを初めに勉強するのはしやすいと思います。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=741&quot; data-filename=&quot;003.png&quot; style=&quot;width: 592px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例をみればstaticもparentと似ている構造でアクセスします。「クラス名::変数名」あるいは「クラス名::関数名」でアクセスします。&lt;/p&gt;&lt;p&gt;上の例は「static」変数でもアクセス修飾子が「private」なので、インスタンス内部だけでアクセスできますね。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/140.html</guid><pubDate>Thu, 9 Jan 2020 23:32:40 +0900</pubDate></item><item><title>[PHP] 基本ページ作成方法と変数使用方法</title><link>https://www.nowonbun.com/139.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpをインストールしてideを構成しました。後、composerまでインストールまで完了しました。&lt;/p&gt;&lt;p&gt;そのことでphpの基本的な開発準備は終わりました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/137.html&quot; target=&quot;_blank&quot;&gt;[php] php 開発環境設定とeclipse(ide)の設定&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/138.html&quot; target=&quot;_blank&quot;&gt;[php] composer設定&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpはjavaとc#と比べてコンパイル言語ではなく、スクリプト言語です。スクリプト言語はコンパイル、すなわち機械語の変換がなしでスクリプト自体を解読して運用する言語といいます。&lt;/p&gt;&lt;p&gt;スクリプト言語とは代表的にjavascriptとpythonなどがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpファイルの構成形は下記となります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=734&quot; data-filename=&quot;001.png&quot; style=&quot;width: 360px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=738&quot; data-filename=&quot;002.png&quot; style=&quot;width: 528px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;php処理領域は&amp;lt;?phpで始まって?&amp;gt;で終了します。値を出力する時は&amp;lt;?=変数 ?&amp;gt;形で出力が可能です。&lt;/p&gt;&lt;p&gt;もちろん、出力を&amp;lt;?=変数 ?&amp;gt;ではなく、&amp;lt;?php echo 変数 ?&amp;gt;でも可能です。&lt;/p&gt;&lt;p&gt;その以外の領域はそのままhtmlで出力になると思えばなります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpは別途のデータタイプをもってないです。それで変数宣言も必要ないです。単純に$変数名で宣言が可能です。&lt;/p&gt;&lt;p&gt;でもデータタイプ宣言をしないって言っても変数タイプがないことではないです。&lt;/p&gt;&lt;p&gt;例えば、文字列タイプで定数タイプを加算すればエラーが発生します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=735&quot; data-filename=&quot;003.png&quot; style=&quot;width: 773px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;エラーではなく、warningが発生します。&lt;/p&gt;&lt;p&gt;定数や実数などで数と関係がある処理式は既存とみたいに「+,-,*,/」で使用が可能です。そして文字列はデータを合わせる時に「+」ではなく、「.」を使用して文字列を合わせます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=736&quot; data-filename=&quot;004.png&quot; style=&quot;width: 572px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後、制御文、繰返し文と使用可能です。これは他の言語と似てるので「java」や「c#」を参考してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/45.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 5] 制御文 - 分岐 (if, switch〜case)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/10.html&quot; target=&quot;_blank&quot;&gt;[c# スタディ - 9] 制御文 - 分岐 (if, switch〜case, goto)&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=737&quot; data-filename=&quot;005.png&quot; style=&quot;width: 644px;&quot;&gt;&lt;br&gt;&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/139.html</guid><pubDate>Mon, 6 Jan 2020 23:20:36 +0900</pubDate></item><item><title>[PHP] Composer設定</title><link>https://www.nowonbun.com/138.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpのcomposerとはjavaのmaven、c#のnugetと同じ機能で、パッケージ間の依存性を管理するし、ライブラリをダウンロード及びリンクを管理するモジュールです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、composerをインストールするように「php.ini」を設定しなければならないです。&lt;/p&gt;&lt;p&gt;以前にインストールした「php」フォルダに移動しましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/137.html&quot; target=&quot;_blank&quot;&gt;[php] php 開発環境設定とeclipse(ide)の設定&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=724&quot; data-filename=&quot;001.png&quot; style=&quot;width: 775px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の設定ファイルの中でextension=opensslのモジュールがありますがセミコロン(;)でコメント処理になっております。このセミコロンを削除しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてコマンドで「php」がインストールされたフォルダに移動しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=722&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;(※参考に私の場合は今プロクシ設定している環境で使っているので「-x -u」オプションでプロクシ設定しましたが、この部分は省略してもよいです。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;インストールが完了しました。というメッセージが表示されました。&lt;/p&gt;&lt;p&gt;その後、composerバッチファイルを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=723&quot; data-filename=&quot;003.png&quot; style=&quot;width: 583px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてコマンドで「composer」ということで入れたら、下記とおりの画面がでます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=727&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまでcomposerがインストールが終わって設定が完了しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://packagist.org/&quot; target=&quot;_blank&quot;&gt;https://packagist.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaのmavenレポジトリより少し整理されてない雰囲気ですが、必要な情報はあるのでかなり便利です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;検索テキストで「carbon」ということで入れて検索しましょう。参考に「carbon」はデートフォーマット関連ライブラリです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=732&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そうしたらよく使う順番で検索されますが、一番上の結果を選択しましょう。&lt;/p&gt;&lt;p&gt;様々な説明がありますが、時間があれば詳しくみるのはよいですね。でも、我々はライブラリリンクするのが目的なので、下の「installation」の項目をみましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=731&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;リンク情報を得たのでドキュメントルートのフォルダに移動しましょう。&lt;/p&gt;&lt;p&gt;ここで「composer.json」ファイルを生成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=726&quot; data-filename=&quot;007.png&quot; style=&quot;width: 459px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてリンク情報を入力しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=725&quot; data-filename=&quot;008.png&quot; style=&quot;width: 425px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;composerを実行すればよいですが、筆者の場合はcomposerバッチがあるところをシステムパス設定をしなかったので、直接に絶対パスで実行しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=730&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ライブラリがタウンロードさせてリンクが完了しました。&lt;/p&gt;&lt;p&gt;これからダウンロードしたライブラリを使ってみましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=729&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;eclipseを起動してproject explorerを見ると「vendor」フォルダが生成されています。ここでライブラリがダウンロードされたことです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=728&quot; data-filename=&quot;010.png&quot; style=&quot;width: 766px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここで全てのライブラリに「require」宣言する必要がなしで、「autoload.php」だけ宣言すると使えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=733&quot; data-filename=&quot;011.png&quot; style=&quot;width: 449px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;現在時間が朝1時に出力しました。これはcarbonライブラリ問題ではなく、ローカル時間設定の問題です。&lt;/p&gt;&lt;p&gt;composerを利用してライブラリをダウンロード、使用することまで完了しました。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/138.html</guid><pubDate>Fri, 27 Dec 2019 08:52:22 +0900</pubDate></item><item><title>[PHP] PHP 開発環境設定とEclipse(IDE)の設定</title><link>https://www.nowonbun.com/137.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ネットサーフィンすれば、「java vs c#」、「php vs java」、「php　vs c#」など、言語の優秀性、性能、短所などを比較して書いた投稿が多いです。&lt;/p&gt;&lt;p&gt;筆者の場合はプログラム言語を3～4個の言語を運用が可能ですが、言語の間に比較するのは意味がないと思います。&lt;/p&gt;&lt;p&gt;例えば、リンゴとミカンがあります。リンゴが栄養が多いか？ミカンが栄養が多いか？健康にいいものか？どの果物がもっといいかというとみんなリンゴはリンゴの味で美味しいし必要な栄養があるし、ミカンはミカンで美味しいし栄養がありますといいますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;プログラム言語も同じです。これから紹介するphpはウェブスクリプトですが、javaとc#の比べてphpだけの魅力があるプログラム言語です。&lt;/p&gt;&lt;p&gt;それで意味がない比較を少ししてphpの特性を説明します。&lt;/p&gt;&lt;p&gt;phpとjavaを比べるとphpはjavaより基本環境設定が簡単です。「php+apache+db」の設定で終わります。javaの場合は「apache+tomcat+java+db」です。そういえば、「tomcat」だけ追加されたですね。&lt;/p&gt;&lt;p&gt;phpの場合はコンパイル言語ではなく、スクリプト言語なので、ソース修正する時に、別途のコンパイルの手続きが要らなく、画面ページに反映が早いですが、javaの場合は再コンパイル、サーバ再起動などの手続きが必要なので修正から反映までphpの開発時間が圧倒的に早いです。&lt;/p&gt;&lt;p&gt;プログラムのパフォーマンスはプログラム言語の性能もありますが、開発する人(デベロッパー)の能力の比重が多いので、省略します。&lt;/p&gt;&lt;p&gt;まだ、プロぐジェクト管理能力に関してもphpが大きいプロジェクトには悪く、javaが大きいプロジェクトでよいといいますが、これも設計、環境設定なのによって差があるので、どっちがいいかとは言えません。&lt;/p&gt;&lt;p&gt;オープンソースはコミュニティに関してはjavaの方が大きいではないかと思います。でもphpコミュニティも小さくなく、すごく大きいです。筆者はメイン言語がphpよりjavaなので筆者の感じだけの可能性もあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の状況だけみればphpがjavaよりいい言語みたいに見えます。&lt;/p&gt;&lt;p&gt;phpの場合はスレッド処理が難しいです。例えば、phpではゲームサーバーを作られないです。正確には出来ないことではなく、難しいというのが正確だと思います。javaの場合はthreadpoolを利用してソケットサーバーを作ればそれがアプリケーションサーバーになりますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで私の場合は単純な「ウェブ-db」ならphpを利用するし、「ウェブ-バッチ-コアー-db」の場合はjavaを、windowアプリの場合はc#を利用しますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからphpを説明する前にapacheとphpをインストールしましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/103.html&quot; target=&quot;_blank&quot;&gt;[centos] phpインストールする方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/93.html&quot; target=&quot;_blank&quot;&gt;[window] apacheをインストール方法、サービスに登録する方法。&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者はwindow基準で説明します。&lt;/p&gt;&lt;p&gt;上のリンクをみてapacheをインストールしましょう。開発環境を作ることなので、サービス登録まではいらないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=701&quot; data-filename=&quot;001.png&quot; style=&quot;width: 566px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者は「dローカルディスク」の「apachephp」のフォルダにインストールしました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてphpをダウンロードしましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.php.net/downloads.php&quot; target=&quot;_blank&quot;&gt;https://www.php.net/downloads.php&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=707&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=718&quot; data-filename=&quot;003.png&quot; style=&quot;width: 637px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者の場合は「7.3.9」バージョンをダウンロードしました。注意点は「none thread safe」ではなく、「thread safe」バージョンをダウンロードしなければならないです。&lt;/p&gt;&lt;p&gt;zipファイルをダウンロードして「apachephp」の下位フォルダの「php」を生成して圧縮を解凍しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=719&quot; data-filename=&quot;004.png&quot; style=&quot;width: 597px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「php」フォルダにいってみれば、「php.ini-development」のファイルがありますが、「php.ini」ファイルに変更します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=716&quot; data-filename=&quot;005.png&quot; style=&quot;width: 595px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてメモ帳でphp.iniファイルを開いて「 ;extension_dir = &quot;./&quot; 」の部分を探します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=706&quot; data-filename=&quot;006.png&quot; style=&quot;width: 663px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここのコメントを解除して「phpフォルダ+/ext」や「./ext」で修正しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=709&quot; data-filename=&quot;007.png&quot; style=&quot;width: 718px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてapache設定ファイル「conf/http.conf」ファイルに行って下記の内容を追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=715&quot; data-filename=&quot;008.png&quot; style=&quot;width: 793px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そして開始ページをindex.htmlからindex.phpに修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=708&quot; data-filename=&quot;009.png&quot; style=&quot;width: 474px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここまで設定が完了すればphpインストールは完了しました。起動しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、apacheフォルダのhtdocsフォルダの中に「index.php」ファイルを生成して「&amp;lt;?php phpinfo()?&amp;gt;」を追加します。&lt;/p&gt;&lt;p&gt;(※既存にあったindex.htmlファイルは削除しましょう。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=704&quot; data-filename=&quot;010.png&quot; style=&quot;width: 598px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=702&quot; data-filename=&quot;011.png&quot; style=&quot;width: 474px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;apacheフォルダのbinフォルダに移動してapacheを起動しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=703&quot; data-filename=&quot;012.png&quot; style=&quot;width: 467px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ブラウザでlocalhostで接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=720&quot; data-filename=&quot;013.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のphp情報画面が出ると開発設定は完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからはphpを開発するように開発ツール(ide)をインストールしましょう。&lt;/p&gt;&lt;p&gt;php ideに関して様々なツールがありますが、筆者の場合は「eclipse」が慣れているので「eclipse」をインストールしてみましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「eclipse」ホームページに接続します。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.eclipse.org/downloads/?featured_story&quot; target=&quot;_blank&quot;&gt;https://www.eclipse.org/downloads/?featured_story&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;タウンロードページに移動すると下記のイメージみたいに「download package」があります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=710&quot; data-filename=&quot;014.png&quot; style=&quot;width: 387px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.eclipse.org/downloads/packages/&quot; target=&quot;_blank&quot;&gt;https://www.eclipse.org/downloads/packages/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=721&quot; data-filename=&quot;015.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;パッケージページをみれば「php開発用」があります。(参考にeclipseを使うようにはjavaがインストールされなければならないです。)&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/41.html&quot; target=&quot;_blank&quot;&gt;[java スタディ - 1] javaとは？、javaインストール、eclipseインストール&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ダウンロードをして適当なところで圧縮を解凍して「eclipse」を起動しましょう。&lt;/p&gt;&lt;p&gt;起動すると「workspace」を設定するウィンドウがでますが、適当なところを設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=712&quot; data-filename=&quot;016.png&quot; style=&quot;width: 615px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合は「apachephp」の「workspace」に設定しました。&lt;/p&gt;&lt;p&gt;起動した後で「create project」を選択します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=714&quot; data-filename=&quot;017.png&quot; style=&quot;width: 605px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてプロジェクト名前を適当に決めてprojectフォrだを「apachephp\htdocs」に設定します。&lt;/p&gt;&lt;p&gt;つまり、apacheサーバのドキュメントルートを設定することです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=717&quot; data-filename=&quot;018.png&quot; style=&quot;width: 652px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=713&quot; data-filename=&quot;019.png&quot; style=&quot;width: 821px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしたら先に作成した「index.php」がロードされることを確認できます。&lt;/p&gt;&lt;p&gt;ここに「hello.php」を作成して「hello world」を作成してみます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=711&quot; data-filename=&quot;020.png&quot; style=&quot;width: 745px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpは別にコンパイルが要らないので、そのままブラウザに「localhost/hello.php」に接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=705&quot; data-filename=&quot;021.png&quot; style=&quot;width: 447px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の画面まで出るとphpのインストールからideのインストールまで完了できました。&lt;/p&gt;&lt;p&gt;これからphp開発する準備が終わりましたね。&lt;/p&gt;</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/137.html</guid><pubDate>Thu, 26 Dec 2019 07:36:47 +0900</pubDate></item><item><title>[CSS] ブラウザから開発する方法 (developer mode)</title><link>https://www.nowonbun.com/136.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今まで、cssスタイルに関して説明しました。cssスタイルはセレクトからデザインスタイル、トランジションなど様々な機能がありますね。&lt;/p&gt;&lt;p&gt;html編集ツールもあるし、他のプログラム言語はideや開発ツールがありますが、cssの場合はないかと疑問になりますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssの開発は全てウェブアプリケーションで画面の領域です。cssことでサーバサイドの開発はないですね。&lt;/p&gt;&lt;p&gt;画面なので、普通はブラウザにcssの編集や開発ツールがありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=695&quot; data-filename=&quot;001.png&quot; style=&quot;width: 641px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;クロームの基準で「設定」の「その他」の「開発ツール」があります。上のイメージはクロームですが、全てのブラウザがその開発ツールの機能を持っているはずです。&lt;/p&gt;&lt;p&gt;ショットキーでは「ctrl+s方法hift+i」です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;開発ツールを起動すると下記のイメージみたいなタブが出ます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=697&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の「elements」、「console」、「sources」などのサブタブがありますが、「elements」以外はほとんどjavasciprtと関係があるものなので、ここでは省略します。&lt;/p&gt;&lt;p&gt;「elements」タグでみるとウェブサイトのタグ構成が見えます。&lt;/p&gt;&lt;p&gt;「elements」のタブの下を見るとスタイルというタブでcssスタイルがありますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで使用方法は下記通りです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=699&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;開発ツールの右上をクリックして確認した要素を選択します。&lt;/p&gt;&lt;p&gt;選択すると開発ツールの下の部分でcssスタイルがでます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=698&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;様々のスタイルの設定を試すことができますね。今までcssのスタイルや値について説明しましたが、実は開発ツールを利用すると別に全て覚えてスタイル作成する必要はないですね。&lt;/p&gt;&lt;p&gt;ただ、概念だけ知っていれば開発ができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、ブラウザで設定して画面でスタイルが反映することみても実際のソースには反映されないので、気をつけてください。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのツールを見れば、「-webkit-」がつけているcssスタイルがあります。&lt;/p&gt;&lt;p&gt;cssを設定してファイアフォックスやオペラ、ie、クロームを同じページを見ればスタイルが微妙に違います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その時に上の接頭辞でブラウザ別で設定できます。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th style=&quot;white-space: nowrap;&quot;&gt;接頭辞&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;-webkit-&lt;/td&gt;        &lt;td&gt;クローム、サパーリブラウザ&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;-moz-&lt;/td&gt;        &lt;td&gt;ファイアフォックスブラウザ&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;-ms-&lt;/td&gt;        &lt;td&gt;ieブラウザ&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td style=&quot;white-space: nowrap;&quot;&gt;-o-&lt;/td&gt;        &lt;td&gt;オペラブラウザ&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=696&quot; data-filename=&quot;005.png&quot; style=&quot;width: 771px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これはクロームで実行した結果です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=700&quot; data-filename=&quot;006.png&quot; style=&quot;width: 744px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これはファイアフォックスで実行した結果です。&lt;/p&gt;&lt;p&gt;クロームでは右から左に赤から青に設定しましたが、ファイアフォックスは左から右側になりますね。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/136.html</guid><pubDate>Wed, 25 Dec 2019 07:58:13 +0900</pubDate></item><item><title>[CSS] アニメーション (animation)</title><link>https://www.nowonbun.com/134.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;アニメーションスタイルは前述で紹介したトランジションと似ているな効果になります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/132.html&quot; target=&quot;_blank&quot;&gt;[css] トランジション(transition)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;様々な要素を動的に動く効果と関係があることですね。差異というとトランジション(transition)の場合は指定したcssスタイルによる効果を制御するが、アニメーションの場合は様々なアクションをもっと複雑な効果ができることだといいます。&lt;/p&gt;&lt;p&gt;複雑な効果というとトランジション(transition)の場合はスタイルで色の変換、要素移動する時に遅くしたり、早くしたりする制御ですが、アニメーションは要素を回しながら色をキラキラすることができると意味です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合は「loading」イメージやコンテンツの効果よりアイコン要素で動的要素を作る時によく使います。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;style&gt;@keyframes test-animation{	    0% {	        min-width:0%;	        background-color:red;	    }	    50%	{	        min-width:50%;	        background-color:blue;	        color:white;	    }	    100% {	        min-width:100%;	        background-color:green;	        color:white;	    }	}	div.example-box {	    display:inline-block;	    animation-name : test-animation;	    animation-duration :3s;	    animation-delay:1s;	    animation-timing-function:linear;	    animation-fill-mode:both;	    animation-iteration-count: infinite;	    animation-direction:reverse;	}	div.example-box:hover {	    animation-play-state:paused;	}&lt;/style&gt;&lt;div class=&quot;example-box&quot;&gt;マウスをバーの上に置いてみてくたさい。&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;アニメーションスタイルをみれば、ほぼトランジションと似てますね。&lt;/p&gt;&lt;p&gt;「animation-name」はアニメーションスタイルのプロパティを設定することができます。アニメーションプロパティは「@keyframes プロパティ名」形式で作成できます。&lt;/p&gt;&lt;p&gt;プロパティをみれば「0%」、「50%」、「100%」の表現があります。「0%」アニメーションの初期の状況、「100%」は完了した時の状況、50％は「duration」を3sに設定しましたが、アニメーションが開始してから1.5秒後の状況になります。&lt;/p&gt;&lt;p&gt;そして「delay」はアニメーションがローディングされて何秒後から開始するかの設定する項目です。&lt;/p&gt;&lt;p&gt;「animaion-timing-function」はトランジションと同じオプションで「linear」は一定な速度、ease-inは遅くなる速度、ease-outは早くなる速度、ease-in-out遅くなってまた早くなる速度、cubic-bezier(n,n,n,n)速度指定があります。&lt;/p&gt;&lt;p&gt;そして「fill-mode」はアニメーションが終わった時に状況ですが、「animation-iteration-count」で「infinite」で設定しましたので、アニメーションが終わらない設定になっていますね。&lt;/p&gt;&lt;p&gt;もし、「both」ということで設定すると「100%」の状況で残っています。その以外に「initial」に設定すると「0%」に戻りますね。&lt;/p&gt;&lt;p&gt;「animation-direction」はなれるのタイプですが、「reverse」を設定すると「0→100%」ではなく、「100%→0%」に動きます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最後「hover」オプションで「animation-play-state」でアニメーションを止まる効果も付けました。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;style&gt;@keyframes uil-battery-demo-anim4 {    0% {        opacity: 0;    }    10% {        opacity: 0;    }    30% {        opacity: 1;    }}@keyframes uil-battery-demo-anim3 {    0% {        opacity: 0;    }    30% {        opacity: 0;    }    50% {        opacity: 1;    }}@keyframes uil-battery-demo-anim2 {    0% {        opacity: 0;    }    50% {        opacity: 0;    }    70% {        opacity: 1;    }}@keyframes uil-battery-demo-anim1 {    0% {        opacity: 0;    }    70% {        opacity: 0;    }    90% {        opacity: 1;    }}.uil-battery-demo-css .outer {  position: relative;  width: 80px;  border: 13px solid #0d8c30;  height: 120px;  top: 50px;  left: 20px;  border-radius: 10px;}.uil-battery-demo-css .outer:after {  content: &quot; &quot;;  display: block;  position: absolute;  top: -33px;  left: 0px;  width: 52px;  height: 32px;  border-radius: 10px;  background: #0d8c30;}.uil-battery-demo-css .inner {  position: relative;  width: 45px;  height: 19px;  left: 38px;  background: #00f1ff;}.uil-battery-demo-css .inner:nth-of-type(2) {  top: -53px;  animation: uil-battery-demo-anim1 1.5s linear infinite;}.uil-battery-demo-css .inner:nth-of-type(3) {  top: -50px;  animation: uil-battery-demo-anim2 1.5s linear infinite;}.uil-battery-demo-css .inner:nth-of-type(4) {  top: -47px;  animation: uil-battery-demo-anim3 1.5s linear infinite;}.uil-battery-demo-css .inner:nth-of-type(5) {  top: -44px;  animation: uil-battery-demo-anim4 1.5s linear infinite;}.uil-battery-demo-css{  display: inline-block;}&lt;/style&gt;&lt;div class=&quot;uil-battery-demo-css&quot;&gt;    &lt;div class=&quot;outer&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;上の例ではアニメーションタグだけの電池のマークを付けってみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;このアニメーションタグもトランジションと同じ効果で静的なウェブサイトで動的な感じを与える機能ですね。でも、多く使えば、コンテンツの集中度を落としサイトが乱雑になる傾向があるので、適切に使えなければならないと思います。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/134.html</guid><pubDate>Mon, 23 Dec 2019 07:44:49 +0900</pubDate></item><item><title>[CSS] トランスフォーム (transform)</title><link>https://www.nowonbun.com/133.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;トランスフォームとは3dな表現するように回転、拡大、縮小するスタイルといいます。&lt;/p&gt;&lt;p&gt;何かというと下記の形です。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;height:110px;&quot;&gt;&lt;div&gt;  &lt;style scoped=&quot;scoped&quot;&gt;    p.sample{      border: 1px solid #000;      width: 300px;      height: 70px;      font-size: 20px;      margin-left: -50px;      margin-top: -40px;      transform: translate(50px,50px) skew(200deg,-5deg);    }  &lt;/style&gt;  &lt;p class=&quot;sample&quot;&gt;おはようございます。こんにちは。こんばんは。&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;トランスフォーム属性は「transform」,「transform-origin」,「perspective」,「transform-style」,「perspective-origin」,「backface-visibility」の６つがあります。&lt;/p&gt;&lt;p&gt;「transform」の属性は変更スタイルを指定することです。回転しようか(rotate)、移動するか(translate),3d軸で移動(translate3d)するオプションもあります。&lt;/p&gt;&lt;p&gt;心痛なオプション(scew)、拡大、縮小(scale)、3d的な拡大、縮小(scake)もあります。&lt;/p&gt;&lt;p&gt;参照 - &lt;a href=&quot;https://www.w3schools.com/cssref/css3_pr_transform.asp&quot; target=&quot;_blank&quot;&gt;https://www.w3schools.com/cssref/css3_pr_transform.asp&lt;/a&gt;&lt;/p&gt;&lt;p&gt;参照 - &lt;a href=&quot;https://www.w3.org/talks/2012/0416-css-www2012/demos/transforms/demo-translate3d-cube.html&quot; target=&quot;_blank&quot;&gt;https://www.w3.org/talks/2012/0416-css-www2012/demos/transforms/demo-translate3d-cube.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;「transform-origin」は回転の軸を決定するもので基本値は「transform-origin: center center」です。回転、拡大、縮小、心痛で使います。&lt;/p&gt;&lt;p&gt;「perspective」は遠近感の設定です。「perspective-origin」は上の遠近感の設定する時に位置になります。&lt;/p&gt;&lt;p&gt;「perspective-origin:top left;perspective:100px」なら上左の基準で100px距離の遠近感に表示することです。&lt;/p&gt;&lt;p&gt;「transform-style」は上の「perspective」と「perspective-origin」をしようとすると設定する属性です。値は「transform-style: preserve-3d;」だけです。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;height:250px;&quot;&gt;&lt;style scoped=&quot;scoped&quot;&gt;.cube {    perspective-origin: 300px 300px;    perspective: 300px;    transform-style: preserve-3d;    margin-left:100px;    margin-top: 100px;}.cube .face {  display: block;  position: absolute;  width: 100px;  height: 100px;  line-height: 100px;  color: white;  text-align: center;}.cube .front {    background: rgba(0, 0, 0, 0.3);    transform: translatez(50px);}.cube .back {    background: rgba(0, 255, 0, 1);    color: black;    transform: rotatey(180deg) translatez(50px);}.cube .right {  background: rgba(196, 0, 0, 0.7);  transform: rotatey(90deg) translatez(50px);}.cube .left {    background: rgba(0, 0, 196, 0.7);    transform: rotatey(-90deg) translatez(50px);}.cube .top {    background: rgba(196, 196, 0, 0.7);    transform: rotatex(90deg) translatez(50px);}.cube .bottom {    background: rgba(196, 0, 196, 0.7);    transform: rotatex(-90deg) translatez(50px);}&lt;/style&gt;&lt;div class=&quot;cube&quot;&gt;&lt;div class=&quot;face front&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;face back&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;face right&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;face left&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;face top&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;face bottom&quot;&gt;6&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;「backface-visibility」の場合は「transform」要素で裏面になると見えるかどうかの設定です。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;style&gt;.item {    display: inline-block;    width: 100px;    height: 100px;    margin: 10px;    background-color: blue;    transition: 2s;    color:white;}.item-1 {    backface-visibility: visible;}.item-2 {    backface-visibility: hidden;}.item-test-checkbox:checked ~ .item {    transform: rotatey( 180deg )}&lt;/style&gt;&lt;input type=&quot;checkbox&quot; class=&quot;item-test-checkbox&quot;&gt;click!&lt;br&gt;&lt;div class=&quot;item item-1&quot;&gt;テスト&lt;/div&gt;&lt;div class=&quot;item item-2&quot;&gt;テスト&lt;/div&gt;&lt;/blockquote&gt;最後にウェブサイトなどでよく使える簡単なtrasitionの例を作ります。&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;div style=&quot;max-width: 300px;border:1px solid #000;&quot;&gt;  &lt;style&gt;    div#exam1 {      background-color: blue;      width: 100%;      font-size: 15px;      color: white;      padding: 100px;    }    div#exam1.off1 {      transition-property: transform;      transition-duration: 1s;      transform: perspective(100px) rotatex(-90deg);      transform-origin: top;    }    div#exam1.on1 {      transition-property: transform;      transition-duration: 1s;      transform: rotatex(0deg);      transform-origin: top;    }  &lt;/style&gt;  &lt;script&gt;    function exam1() {      if ($(&quot;div#exam1&quot;).hasclass(&quot;on1&quot;)) {        $(&quot;div#exam1&quot;).removeclass(&quot;on1&quot;);        $(&quot;div#exam1&quot;).addclass(&quot;off1&quot;);        return;      }      $(&quot;div#exam1&quot;).removeclass(&quot;off1&quot;);      $(&quot;div#exam1&quot;).addclass(&quot;on1&quot;);      return;    }  &lt;/script&gt;  &lt;div id=&quot;exam1&quot; class=&quot;off1&quot;&gt;    こんにちは。  &lt;/div&gt;  &lt;input type=&quot;button&quot; value=&quot;押してください。&quot; style=&quot;width:100%;&quot; onclick=&quot;exam1()&quot;&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;何処かで上の似てるな効果を見たことありますが、真似して作ってみました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者の場合はウェブサイトで様々なアクションがあることを別に好きではないです。&lt;/p&gt;&lt;p&gt;アクションが多ければ、コンテンツ集中度が落ちるからです。でも、逆にポイントなどの効果を与える時には良いと思いますね。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/133.html</guid><pubDate>Thu, 19 Dec 2019 15:23:12 +0900</pubDate></item><item><title>[CSS] トランジション(transition)</title><link>https://www.nowonbun.com/132.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssのトランジション(transition)とは属性変更時に変更の速度を調節すること、変更のサイクルを設定することだと思われます。&lt;/p&gt;&lt;p&gt;例えば、「div」タグの背景色を黄色にしてマウスを置く(hover)と緑色になることに設定すると思うと実際にタグで設定するとあっというまで処理されますね。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;例&lt;/p&gt;&lt;style&gt;    .example-1 .item{        background-color: yellow;        height: 50px;    }    .example-1 .item:hover{        background-color: green;    }&lt;/style&gt;&lt;div class=&quot;example-1&quot;&gt;    &lt;div class=&quot;item&quot;&gt;マウスを上に置いてください。&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;でもユーザによってこの変更することをスムースにアニメーションのようなアクションを与えたい人が言うと思います。&lt;/p&gt;&lt;p&gt;その時にトランジション(transition)を利用すると設定ができます。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;例&lt;/p&gt;&lt;style&gt;    .example-2 .item{        background-color: yellow;        height: 50px;        transition: background-color 2s ease-out 50ms;    }    .example-2 .item:hover{        background-color: green;        transition: background-color 2s ease-out 50ms;    }&lt;/style&gt;&lt;div class=&quot;example-2&quot;&gt;    &lt;div class=&quot;item&quot;&gt;マウスを上に置いてください。&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;トランジションは４つのスタイル属性があります。４つと言ってもdelayの属性以外にはすべて設定しなければ作動しないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「transition-property」はトランジションの属性を与えるcssスタイル名です。上の例では「background-color」に効果を与えますね。&lt;/p&gt;&lt;p&gt;「transition-duration」は変換する時間です。上の例とは黄色から緑色に変換することで2秒かかりますということですね。&lt;/p&gt;&lt;p&gt;「transition-timing-function」は変換のタイプですが、「ease-out」は初めは遅くて早く変換するタイプ、「ease-in」は初めは早くて遅く変換するタイプ、「ease-in-out」は初めは早くて遅くなるがまた、早く変換するタイプ、「linear」は一定な速度で変換するタイプ、「cubic-bezier(n,n,n,n)」は直接に変換速度を指定するタイプがあります。&lt;/p&gt;&lt;p&gt;「transition-delay」は初めから変換ではなく、指定した時間の後で変換することです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のことは黄色から緑色に変換することで0.5秒あと2秒間に初めは遅く早く変換するスタイルです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その以外にテキストにもアクションを上げることが出来ます。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;例&lt;/p&gt;&lt;style&gt;      textarea.example-textarea {        width: 100%;        height: 50px;        transition-property: height;        transition-duration: 1s;        transition-timing-function: ease-out;      }      textarea.example-textarea:focus {        height: 200px;        transition-property: height;        transition-duration: 5s;        transition-timing-function: ease-in-out;      }    &lt;/style&gt;&lt;div&gt;  &lt;textarea class=&quot;example-textarea&quot; placeholder=&quot;please input text!&quot;&gt;&lt;/textarea&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;実際にウェブサービスでも、色々アクションや広告などのフォーカスを与え視線を集めるようにする方法でよく使っているスタイプです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、逆にウェブページでトランジションが多ければ集中度を落とす逆効果もあります。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/132.html</guid><pubDate>Wed, 18 Dec 2019 20:35:20 +0900</pubDate></item><item><title>[CSS] border(枠)、余白スタイル - border, margin, padding</title><link>https://www.nowonbun.com/128.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssのスタイルと言うと基本的に文字列、余白、枠、位置、状態のスタイルが基本だと思います。&lt;/p&gt;&lt;p&gt;文字列は前述で説明しましたから、今回は枠(border)と余白に関して調べてみます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;htmlタグでよく使うダグだというと「div」タグと「table」タグだと思います。&lt;/p&gt;&lt;p&gt;そのところで「table」タグで例を作ります。&lt;/p&gt;&lt;p&gt;上をみれば、例としてテーブルを作ってヘッダとボディを分けてテーブルのタイトルと内容を分けてタグを作成しました。スタイルを何もない状況でウェブブラウザに見るとテーブルで作成したとは感じられません。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=684&quot; data-filename=&quot;001.png&quot; style=&quot;width: 221px;&quot;&gt;&lt;/p&gt;&lt;p&gt;タグだけではテーブルスタイルができないですね。そうするとcssスタイルでテーブルみたいに修正しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=685&quot; data-filename=&quot;002.png&quot; style=&quot;width: 524px;&quot;&gt;&lt;/p&gt;&lt;p&gt;今回は「table」タグではなく「span」タグでスタイルを付けましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=686&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例では「div」タグの中で「span」タグを入れました。&lt;/p&gt;&lt;p&gt;「div」タグは基本スタイルが「width:100%」です。それは「display:block」タイプですが、「display」タイプには次の投稿で説明します。&lt;/p&gt;&lt;p&gt;そのことで高さ、枠を設定しました。「padding」のスタイルがありますね。&lt;/p&gt;&lt;p&gt;「padding」は内余白、「margin」は外余白です。&lt;/p&gt;&lt;p&gt;例えば「div」と「span」の左の余白は「div」の内余白(padding)の「10px」と「span」の外余白(margin)の「30px」で全て「40px」の余白があります。&lt;/p&gt;&lt;p&gt;また「span」の「width」と「height」で「vw」は「vh」単位があります。&lt;/p&gt;&lt;p&gt;「vw」はブラウザの画面コントロールにのサイズによって「70vw」は幅の「70%」という意味です。「vh」は縦のサイズによって何パーセントと意味ですね。&lt;/p&gt;&lt;p&gt;また、「calc()」でプログラムで関数みたいな文法がありますね。それは括弧の内を計算してって意味です。&lt;/p&gt;&lt;p&gt;つまり、cal(70vw-10px)と意味はブラウザの幅の70パーセントサイズで10pxを引くことですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「margin」や「padding」、「border」の場合は「right」、「left」、「top」、「bottom」の小スタイルを持っています。&lt;/p&gt;&lt;p&gt;「radius」の場合は長方形の角を丸くするスタイルです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「box-shadow」の場合は要素の影を描くスタイルですね。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/128.html</guid><pubDate>Thu, 12 Dec 2019 20:17:24 +0900</pubDate></item><item><title>[CSS] 文字スタイル</title><link>https://www.nowonbun.com/127.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssはhtmlタグでスタイルを付ける言語です。&lt;/p&gt;&lt;p&gt;webの構造は基本文字でなっているドキュメント形式です。そこでcssで文字スタイルを付けるのが基本ではないかと思います。&lt;/p&gt;&lt;p&gt;実はfontのスタイルは上よりもっと多いですね。でも筆者も使ったことがないし、よく使うことは上の以外にはないかと思います。&lt;/p&gt;&lt;p&gt;font-sizeは文字のサイスのスタイルです。文字単位では、「px」、「pt」、「em」、「rem」があります。&lt;/p&gt;&lt;p&gt;「px」の場合はピクセルの単位で文字のサイズを幅、縦がモニターの12ピクセルサイズになることです。&lt;/p&gt;&lt;p&gt;「pt」の場合はフォントサイズの単位ですが、基準としては筆者もよく知りません。でもwordやメモ帳でよく使うフォント単位なので大体にどのサイズかは分かると思います。&lt;/p&gt;&lt;p&gt;「em」と「rem」は比率サイズですが、「em」の場合は違いところで設定したサイズによって倍率、「rem」の場合は「root」のサイズ、つまり「html」で設定したサイズの倍率です。&lt;/p&gt;&lt;p&gt;上の例は「em」で定義しました。「div.test」は「body」の派生位置になっているので、bodyタグの「font-size:12px」の「1倍」で設定されます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「font-style」はイタリックなどの設定です。「font-family」はフォントの種類を設定することですね。&lt;/p&gt;&lt;p&gt;「font-weight」はフォントの太さを設定するところです。数値は何の意味かを詳しくしらないですが、「100」単位で大きい数字だと太くなります。boldやbolder、lighterでも設定ができます。&lt;/p&gt;&lt;p&gt;font-colorはフォントの色の設定ですが、代表的な色は英語で設定してもいいです。でも細かい色はhexの色値で設定ができます。&lt;/p&gt;&lt;p&gt;hexの色は下記のリンクを参照してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://htmlcolorcodes.com/&quot; target=&quot;_blank&quot;&gt;https://htmlcolorcodes.com/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;text-alignはテキストの整列設定です。text-decorationの場合は取り消し線やアンダーラインなどの設定ができます。&lt;/p&gt;&lt;p&gt;text-shadowの場合は影効果ですが、「左右 上下 遠さ」の順番で設定ができます。&lt;/p&gt;&lt;p&gt;white-spaceは文字列の折り返し設定ですが、テーブルの場合は自動に折り返すことがあるので、たまにテーブル見方が崩れることがあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=683&quot; data-filename=&quot;001.png&quot; style=&quot;width: 775px;&quot;&gt;&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/127.html</guid><pubDate>Wed, 11 Dec 2019 21:13:45 +0900</pubDate></item><item><title>[CSS] その他の疑似選択子 - link, visited, target, enabled, disabled, not, active, hover, focus</title><link>https://www.nowonbun.com/126.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回でcss選択子の整理が全て終わると思います。今日、紹介する選択子の使用頻度はよく使いますが、よく使わない。つまり、ウェブサービスのスタイルよって違いますが、よく使うところには使いますが、使わないところは全然使わない、その選択子です。&lt;/p&gt;&lt;p&gt;上の例をみれば、３つの「a」タグと「div」タグ、そして５つの「input」タグがあります。&lt;/p&gt;&lt;p&gt;先、「a」タグの「link」、「visited」は「link」タグによっては一回もクリックしなかった場合の「a」タグを選択、「visited」は一回以上にクリックした場合の「a」タグを選択することです。&lt;/p&gt;&lt;p&gt;つまり、初めは赤色の「a」タグが３つありますが、「選択１」をクリックしてしまうと「選択１」の「a」タグはピンク色になりますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「:target」は「a」タグで「id」によってフォーカスされたものを選択するものです。つまり、ブラウザのアドレスに「#id」名が指しているものが選択されます。&lt;/p&gt;&lt;p&gt;「:enable」と「:disabled」は「input」タグで「diabled」属性が「disabled」か「none」かの選択子です。タグの属性で「enabled=&quot;enabled&quot;」とはありませんので、「disabled=&quot;disabled&quot;」がなければ、「:enabled」の対象、あれば「:disabled」の対象になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「hover」はマウスのイベントによって選択するものです。「hover」は要素でマウスが上にあると選択されます。つまり、テキストボックスの上にマウスを置くとテキストが白色になりますね。&lt;/p&gt;&lt;p&gt;「focus」の場合はテキストボックスの場合、キーボードのカーソルがテキストボックスにあると選択する選択子です。テキストで入力がおわり、他のことを選択するとこの選択子は解除してしまいます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=682&quot; data-filename=&quot;001.png&quot; style=&quot;width: 437px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまでcssの選択子に関してほとんど纏めて説明しました。&lt;/p&gt;&lt;p&gt;cssの選択子はjavascriptやjqueryでも同じ形式で選択子を使うので「css選択子」はウェブで重要な部分だと思います。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/126.html</guid><pubDate>Tue, 10 Dec 2019 07:32:01 +0900</pubDate></item><item><title>[CSS] 疑似要素選択子 - fist-line, first-letter, before, after</title><link>https://www.nowonbun.com/125.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で疑似クラス選択子に関して説明しましたが、今回は疑似要素選択子ですね。&lt;/p&gt;&lt;p&gt;名称が似てますが、選択対象に関しては全然違いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;疑似クラスの場合は同じタグのリストで何番目の要素を選択ということですが、疑似要素選択子はタグ要素を選択するという意味が近いではないかと思います。&lt;/p&gt;&lt;p&gt;この疑似要素はよく使いますが、特に内容を強調やiconを付ける時によく使いますね。&lt;/p&gt;&lt;p&gt;「first-line」は「p」、「span」、「div」タグなどの文字列を入れられるタグに使う選択子です。&lt;/p&gt;&lt;p&gt;文字列で一行目だけ反映する選択子、つまり「br」タグの前までの適用される選択子です。タグの形式ではなく、文字列で選択する特徴をもっています。&lt;/p&gt;&lt;p&gt;「first-letter」の場合、初めの文字だけ反映する選択子です。日本語より英語で似合う選択子で、筆者も使ったことがないですね。&lt;/p&gt;&lt;p&gt;そして「before」と「after」はタグの前後に「content」の値を入れるタグです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=681&quot; data-filename=&quot;001.png&quot; style=&quot;width: 401px;&quot;&gt;&lt;/p&gt;&lt;p&gt;疑似要素選択子はメニューやアクティブ効果などで使うとよい選択子だと思います。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/125.html</guid><pubDate>Mon, 9 Dec 2019 07:28:47 +0900</pubDate></item><item><title>[CSS] 疑似クラス - only-child, only-of-type, empty, empty, root</title><link>https://www.nowonbun.com/123.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で疑似クラス nth-childとnth-of-type,first-child,fist-of-typeに関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/121.html&quot; target=&quot;_blank&quot;&gt;[css] 疑似クラス - nth-child, nth-of-type, nth-last-child, nth-last-of-type&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/122.html&quot; target=&quot;_blank&quot;&gt;[css] 疑似クラス - first-child, last-child, first-of-type, last-of-type&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回の投稿ではonly-child, only-of-type, empty, empty, rootを調べると思いますが、あまり使わない選択子ですね。&lt;/p&gt;&lt;p&gt;それで例を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=676&quot; data-filename=&quot;001.png&quot; style=&quot;width: 254px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてcssで「only-child, only-of-type, empty, empty, root」を作成してまましょう。&lt;/p&gt;&lt;p&gt;「only-child」の疑似クラスは「test」クラスの派生タグで「p」タグが一つだけあることを探します。&lt;/p&gt;&lt;p&gt;そしたら「p」タグを持っている「.test」クラスのエレメントは初めの「div」タグと２つ目の「div」タグですね。でも２つ目の「div」タグは「p」タグ以外に「span」タグも持っているので、「only-child」では初めの「dev &amp;gt; p」タグが文字が赤くなると思います。&lt;/p&gt;&lt;p&gt;次は「only-of-type」です。&lt;/p&gt;&lt;p&gt;「only-of-type」は「only-child」と似てますが、結果は全然違います。&lt;/p&gt;&lt;p&gt;「p:only-child」の場合は全ての派生タグで一つの「p」タグと意味です。&lt;/p&gt;&lt;p&gt;「span:only-of-type」の場合は全ての派生タグではなく「span」のバグが一つだけのタグですね。&lt;/p&gt;&lt;p&gt;「div.test」タグを見ると２つ目と３つ目が「div」タグで「span」タグを持っていますが、２つ目の場合は「span」タグが２つですね。&lt;/p&gt;&lt;p&gt;３番目の「div」タグだけ対象です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「:empty」の場合は派生のタグがないタグを調べます。参考に「&amp;lt;タグ&amp;gt;テスト値&amp;lt;/タグ&amp;gt;」の形式も派生データがあることで判断します。つまり、「:empty」に選択されません。&lt;/p&gt;&lt;p&gt;「:root」は「html」を選択することと同じ意味です。「html」や「body」選択することと「:root」で選択することと差異があるかな。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=677&quot; data-filename=&quot;002.png&quot; style=&quot;width: 599px;&quot;&gt;&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/123.html</guid><pubDate>Thu, 5 Dec 2019 07:29:41 +0900</pubDate></item><item><title>[CSS] 疑似クラス - first-child, last-child, first-of-type, last-of-type</title><link>https://www.nowonbun.com/122.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述で疑似クラス nth-childとnth-of-typeに関して説明しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/121.html&quot; target=&quot;_blank&quot;&gt;[css] 疑似クラス - nth-child, nth-of-type, nth-last-child, nth-last-of-type&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回は「first-child」と「first-of-type」に関して調べてみます。&lt;/p&gt;&lt;p&gt;簡単に「first-child」に説明すると「first-child」は「nth-child(1)」と同じ意味です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=673&quot; data-filename=&quot;001.jpeg&quot; style=&quot;width: 409px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のテーブルで全ての枠を描こうと思いまして、「td」のタグで重ねないようにしようと考えています。&lt;/p&gt;&lt;p&gt;初めの行の初めの列だけの左上の枠を描いて全ての「td」の右下を描くと全ての枠が描くことに出来ます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=674&quot; data-filename=&quot;002.jpeg&quot; style=&quot;width: 441px;&quot;&gt;&lt;/p&gt;&lt;p&gt;参考に「first-child」の代わりに「nth-child(1)」を入れても同じ結果になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=675&quot; data-filename=&quot;003.jpeg&quot; style=&quot;width: 441px;&quot;&gt;&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/122.html</guid><pubDate>Wed, 4 Dec 2019 07:29:26 +0900</pubDate></item><item><title>[CSS] 疑似クラス - nth-child, nth-of-type, nth-last-child, nth-last-of-type</title><link>https://www.nowonbun.com/121.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssの擬似クラスは役12個ごろありますが、そのなかで「nth-child」、「nth-of-type」、「nth-last-child」、「nth-last-of-type」に関して調べてみました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=669&quot; data-filename=&quot;001.jpeg&quot; style=&quot;width: 282px;&quot;&gt;&lt;/p&gt;&lt;p&gt;先、nth-childやnth-last-childは要素のn番目を選択することです。&lt;/p&gt;&lt;p&gt;offsetタイプで数えることではないので初めの番後は「1」から始まります。&lt;/p&gt;&lt;p&gt;(プログラムで配列などを数える時にoffset概念で「0」から数えますが、cssの場合は人間が数えるみたいに「1」から始まります。)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上の例のテーブルで「4」を選択するようには「tbody &amp;gt; tr:nth-child(1) &amp;gt; td:nth-child(2)　&amp;gt; p:nth-child(2)」で選択すると選択されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=670&quot; data-filename=&quot;002.jpeg&quot; style=&quot;width: 282px;&quot;&gt;&lt;/p&gt;&lt;p&gt;でも、nth-childで「8」番を選択しようと思うと少し迷ってしまいます。なぜなら、8番のタグは「p」タグではなく「span」タグなのです。&lt;/p&gt;&lt;p&gt;簡単に考えるとその「td」の中である「span」タグは一つだけなので「tbody &amp;gt; tr:nth-child(2) &amp;gt; td:nth-child(2) &amp;gt; span:nth-child(1)」で選択するとできそうです。&lt;/p&gt;&lt;p&gt;でも、実際はできないですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;理由はnth-childの選択子はタグの要素に関係しずに、選択するからです。つまり、span:nth-child(1)の場合はtr:nth-child(2)の派生タグでspanタグがないので、何も選択されない状況になります。&lt;/p&gt;&lt;p&gt;纏めて、上のspanタグを選択したいなら「tbody&amp;gt;tr:nth-child(2)&amp;gt;td:nth-child(2)&amp;gt;span:nth-child(2)」の選択子で選択しなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;この状況になると何か迷いますね。単純な構造ならすぐ気づきますが、複雑なタグ構造なら迷ういますね。&lt;/p&gt;&lt;p&gt;それでタグ別で順番を選択できる選択子はnth-of-typeです。このことは同じレベルの同じタグ要素のn番目を選択するのができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=671&quot; data-filename=&quot;003.jpeg&quot; style=&quot;width: 282px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後は「nth-last-child」と「nth-last-of-type」の選択子です。この選択子はネーミングで気づきますが、逆に選択する選択子です。&lt;/p&gt;&lt;p&gt;今回は「6」と「5」を選択しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=672&quot; data-filename=&quot;004.jpeg&quot; style=&quot;width: 282px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のタグを見れば、逆の順番で最初が赤色でpタグで逆に最初タグが青色になります。&lt;/p&gt;&lt;p&gt;つまり、6番が赤色で5番が青色になります。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/121.html</guid><pubDate>Tue, 3 Dec 2019 07:22:19 +0900</pubDate></item><item><title>[CSS] CSS Stylesとは？</title><link>https://www.nowonbun.com/118.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述までhtmlに関して説明しました。これからcssに関して調べてみます。&lt;/p&gt;&lt;p&gt;cssは簡単にいうとhtmlタグでドキュメントを作成したらcss styleでドキュメントにスタイルを付けることかな。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;cssを反映するように先にhtmlを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=665&quot; data-filename=&quot;001.png&quot; style=&quot;width: 777px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の例はただhtmlだけ作成しました。htmlタグだけでもウェブドキュメントが作成できますが、何か我々が使う一般ウェブスタイルではないですね。ここでcss styleを入れます。&lt;/p&gt;&lt;p&gt;一応、cssのスタイルを付けるようにはcss selecterを理解しなければならないですが、それは少し複雑なので別途の投稿で説明します。&lt;/p&gt;&lt;p&gt;簡単に見ると「h1」や「li」はタグ名です。「li &amp;gt; a」の場合は「li」タグ直下派生の「a」タグです。つまり「&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;li&amp;gt;」の「a」タグですね。&lt;/p&gt;&lt;p&gt;スペースがある場合(「div div」)はdivタグの派生タグの中で全ての「div」です。&lt;/p&gt;&lt;p&gt;上の選択になります。&lt;/p&gt;&lt;p&gt;各タグを指定して括弧の中がスタイル形式です。スタイルに関しても量が多いので別途の投稿で説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のスタイルをhtmlのドキュメントの「head」タグの中でいれましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=666&quot; data-filename=&quot;002.png&quot; style=&quot;width: 767px;&quot;&gt;&lt;/p&gt;&lt;p&gt;また、ブラウザを再更新すると上の結果になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;htmlタグだけで作られるウェブドキュメントより少し華やかになりました。&lt;/p&gt;&lt;p&gt;これからcssに関してもっと詳しく調べてみましょう。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/118.html</guid><pubDate>Wed, 27 Nov 2019 07:31:26 +0900</pubDate></item><item><title>[HTML] Open graph(ogタグ)</title><link>https://www.nowonbun.com/117.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でタグに関して調べて見ました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/116.html&quot; target=&quot;_blank&quot;&gt;[html] metaタグに関して(seo最適化)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今日、説明しようという「opengraph」も実はhtmlのメタタグの中ですが、その特性が一般メタタグと違うので別の投稿で掲示しました。&lt;/p&gt;&lt;p&gt;「opengraph」はsns(ソーシャルネットワーク)でよく使うタグです。我々がsnsでウェブページのリックを##00コピペーする時に、ただurlアドレスだけあればそのリンクだけではウェブページの情報が何があるかを知らないですね。&lt;/p&gt;&lt;p&gt;例えば、私がツイッターにブログのリンクを掲示した場合、他人がそのリンクが開発サイトかアダルトサイトかは知らないです。また、最近ウェブページでスパムや悪性コードがあるサイトが多い時代にはただリンクだけでは接続が大変ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その時に使うプリビュータグでイメージやリンクの説明、タイトルを表示するようなタグです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=664&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージは私がツイッターに掲示したブログのリンクです。イメージやタイトル、説明が表示されますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「opengraph」に関して調べましょう。&lt;/p&gt;&lt;p&gt;link -  &lt;a href=&quot;http://ogp.me&quot; target=&quot;_blank&quot;&gt;http://ogp.me&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;opengraphの基本タグ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;1. og:title - サイトのタイトルタグ&lt;/p&gt;&lt;p&gt;2. og:type - サイトの種類スタイル (例)video.movie&lt;/p&gt;&lt;p&gt;3. og:image - サイトの代表イメージ&lt;/p&gt;&lt;p&gt;4. og:url - サイトの代表url&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;opengraphのオプションタグ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;1. og:audio - サイトで含めるオーディオファイルurl&lt;/p&gt;&lt;p&gt;2. og:description - サイトの説明&lt;/p&gt;&lt;p&gt;3. og:determiner - 文言の始まる単語の選択ですが、日本語とは関係ないと思います。&lt;/p&gt;&lt;p&gt;4. og:locale - サイトの言語です。基本値は「en_us」ですが、日本語は「ja_jp」です。&lt;/p&gt;&lt;p&gt;5. og:locale:alternate - サイトの多国語設定タグです。&lt;/p&gt;&lt;p&gt;6. og:site_name - サイトタイトルはtitleタグで設定しますが、site_nameは細かいカテゴリタイトルです。&lt;/p&gt;&lt;p&gt;7. og:video - サイトで含めている動画ファイルurl&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;opengraphの構造プロパティ&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;og:オブジェクト:url - イメージあるいはビデオ、オーディオオブジェクトアドレス&lt;/p&gt;&lt;p&gt;og:オブジェクト:secure_url - ssl(https)のアドレス&lt;/p&gt;&lt;p&gt;og:オブジェクト:type - オブジェクトタイプの種類&lt;/p&gt;&lt;p&gt;og:オブジェクト:width - オブジェクト幅&lt;/p&gt;&lt;p&gt;og:オブジェクト:height - オブジェクト高さ&lt;/p&gt;&lt;p&gt;og:オブジェクト:alt - オブジェクト説明&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;arrays(配列)とobject typesのこともありますが、必要がないと思います。&lt;/p&gt;&lt;p&gt;ここまで、opengraphに関して調査しましたが、opengraphは検索最適化とは関係ないです。&lt;/p&gt;&lt;p&gt;googleマニュアルでもopengraphは検索順位で影響があるということはありません。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://support.google.com/webmasters/answer/7451184?hl=ko&quot; target=&quot;_blank&quot;&gt;https://support.google.com/webmasters/answer/7451184?hl=ko&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でも、googleでは他のサイトでどのぐらいリンクされていることは検索順位では影響があります。&lt;/p&gt;&lt;p&gt;つまり、opengraphだけでは検索順位では影響がないですが、opengraphが設定されているサイトはsnsでリンク共有がしやすいので、2次的にグーグルの検索順位で影響があります。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/117.html</guid><pubDate>Tue, 26 Nov 2019 07:42:56 +0900</pubDate></item><item><title>[HTML] Metaタグに関して(SEO最適化)</title><link>https://www.nowonbun.com/116.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブドキュメントの中でメタタグのウェブドキュメントの説明、キーワード、要約情報と考えられます。&lt;/p&gt;&lt;p&gt;htmlはウェブページの基本骨格で考えられるし、cssはこの骨格で色やフォントサイズなどのスタイルを付けてユーザがもっと綺麗、よく見えるようにすることで、javascriptはそのページを動的に変換させ整合性ウェブプロシージャを実装、動的に変換をあげ、プログラムらしく動くようにする機能です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そのなかでhtmlのタグ、タグの中でメタタグということがあり、ウェブページの詳細情報になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;メタタグは３つのアトリビュート(属性)を持っています。&lt;/p&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;1. http-equiv&lt;/p&gt;&lt;p&gt; - ヘッドの値を正義することができる属性だし、この属性でサーバとブラウザ間の作動方法、指示を正義するアトリビュートです。&lt;/p&gt;&lt;p&gt;2. content&lt;/p&gt;&lt;p&gt; - meta情報の内容です。&lt;/p&gt;&lt;p&gt;3. name&lt;/p&gt;&lt;p&gt; - ドキュメントラベルのメタデータの名を正義します。itemprop、http-equivあるいはcharsetの属性の中で一つでも設定された場合、設定できません。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;border: 1px solid;border-left: 5px solid;&quot;&gt;&lt;p&gt;1. 文字コードの種類設定&lt;/p&gt;&lt;p&gt; ウェブページのエンコーディング属性を指定できます。&lt;/p&gt;&lt;p&gt;2. 互換性設定&lt;/p&gt;&lt;p&gt;ブラウザ別の互換性を設定するタグです。ie 8から11、edgeまでの各バージョンによってレンダリング特性が違います。少なくとも色のコードも少し違いますね。&lt;/p&gt;&lt;p&gt;そのことでウェブのドキュメントが何のバージョンに最適化になっているかを設定することです。&lt;/p&gt;&lt;p&gt;最近にはie８バージョンや9、10バージョンに合わせる必要がないので、前よりは重要が少ないです。普通は基本的に入れるタグですが別にこのタグがなくてもウェブサイトを実装することではそんなに問題ないと思います。&lt;/p&gt;&lt;p&gt;3. ビューポート設定&lt;/p&gt;&lt;p&gt;モバイルとpcは解像度は違います。特にモバイルの場合、モニターのサイズによって解像度が高いですが、この解像度によってウェブを設定するとモバイルでは文字がすごく小さく見えると思います。&lt;/p&gt;&lt;p&gt;そして、ウェブの形が解像度ではなくサイズによって表現しなければならないですが、そのことを設定するタグです。&lt;/p&gt;&lt;p&gt;4. 説明タグ(description)&lt;/p&gt;&lt;p&gt;このタグは検索エンジンで説明がでる部分です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=663&quot; data-filename=&quot;001.png&quot; style=&quot;width: 633px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の考えではseoタグの中では一番重要な部分ではないかと思います。このタグの内容がなくても検索ができないか説明表示をしないことではないですが、検索の優先順位で高くできないし、正確なキーワード検索が難しいではないかと思います。&lt;/p&gt;&lt;p&gt;5. クローリング及びインデックス生成、動作制御タグ&lt;/p&gt;&lt;p&gt;このタグは検索エンジンでインデックスになれ、検索エンジンの検索タイプを設定するタイプです。&lt;/p&gt;&lt;p&gt;もしこのタグを省略すれば基本設定のallで認識します。しかし、「none」で設定すればクローリング、リンクを設定しません。「noindex」の場合はクローリングはするけど、検索結果にはでないようにすること、「nofollow」はリンクが見えないようにすることです。&lt;/p&gt;&lt;p&gt;「nosnippet」はイメージと動画はクローリングをしないようにすること、「noimageindex」はイメージや動画が検索結果にでないように設定することです。&lt;/p&gt;&lt;p&gt;私の場合はブログで検索ができないようにする設定がなかったので、普通は「all」で設定します。&lt;/p&gt;&lt;p&gt;6. 指定されたタイムアウトになるとリダイレクト制御タグ&lt;/p&gt;&lt;p&gt;このタグは設定したタイム時間がすぎるとリダイレクトにする機能です。このタグによってはブラウザ別でエラーになることがありますね。&lt;/p&gt;&lt;p&gt;３０秒後で「https://www.nowonbun.com」に繊維すると意味です。&lt;/p&gt;&lt;p&gt;7. アダルトサイトということを設定する。&lt;/p&gt;&lt;p&gt;8. そのた&lt;/p&gt;&lt;p&gt;「author」タグや「keywords」、「copyright」などのタグもあります。でも最近は使わないタグになりますね。&lt;/p&gt;&lt;p&gt;検索エンジンでもクローリングしないし、ウェブページでも設定しないですね。なので、説明を省略します。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.w3schools.com/tags/tag_meta.asp&quot; target=&quot;_blank&quot;&gt;https://www.w3schools.com/tags/tag_meta.asp&lt;/a&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://support.google.com/webmasters/answer/79812?hl=ja&quot; target=&quot;_blank&quot;&gt;https://support.google.com/webmasters/answer/79812?hl=ja&lt;/a&gt;&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/116.html</guid><pubDate>Mon, 25 Nov 2019 20:16:18 +0900</pubDate></item><item><title>[HTML] HTMLタグ構造</title><link>https://www.nowonbun.com/115.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサービスで構成するものは大幅で「html」と「javascript」、「css style」があります。&lt;/p&gt;&lt;p&gt;その中で「html」はxml形式でドキュメントの構造を担当しているし、「css style」はuiデザインスタイルを担当しています。「javascript」の場合はウェブドキュメントを動的に動くようにスクリプトの領域です。&lt;/p&gt;&lt;p&gt;先に「html」の構造に関して調べましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「html」はxml形式を継承したので、基本はタグが開くと閉める構造になっています。&lt;/p&gt;&lt;p&gt;「&amp;lt;タグ&amp;gt;&amp;lt;/タグ&amp;gt;」の構造ですね。閉めるタグには「/」記号を入れて表示します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;基本構造は初めドキュメントタイプ宣言してhtmlタグから始まります。&lt;/p&gt;&lt;p&gt;htmlタグはheadタグとbodyタグが必須にあるし、headタグはtitleタグが必須にあります。&lt;/p&gt;&lt;p&gt;上の構造になっています。headのタグはtitleやメタタグ、style宣言、script宣言などがあります。bodyタグは実際にブラウザから見えるデータタグがあります。&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;タグ&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;html&lt;/td&gt;        &lt;td&gt;htmlタグの最上位タグです。(必須)&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;head&lt;/td&gt;        &lt;td&gt;htmlの下位タグでheadではタイトル、メタ情報があります。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;body&lt;/td&gt;        &lt;td&gt;htmlの下位タグでhtmlのドキュメント情報があります。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;meta&lt;/td&gt;        &lt;td&gt;headの下位タグでドキュメントのメタ情報があります。&lt;br&gt;        メタ情報はドキュメントエンコーディング情報、キーワード、検索サイトの制御設定、外部リンク情報があります。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;title&lt;/td&gt;        &lt;td&gt;headの下位タグでhtmlドキュメントのタイトルで宣言するし、ブラウザのタイトルで表示します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;link&lt;/td&gt;        &lt;td&gt;headの下位タグでライブラリなどをリンクします。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;header&lt;/td&gt;        &lt;td&gt;bodyの下位タグでドキュメントの上端部分を作成します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;main&lt;/td&gt;        &lt;td&gt;bodyの下位タグでとキュメンとのメインコンテンツを作成します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;article&lt;/td&gt;        &lt;td&gt;bodyの下位タグで独立的なコンテンツを作成します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;session&lt;/td&gt;        &lt;td&gt;bodyの下位タグでコンテンツのセッションを区分します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;nav&lt;/td&gt;        &lt;td&gt;bodyの下位タグでドキュメントのナビを作成します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;aside&lt;/td&gt;        &lt;td&gt;bodyの下位タグでmainタグのメインコンテンツと情報を分離します。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;footer&lt;/td&gt;        &lt;td&gt;bodyの下位タグでドキュメントの下端部分を作成します。&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;p&gt;構造的なhtmlを説明しましたが、理解しにくいですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=662&quot; data-filename=&quot;001.jpeg&quot; style=&quot;width: 650px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージはheadタグは省略してbodyタグの領域だけ説明しました。実際には上みたいにタグをまもりながらコード実装はしないですね。&lt;/p&gt;&lt;p&gt;でも、タグを確実に分けて作成するとデータ区分もしやすくなるし、css可読性をよくなります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;既存よりhtml5の場合はタグがたくさんありますね。昔は筆者もこのタグの種類をよく知らずに、全て「div」タグでcssを付けて作成した記憶があります。&lt;/p&gt;&lt;p&gt;その時より、htmlがもっとドキュメントらしいな雰囲気もあるし、みやすいですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;また、このタグにはseoと関係があり、タグの目的をきちんとまもって使うと検索順位でも影響がありそうです。本当かどうかをもっとテストをしなければならないですね。&lt;/p&gt;</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/115.html</guid><pubDate>Fri, 22 Nov 2019 19:49:41 +0900</pubDate></item><item><title>[Ubuntu] PHPをインストール、Composer設定する方法</title><link>https://www.nowonbun.com/114.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でubuntuでapache2をインストールする方法に関して投稿しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/112.html&quot; target=&quot;_blank&quot;&gt;[ubuntu] apache2をインストールする方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ubuntuでphpをインストールする方法は難しくないです。設定は少し必要ですが。&lt;/p&gt;&lt;p&gt;先にapt-getにレポジトリを追加してインストールしましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.liquidweb.com/kb/install-php-7-2-ubuntu-16-04/&quot; target=&quot;_blank&quot;&gt;https://www.liquidweb.com/kb/install-php-7-2-ubuntu-16-04/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;ターミナルでapt repositoryを登録してphp 7.2をインストールすればできます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=650&quot; data-filename=&quot;001.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ubuntuではapache2のphp設定が別に必要ないです。これでphpのインストールは完了です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;apache2のドキュメントパスを修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=654&quot; data-filename=&quot;002.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「/etc/apache2/sites-enabled」フォルダの「000-default.conf」のファイルを修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=657&quot; data-filename=&quot;003.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「/home/htdocs」フォルダに「index.php」ファイルを追加してphpinfo()を作成しましょう。&lt;/p&gt;&lt;p&gt;そして「apache2」を再起動して「localhost」で接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=658&quot; data-filename=&quot;004.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=661&quot; data-filename=&quot;005.jpeg&quot; style=&quot;width: 765px;&quot;&gt;&lt;/p&gt;&lt;p&gt;phpがインストールされたことを確認できます。そして「php.ini」ファイルが何処にあるかを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpが完了しましたから、composerをインストールしましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、curlをインストールしましょう。&lt;/p&gt;&lt;p&gt;そしてcurlのインストールファイルをダウンロードしてインストールします。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://getcomposer.org/download/&quot; target=&quot;_blank&quot;&gt;https://getcomposer.org/download/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=655&quot; data-filename=&quot;006.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまでcomposerはセット完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単にライブラリを一つ連携して使用してみましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;php用composerレポジトリは下記通りです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://packagist.org/&quot; target=&quot;_blank&quot;&gt;https://packagist.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;javaのmavenレポジトリに比べると少し片付けれている雰囲気ではないけど、必要な情報はすべてあるので、良いサイトです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、検索テキストにcarbonと言うことで検索してみましょう。参考にcarbonはphpでデートフォマットを使えるライブラリです。(date関数があるのに？)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=656&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;それでよく使える順位で検索させますが、一番上のリストをクリックしましょう。&lt;/p&gt;&lt;p&gt;様々な説明がありますが、我々はこのライブラリが目的ではなく、composerのリンクが目的なので一応installationの項目を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=653&quot; data-filename=&quot;008.png&quot; style&lt;p=&quot;&quot;&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でubuntuでapache2をインストールする方法に関して投稿しました。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/112.html&quot; target=&quot;_blank&quot;&gt;[ubuntu] apache2をインストールする方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ubuntuでphpをインストールする方法は難しくないです。設定は少し必要ですが。&lt;/p&gt;&lt;p&gt;先にapt-getにレポジトリを追加してインストールしましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.liquidweb.com/kb/install-php-7-2-ubuntu-16-04/&quot; target=&quot;_blank&quot;&gt;https://www.liquidweb.com/kb/install-php-7-2-ubuntu-16-04/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;ターミナルでapt repositoryを登録してphp 7.2をインストールすればできます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=650&quot; data-filename=&quot;001.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ubuntuではapache2のphp設定が別に必要ないです。これでphpのインストールは完了です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;apache2のドキュメントパスを修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=654&quot; data-filename=&quot;002.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「/etc/apache2/sites-enabled」フォルダの「000-default.conf」のファイルを修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=657&quot; data-filename=&quot;003.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「/home/htdocs」フォルダに「index.php」ファイルを追加してphpinfo()を作成しましょう。&lt;/p&gt;&lt;p&gt;そして「apache2」を再起動して「localhost」で接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=658&quot; data-filename=&quot;004.jpeg&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;##005##&lt;/p&gt;&lt;p&gt;phpがインストールされたことを確認できます。そして「php.ini」ファイルが何処にあるかを確認できます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpが完了しましたから、composerをインストールしましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、curlをインストールしましょう。&lt;/p&gt;&lt;p&gt;そしてcurlのインストールファイルをダウンロードしてインストールします。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://getcomposer.org/download/&quot; target=&quot;_blank&quot;&gt;https://getcomposer.org/download/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=655&quot; data-filename=&quot;006.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまでcomposerはセット完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;簡単にライブラリを一つ連携して使用してみましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;php用composerレポジトリは下記通りです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://packagist.org/&quot; target=&quot;_blank&quot;&gt;https://packagist.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;javaのmavenレポジトリに比べると少し片付けれている雰囲気ではないけど、必要な情報はすべてあるので、良いサイトです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、検索テキストにcarbonと言うことで検索してみましょう。参考にcarbonはphpでデートフォマットを使えるライブラリです。(date関数があるのに？)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=656&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;それでよく使える順位で検索させますが、一番上のリストをクリックしましょう。&lt;/p&gt;&lt;p&gt;様々な説明がありますが、我々はこのライブラリが目的ではなく、composerのリンクが目的なので一応installationの項目を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=653&quot; data-filename=&quot;008.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後、「composer.json」を作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=651&quot; data-filename=&quot;009.jpeg&quot; style=&quot;width: 462px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「composer install」で当該なレポジトリをタウンロードしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=660&quot; data-filename=&quot;010.jpeg&quot; style=&quot;width: 791px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これでインストールが完了したらしいです。ダウンロードしたライブラリを使ってみましょう。&lt;/p&gt;&lt;p&gt;作成が完了されたら「localhost」で確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=652&quot; data-filename=&quot;011.jpeg&quot; style=&quot;width: 373px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これでubuntuでphpとcomposerが使用できるので、開発環境のセットは完了ですね。&lt;/p&gt;=&quot;width: 848px;&quot;&amp;gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;その後、「composer.json」を作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=651&quot; data-filename=&quot;009.jpeg&quot; style=&quot;width: 462px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「composer install」で当該なレポジトリをタウンロードしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=660&quot; data-filename=&quot;010.jpeg&quot; style=&quot;width: 791px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これでインストールが完了したらしいです。ダウンロードしたライブラリを使ってみましょう。&lt;/p&gt;&lt;p&gt;作成が完了されたら「localhost」で確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=652&quot; data-filename=&quot;011.jpeg&quot; style=&quot;width: 373px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これでubuntuでphpとcomposerが使用できるので、開発環境のセットは完了ですね。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/114.html</guid><pubDate>Wed, 13 Nov 2019 07:35:07 +0900</pubDate></item><item><title>[Ubuntu] テーマ(Arc)を変更する方法(tweak)</title><link>https://www.nowonbun.com/113.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者は貧しいデベロッパーなのでwindowosよりubuntuをよく使っています。windowは高いですが、ubuntuは無料だからですね。&lt;/p&gt;&lt;p&gt;でも、ubuntuが貧しい人が使うものではないです。もちろん、windowよりubuntuを好きなマニアックも多いです。&lt;/p&gt;&lt;p&gt;macはどうかな。。macは高いですね。筆者が考えてmacよりwindowがアプリも多いし、macが楽なことはよくしりません。それは人によって違うですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ubuntuを初めて使う時には基本テーマが綺麗ではないですね。少しやぼったいかな。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=649&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でもubuntuの特徴の一つがuiテーマを変更ができることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;筆者は別に気になるテーマがあることではありません。ただ、googleを検索して一番人気があるものを選択してインストールして使いますね。&lt;/p&gt;&lt;p&gt;今の経験でそのほうが一番満足だったんです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.omgubuntu.co.uk/2017/11/best-gtk-themes-for-ubuntu&quot; target=&quot;_blank&quot;&gt;https://www.omgubuntu.co.uk/2017/11/best-gtk-themes-for-ubuntu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のリンクで人気テーマを検索するとarcテーマが一位でよく使うと書いています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=646&quot; data-filename=&quot;002.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のサイトは信用性が高いチャートや特別なサイトではなく、ただgoogle検索で一番上で表示されたサイトです。筆者が使うのはどのテーマが一位かが重要ではなく、arcデザインがいいし、そのサイトでただ１位だったという参照だけです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、テーマをインストールするようには「tweak」と言うプログラムがインストールされなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=635&quot; data-filename=&quot;003.jpeg&quot; style=&quot;width: 708px;&quot;&gt;&lt;/p&gt;&lt;p&gt;私の場合は「tweak」というプログラムはもうインストールされています。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=636&quot; data-filename=&quot;004.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてターミナルでターマをダウンロードしましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.ubuntupit.com/install-arc-theme-icon-ubuntu-fedora-linux-desktop/&quot; target=&quot;_blank&quot;&gt;https://www.ubuntupit.com/install-arc-theme-icon-ubuntu-fedora-linux-desktop/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;ダウンロードが完了されるとapplicationsとiconにarcの語頭が付けているテーマがあることを確認できます。筆者の場合は「arc-dark」が気になって選択しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=638&quot; data-filename=&quot;005.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてshellとdockerのテーマも変更しましょう。&lt;/p&gt;&lt;p&gt;gnomeのshell拡張をターミナルでインストールしましょう。&lt;/p&gt;&lt;p&gt;firefoxで下記のサイトを接続しましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://extensions.gnome.org/&quot; target=&quot;_blank&quot;&gt;https://extensions.gnome.org/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=644&quot; data-filename=&quot;006.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして確認add-onをインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=642&quot; data-filename=&quot;007.jpeg&quot; style=&quot;width: 760px;&quot;&gt;&lt;/p&gt;&lt;p&gt;このサイトはgnom(ubuntuのグラフィックユーザインタフェースのos(gui))の拡張が可能なウィジェットがあるサイトです。テーマを変わるように必要なウィジェットは３つです。&lt;/p&gt;&lt;p&gt;メインリストで見えないと別々に検索すればでます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=648&quot; data-filename=&quot;008.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストールはウィジェットのページで上左に「off/on」のボタンがありますがそれを「on」にすればインストールします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=640&quot; data-filename=&quot;009.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=643&quot; data-filename=&quot;010.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=645&quot; data-filename=&quot;011.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;また、tweakのプログラムを実行するとshellの部分でビックリマークがなくなって設定できるようにドロップダウンがでます。(もしなければ、tweakプログラムを終了して再実行するとできます。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=639&quot; data-filename=&quot;012.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;筆者の場合はshellも「arc-dark」で設定しました。上のshellのテーマが変わったことを確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=634&quot; data-filename=&quot;013.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてextensionsタブに移動してdash to dockの画面に移動しましょう。&lt;/p&gt;&lt;p&gt;dockをbottomで設定してautohideをoffにしましょう。onにしたい方はそのままにおいてもいいですが、なんかバグがあるかなたまに反応しない時がありますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=647&quot; data-filename=&quot;014.jpeg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてiconサイズは画面によって変更すればよいです。個人的に「24」の設定がいいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=637&quot; data-filename=&quot;015.jpeg&quot; style=&quot;width: 640px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてappearanceタブのshrink the dashをチェックしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=641&quot; data-filename=&quot;016.jpeg&quot; style=&quot;width: 600px;&quot;&gt;&lt;/p&gt;&lt;p&gt;完成になりました。&lt;/p&gt;&lt;p&gt;ubuntuはこんなにテーマを自由に変更ができるのでよいです。探したらマックのスタイルのmacbuntuもあります。マックスタイルを好きなかたはそれを使ったらよいですね。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/113.html</guid><pubDate>Tue, 12 Nov 2019 07:40:11 +0900</pubDate></item><item><title>[Ubuntu] Apache2をインストールする方法</title><link>https://www.nowonbun.com/112.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でcentosでapacheをインストールする方法に関して投稿したことがあります。別にubuntuだって差があることではないです。&lt;/p&gt;&lt;p&gt;「yum」のインストールから「apt-get」で変わったことと、環境設定ファイルパスが違うということですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;apt-getを利用してapache2をインストールします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=628&quot; data-filename=&quot;001.png&quot; style=&quot;width: 733px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストールが終わったら環境設定を修正しましょう。&lt;/p&gt;&lt;p&gt;環境設定ファイルは「/etc/apache2/apache2.conf」であります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=633&quot; data-filename=&quot;002.png&quot; style=&quot;width: 720px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ubuntu環境でも普通のapache設定とはそんなに差がないです。まだ、javaやtomcatとphpをインストールしなかったのでただ静的ウェブサーバですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の場合は「apache2 -t」というコマンドを実行すればエラーが表示されますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=629&quot; data-filename=&quot;003.png&quot; style=&quot;width: 732px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のファイルの環境ファイルを登録すると解決されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=630&quot; data-filename=&quot;004.png&quot; style=&quot;width: 735px;&quot;&gt;&lt;/p&gt;&lt;p&gt;また、ブラウザでローカルを接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=631&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ウェブサーバを立ち上げるのは完了しました。&lt;/p&gt;&lt;p&gt;ウェブページの基本ディレクトリは「/var/www/html」です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=632&quot; data-filename=&quot;006.png&quot; style=&quot;width: 721px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/112.html</guid><pubDate>Mon, 11 Nov 2019 07:29:19 +0900</pubDate></item><item><title>[Ubuntu] 「acquire the dpkg frontend lock」のエラーを解決方法</title><link>https://www.nowonbun.com/111.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ubuntuを利用する時に「apt-get」コマンドをよく使います。パッケージをインストールする時やアップデートする時や。。。&lt;/p&gt;&lt;p&gt;その時に、たまに「acquire the dpkg frontend lock」エラーが発生しますが、その時に解決方法です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;実は「acquire the dpkg frontend lock」のエラーはインストールやアップデート中でパソコンの電源を切る時、apt-getのロックがそのまま残っているままで「apt-get」でまたインストールやアップデートすると発生することですね。&lt;/p&gt;&lt;p&gt;また、別途のターミナルで「apt-get」を使う時も発生します。その時には解除するとngですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=624&quot; data-filename=&quot;001.png&quot; style=&quot;width: 733px;&quot;&gt;&lt;/p&gt;&lt;p&gt;筆者の場合は「apt-get upgrade」中でパソコンパワを消してしまって、また起動してアップデードコマンドを実行したら発生しました。&lt;/p&gt;&lt;p&gt;先は「lock」をすべて削除します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=625&quot; data-filename=&quot;002.png&quot; style=&quot;width: 733px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=626&quot; data-filename=&quot;003.png&quot; style=&quot;width: 735px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後でまた「apt-get upgrade」のコマンドを実行しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=627&quot; data-filename=&quot;004.png&quot; style=&quot;width: 733px;&quot;&gt;&lt;/p&gt;&lt;p&gt;lock関係なエラーがなくなってupgradeが実行されました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参照 - &lt;a href=&quot;https://www.linuxuprising.com/2018/07/how-to-fix-could-not-get-lock.html&quot; target=&quot;_blank&quot;&gt;https://www.linuxuprising.com/2018/07/how-to-fix-could-not-get-lock.html&lt;/a&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/111.html</guid><pubDate>Sun, 10 Nov 2019 22:20:09 +0900</pubDate></item><item><title>[Ubuntu] JavaインストールとEclipseをインストールする方法</title><link>https://www.nowonbun.com/110.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ubuntuのosはcentosと比べてサーバよりデスクトップで使う方が多いです。なので、centosではプログラム開発することより完成したプログラムをデプロイすることが多いです。&lt;/p&gt;&lt;p&gt;でもubuntuの場合はデスクトップで使うのでデプロイより開発する方法が多いですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaをインストールとjavaのideのeclipseをインストールして開発完了を作ってみましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;初期ubuntuをインストールするオプションでjavaをインストールする時もあるので一応インストールされているかを確認しましょう。&lt;/p&gt;&lt;p&gt;上のコマンドでjavaバージョン情報がでるとインストールされているし、「not found」というメッセージがでるとインストールされてないことです。&lt;/p&gt;&lt;p&gt;インストールは「apt install default-jdk」でインストールしました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=613&quot; data-filename=&quot;001.png&quot; style=&quot;width: 733px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=618&quot; data-filename=&quot;002.png&quot; style=&quot;width: 734px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=617&quot; data-filename=&quot;003.png&quot; style=&quot;width: 730px;&quot;&gt;&lt;/p&gt;&lt;p&gt;(イメージは間違ってjreをインストールしました。jdkも同じです。)&lt;/p&gt;&lt;p&gt;javaがインストールされたらeclipseサイトに接続しましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.eclipse.org/downloads/&quot; target=&quot;_blank&quot;&gt;https://www.eclipse.org/downloads/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=620&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=622&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=621&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ダウンロードが完了したら圧縮を解凍しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=619&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これから実行しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=616&quot; data-filename=&quot;008.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;正常に実行しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;eclipseの場合はショートカットはwindowみたいに簡単に作られないですね。ショートカットファイルを作成しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=615&quot; data-filename=&quot;009.png&quot; style=&quot;width: 732px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=623&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=614&quot; data-filename=&quot;011.png&quot; style=&quot;width: 437px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/110.html</guid><pubDate>Fri, 8 Nov 2019 07:31:45 +0900</pubDate></item><item><title>[Ubuntu] MariaDB(Mysql)をインストールする方法</title><link>https://www.nowonbun.com/109.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;mariadbに関しては以前centosでインストールする方法で説明したことがあります。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/106.html&quot; target=&quot;_blank&quot;&gt;[centos] mariadb(mysql)をインストール&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ubuntuもcentosでインストールすることと似てますね。&lt;/p&gt;&lt;p&gt;ただ、yumではなく、apt-getを利用してインストールすることだけです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、ターミナルで接続して(ctrl + alt + t)apt-getでmariadbをインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=605&quot; data-filename=&quot;001.png&quot; style=&quot;width: 737px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=607&quot; data-filename=&quot;002.png&quot; style=&quot;width: 733px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これでインストールは完了しました。環境設定しましょう。&lt;/p&gt;&lt;p&gt;「/etc/mysql/mariadb.conf.d/」に移動して「50-server.cnf」を下記の設定で追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=610&quot; data-filename=&quot;003.png&quot; style=&quot;width: 708px;&quot;&gt;&lt;/p&gt;&lt;p&gt;次は「50-client.cnf」で下記の設定を追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=611&quot; data-filename=&quot;004.png&quot; style=&quot;width: 708px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてmariadbを再起動しましょう。&lt;/p&gt;&lt;p&gt;そして「mysql -u root -p」で接続します。初めはパスワードが設定されてないのでそのままenterキーで接続できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=606&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;初めは「root」のパスワードを変更しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=612&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「root」設定を完了しましたので、ユーザを追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=609&quot; data-filename=&quot;007.png&quot; style=&quot;width: 732px;&quot;&gt;&lt;/p&gt;&lt;p&gt;設定を完了しました。これからsqlブラウザで接続を確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=608&quot; data-filename=&quot;008.png&quot; style=&quot;width: 658px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/109.html</guid><pubDate>Thu, 7 Nov 2019 07:51:58 +0900</pubDate></item><item><title>[Ubuntu] Chromeをインストールする方法</title><link>https://www.nowonbun.com/108.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;linuxには大きい幅で種類が２つがありますね。redhat系のredhatとcentosとdebian系のubuntuがありますね。&lt;/p&gt;&lt;p&gt;redhat系はほとんどサーバosで使います。一般、デスクトップosモードもありますが、uiが可能なアプリも少ないし使用にくいですね。でも、プロセスやフリージング(パソコンが凍る現象)が少ないのでサーバとして合うと思います。&lt;/p&gt;&lt;p&gt;debian系のubuntuはcentosより安定性が落ちるけれど、互換アプリ、uiが可能なアプリが多いし、インストールがしやすいです。&lt;/p&gt;&lt;p&gt;コミュニティーも大きいので問題がある時にすぐ調べることも出来ます。&lt;/p&gt;&lt;p&gt;普通はデスクトップでwindowを使いますが、ライセンス費用がかかるので安くパソコンを運用したいならこのubuntuもいいではないかと思います。&lt;/p&gt;&lt;p&gt;筆者はパソコンが何台にありますが、windowは一台でその後は全てubuntuですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ubuntuは初期ブラウザでfirefoxがインストールされています。firefoxもいいブラウザですが、最近は多いウェブサイトがchromeでuiデザインが合わせていますのでchromeもインストールする必要がありますね。&lt;/p&gt;&lt;p&gt;先にgoogleのchromeページに接続します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=603&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;多分、ubuntuで接続するとlinux系のインストールができるファイルがでます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=602&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;そしてwindow環境みたいにダウンロードボタンを押下すると選択画面が出ます。rpmはyumでインストールすることで(実はrpmはrpmでインストールしなければならないですが、yumでもインストールができます。)debがubuntu環境でインストールするファイルなのでダウンロードしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=600&quot; data-filename=&quot;003.png&quot; style=&quot;width: 509px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ダウンロードが終われば実行します。そしたらubuntu software管理ウィンドウが開きますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=601&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ここでインストールボタンを押下してインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=604&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;インストールが完了したらluncher(画面の左下)をクリックするとchromeがインストールされたことを確認できます。add to favoritesをクリックしてdockに固定ができます。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/108.html</guid><pubDate>Wed, 6 Nov 2019 19:48:19 +0900</pubDate></item><item><title>[CentOS] YUMについて、YUMが出来ない場合処理方法</title><link>https://www.nowonbun.com/107.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々がよく使うウィンドウ環境はインストールパッケージファイルをダウンロードしてダブルクリックでインストールができます。&lt;/p&gt;&lt;p&gt;でも、linuxの場合はそんな簡単ではないです。サーバ起動する時に登録しなければならないし、パッケージ管理、依存性管理もしなければならないです。&lt;/p&gt;&lt;p&gt;それを一々で手動でするとすごく面倒になりますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それを管理するプログラムがありますが、それが「yum」です。&lt;/p&gt;&lt;p&gt;「yum」とは「yellowdog updater modified」の略語で「rpm基盤のシステムのため、自動アップデータ、パッケージ管理ツール」です。また「yum」は自動に依存性を処理してくれるし、rpmパッケージを安全にインストール、削除及びアップデートのため、必ずしなければならないものを自ら処理します。&lt;/p&gt;&lt;p&gt;簡単に説明するとスマートフォンなどであるappストアと似てます。パッケージは全て無料ですね。昔、スマートフォンがある前には不慣れな概念でしたが。。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;纏めて、「yum」は簡単で使用可能し、接近性もよいパッケージ管理ツールです。&lt;/p&gt;&lt;p&gt;「yum」に関して使用方法はコマンドで「yum help」で詳しく確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=598&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;table-responsive&quot;&gt;  &lt;table class=&quot;table table-striped table-bordered table-condensed&quot;&gt;    &lt;thead&gt;      &lt;tr style=&quot;background-color:#dad7d7&quot;&gt;        &lt;th&gt;コマンド&lt;/th&gt;        &lt;th&gt;説明&lt;/th&gt;      &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;      &lt;tr&gt;        &lt;td&gt;yum check-update&lt;/td&gt;&lt;td&gt;現在、インストールされたプログラムでアップデータしたことをチェックします。&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum clean all&lt;/td&gt;&lt;td&gt;キャッシュされたリストをクリアする。&lt;/td&gt;    &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum deplist&lt;/td&gt;&lt;td&gt;yumパッケージによる依存性テスト。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum downgrade パッケージ&lt;/td&gt;&lt;td&gt;yumをとおってパッケージをダウングレードする。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum erase パッケージ&lt;/td&gt;&lt;td&gt;yumをとおってシステムで削除する。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum groupinfo グループ&lt;/td&gt;&lt;td&gt;グループパッケージの情報を表示。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum groupinstall グループ&lt;/td&gt;&lt;td&gt;グループパケージをインストールする。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum grouplist グループ&lt;/td&gt;&lt;td&gt;グループリストに関する情報を確認する。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum groupremove グループ&lt;/td&gt;&lt;td&gt;グループリストに関して削除する。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum help&lt;/td&gt;&lt;td&gt;yumの使用方法を確認する。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum info グループまたはパッケージ&lt;/td&gt;&lt;td&gt;パッケージまたはグループのパッケージを詳しく確認する。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum install パッケージ&lt;/td&gt;&lt;td&gt;システムでパッケージのinstallを実施する。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum list&lt;/td&gt;&lt;td&gt;サーバにあるグループ及びパッケージのリスト&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum localinstall パッケージ&lt;/td&gt;&lt;td&gt;ローカルでインストールをします。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum makecache&lt;/td&gt;&lt;td&gt;キャッシュを再作成する。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum provides ファイルパス名&lt;/td&gt;&lt;td&gt;ファイルで提供するパッケージ情報&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum reinstall パッケージ&lt;/td&gt;&lt;td&gt;パッケージを再インストールする。&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum update パッケージ&lt;/td&gt;&lt;td&gt;パッケージをアップデータする。(yumのバージョン情報など)&lt;/td&gt;        &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;yum upgrade パッケージ&lt;/td&gt;&lt;td&gt;パッケージをアップグレードする。(実際に当該プログラムを更新する。)&lt;/td&gt;      &lt;/tr&gt;    &lt;/tbody&gt;  &lt;/table&gt;&lt;/div&gt;&lt;h2&gt;&lt;b&gt;&lt;span&gt;centosを初めにインストールする時にyumが動作しない時&lt;/span&gt;&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;基本的に設定されているyumの接続urlが間違っていることもあるし、様々な理由でできない時があります。&lt;/p&gt;&lt;p&gt;その時に参照すればよいセット方法です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「/etc/resolv.conf」でdnsサーバ設定をしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=597&quot; data-filename=&quot;002.png&quot; style=&quot;width: 537px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のサーバアドレスは上は「cloudflare」で下は「google」dnsサーバです。速度及び安全性が一番いいものではないかと思います。&lt;/p&gt;&lt;p&gt;それに変更してyumの動作確認しましょう。&lt;/p&gt;&lt;p&gt;それでも出来なかった場合にはレポジトリを修正しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;基本的にcentosで提供するレポジトリで接続ができなければ、日本では「riken.jp」で提供するcentosレポジトリを使ったら良いです。&lt;/p&gt;&lt;p&gt;基本centosのレポジトリは外海だからかな、たまに遅くなり、接続が失敗する時あります。国内のレポジトリを使うとその可能性が低いので良いと思います。&lt;/p&gt;&lt;p&gt;レポジトリを修正するためにはvim編集ツールで「/etc/yum.repos.d/centos-base.repo」を修正すると良いです。&lt;/p&gt;&lt;p&gt;レポジトリ中で「baseurl」のurlアドレスが「mirrorlist.centos.org」を 「ftp.riken.jp/linux」に修正しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=599&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;設定した後でまた「yum」をテストしてそれでもエラーがなると再起動することでできます。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/107.html</guid><pubDate>Tue, 5 Nov 2019 07:21:20 +0900</pubDate></item><item><title>[CentOS] MariaDB(Mysql)をインストール</title><link>https://www.nowonbun.com/106.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;今回はcentosでmariadbをインストールしましょう。mariadbは旧mysqlと同じですが、mysqlがoracle社に買収されて配布しましたが、最近mysqlも無料ではなく、一部有料政策に変わって最初開発者が退職して無料sqlを作ったことがmaraidbです。&lt;/p&gt;&lt;p&gt;なので、mariadbをcentosにインストールしましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;mariadbをインストールする方法で様々がありますが、sourceで直接にコンパイルする方法、binaryでインストールする方法、yumを利用してインストールする方法があります。&lt;/p&gt;&lt;p&gt;筆者の場合は別に基本設定で使うつもりなので、管理がしやすいなyumでインストールします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=590&quot; data-filename=&quot;001.png&quot; style=&quot;width: 739px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のリストの中で「mariadb-server.x86_64」をインストールします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=592&quot; data-filename=&quot;002.png&quot; style=&quot;width: 739px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;インストールが終わったらmariadbの環境設定しましょう。環境設定ファイルは「/etc/my.cnf」であります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=596&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;設定が完了したら起動設定に登録しましょう。&lt;/p&gt;&lt;p&gt;ここまでサーバ側の設定は完了しました。&lt;/p&gt;&lt;p&gt;内部データベースのユーザ追加とパスワード設定をしなければならないです。&lt;/p&gt;&lt;p&gt;一応、mysqlを接続してmysql dbでユーザテーブルを確認します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=593&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;見るとパスワードが設定されてないです。&lt;/p&gt;&lt;p&gt;一応、パスワード全体を設定しましょう。&lt;/p&gt;&lt;p&gt;上の場合は「root」ユーザはサーバローカルの場合はよいですが、外部だと接続ができません。でもrootのidを外部で公開する方はセキュリティの考えでは嫌ですね。&lt;/p&gt;&lt;p&gt;それでユーザを追加しましょう。&lt;/p&gt;&lt;p&gt;筆者の場合はcクラス192.168.0.%で公開しましたが、全体公開はただ「%」で設定すると全「ip」で公開されます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=594&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;最後でファイアウォールを開放しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=591&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;サーバではなく、自分のパソコンでsql編集ツールを利用して接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=595&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/106.html</guid><pubDate>Mon, 4 Nov 2019 18:36:24 +0900</pubDate></item><item><title>[CentOS] FTPインストールする方法(vsftpd)</title><link>https://www.nowonbun.com/105.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でsambaのネットワークドライブに関してインストールしました。sambaの場合は「c class」中で簡単にファイルを電送しますが、問題は「c class」内部ではなく、外部ならsambaを利用ができません。&lt;/p&gt;&lt;p&gt;なので、外部でサーバにファイルを電送するようにはファイルプロトコールが必要ですが、それが「ftp」です。&lt;/p&gt;&lt;p&gt;ftpとは「file transfer protocol」の略語でサーバの初期設定でsambaほど重要な設定だと考えられます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで「ftp」をインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=587&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストールは完了しました。設定ファイルで設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=588&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;サーバ起動時、vsftpdも起動されるような設定です。&lt;/p&gt;&lt;p&gt;次はファイアウォールを解除しましょう。&lt;/p&gt;&lt;p&gt;次に「selinux」を解除する方法です。&lt;/p&gt;&lt;p&gt;設定は完了しました。これから接続して確認しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=589&quot; data-filename=&quot;003.png&quot; style=&quot;width: 576px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=586&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;接続が完了しました。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/105.html</guid><pubDate>Fri, 1 Nov 2019 07:30:32 +0900</pubDate></item><item><title>[CentOS] SAMBAインストール方法</title><link>https://www.nowonbun.com/104.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;会社や組織グループの中でよくいうネットワークドライブという格納の場所があります。&lt;/p&gt;&lt;p&gt;でも、ネットワークドライブではなく、正式なプロコール名は「samba」です。&lt;/p&gt;&lt;p&gt;sambaとは「session message block」というプロトコールでcクラスネットワーク、すなわち192.168.0.1のipを持っている環境なら、192.168.0.xxxの範囲でプリンターやファイルなどを共有するようなプログラムということです。&lt;/p&gt;&lt;p&gt;それでsambaをインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=581&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストールはyumを利用して簡単に完了しました。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ファイアウォールの解除と共有フォルダーを設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=582&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;解除されました。共有フォルダーを設定します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=584&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;次はsambaパスワードを設定しましょう。このパスワードはサーバを接続パスワードではなく、samba接続パスワードです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=583&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;サーバが起動する時にsambaを起動するような設定をしましょう。&lt;/p&gt;&lt;p&gt;参考にselinuxで接続できない場合は解除する方法を下記通りです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=585&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;接続が確認できました。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/104.html</guid><pubDate>Wed, 30 Oct 2019 07:39:42 +0900</pubDate></item><item><title>[CentOS] PHPインストールする方法</title><link>https://www.nowonbun.com/103.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpとは「apache」サーバの基盤で動作するウェブスクリプトプログラム言語です。phpはjavaとc#と比べてコンパイル言語ではなく、スクリプト言語です。&lt;/p&gt;&lt;p&gt;phpの良い点は軽く、早く開発できるし、サーバの再起動がなしでソース修正が可能なことが利点ではないかと思います。悪い点はやはりスクリプト言語なので、サイトが大きくなると遅くなるしソース管理が難しくなるということです。&lt;/p&gt;&lt;p&gt;まぁ。開発者の腕によって違うことですからね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それではcentosでphpをインストールしましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;phpの場合は「yum」を通ってインストールしましょう。&lt;/p&gt;&lt;p&gt;先、listを通ってphpを確認しましょう。でも、phpバージョンが低いですね。。。現在は「php7」なのに。。「yum」ではなく、直接にインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=570&quot; data-filename=&quot;001.png&quot; style=&quot;width: 788px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=571&quot; data-filename=&quot;002.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「yum」のconfigで「php5.4」を非活性化して「php7.3」を活性化しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=575&quot; data-filename=&quot;003.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=576&quot; data-filename=&quot;004.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=577&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これからインストールする雰囲気になります。&lt;/p&gt;&lt;p&gt;phpと関係あるライブラリをインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=579&quot; data-filename=&quot;005.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストールが完了でサービスを活性化します。&lt;/p&gt;&lt;p&gt;これで「php-v」でphpのバージョンを確認すればphpがよくインストールされていることを確認できます。&lt;/p&gt;&lt;p&gt;でも、ただのphpインストールだけではなく、「apache」を通ってphpが動くことを確認しなければ完了ではないですね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=580&quot; data-filename=&quot;006.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これから「httpd」の環境設定ディレクトリに移動しましょう。&lt;/p&gt;&lt;p&gt;httpd.confの下の部分で下記の構文を追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=574&quot; data-filename=&quot;007.png&quot; style=&quot;width: 789px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「dir_module」でスタートページで「index.php」を追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=573&quot; data-filename=&quot;008.png&quot; style=&quot;width: 727px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「/var/www/http」のディレクトリに「phpinfo.php」ファイルを作成して下記の内容を入れましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=572&quot; data-filename=&quot;009.png&quot; style=&quot;width: 589px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてブラウザで./phpinfo.phpに接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=578&quot; data-filename=&quot;011.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のphpの仕様に関して表がでればインストール成功です。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/103.html</guid><pubDate>Tue, 29 Oct 2019 20:10:02 +0900</pubDate></item><item><title>[CentOS] ApacheとTomcatの連携</title><link>https://www.nowonbun.com/102.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前述でcentosでapacheとtomcatをインストールしました。&lt;/p&gt;&lt;p&gt;先にtomcatの場合は独立でウェブサーバで運用できますが、なぜ別で「apache」をインストールして「tomcat」を連携するのかは「tomcat」は確かにウェブサーバの機能がありますが、「apache」よりロードバランシングや仮想機能が落ちています。&lt;/p&gt;&lt;p&gt;最近、バージョンが「9.x」まで上がって性能が以前よりは良くなりましたが、それでも分ける方がよいですね。&lt;/p&gt;&lt;p&gt;筆者の場合はサーバで「java」だけではなく、jsp、phpなど混在してプログラミングするタイプなので、「apache」の「virtual host」機能をよく使うので、「tomcat」のサーバの一つだけではなく、様々な「tomcat」かつ一つの「apache」を紐付いて使っています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで、「apache」と「tomcat」を連携しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=566&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;先、「tomcat」にはhttpポートを設定してブラウザと通信するhttpプロトコル領域があります。または、「ajp」プロトコルという「apache」と通信するポートがあります。&lt;/p&gt;&lt;p&gt;「apache」と「tomcat」を連携するようにはこの「ajp」プロトコルを利用しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「apache」側で「ajp」プロトコルを使うようには「mod_jk」がインストールされなければならないです。&lt;/p&gt;&lt;p&gt;mok_jk - &lt;a href=&quot;https://tomcat.apache.org/download-connectors.cgi&quot; target=&quot;_blank&quot;&gt;https://tomcat.apache.org/download-connectors.cgi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;圧縮を解凍したらこれからコンパイルをしなべきです。「native」フォルダにいきましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=567&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「/etc/httpd/modules」フォルダで「mod_jk.so」ファイルがあれば、コンパイル成功です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=561&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「httpd.conf」に行って下記とおりに設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=564&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後、「workers.properties」を作成しましょう。筆者の場合は「jenkins」とウェブサーバがあるので２つで設定しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=563&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;また「httpd.conf」を下記とおりに追加しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=565&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そしてそれぞれのディレクトリに「apache」権限を与えます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=569&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=568&quot; data-filename=&quot;008.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=562&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/102.html</guid><pubDate>Tue, 29 Oct 2019 07:37:07 +0900</pubDate></item><item><title>[CentOS] Tomcat インストール方法</title><link>https://www.nowonbun.com/101.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaでウェブサーバーを立ち上がるようには「apache-tomcat」が必要です。&lt;/p&gt;&lt;p&gt;「apache-tomcat」とはウェブブラウザからhttp要請が来る時に動的にウェブページを作り直し、ウェブブラウザに応答するウェブアプリケーションサーバ(was)です。&lt;/p&gt;&lt;p&gt;正確にいうとウェブサーバではなく、ウェブアプリケーションサーバですね。でもこのトムキャットは「apache」機能も一部含めているので、独立でサーバを立ち上がることができます。&lt;/p&gt;&lt;p&gt;でも、ロードバランシングや仮想ホストなどで純正な「apache」よりはパフォーマンスや機能が足りないので、実際には「apache」 + 「tomcat」でサーバを構成することになります。&lt;/p&gt;&lt;p&gt;開発環境は「tomcat」だけでも十分ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「centos」に「tomcat」をインストールしましょう。&lt;/p&gt;&lt;p&gt;先、「tomcat」をサーバで使うようには「java」が先にインストールされなければならないです。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/100.html&quot; target=&quot;_blank&quot;&gt;[centos] java インストール&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=552&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これから「/usr/local/lib」のディレクトリに行ってトムキャットをダウンロードしましょう。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://tomcat.apache.org/download-90.cgi&quot; target=&quot;_blank&quot;&gt;https://tomcat.apache.org/download-90.cgi&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=558&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=554&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ダウンロードが終わったら圧縮を解凍して、起動しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=557&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=556&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ファイアウォールでウェブポート(tomcatの場合は基本8080)を開放しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=553&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ブラウザで8080ポートで接続すれば下記とおりの結果がでます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=559&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;起動することができたら、サーバが起動するたびに自動にトムキャットと起動されるように設定しなければならないです。&lt;/p&gt;&lt;p&gt;「/etc/rc.d/init.d」に行って「tomcat」という起動実行ファイルを作りましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=551&quot; data-filename=&quot;008.png&quot; style=&quot;width: 767px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そこで下記とおりにスクリプトを作成しましょう。&lt;/p&gt;&lt;p&gt;そのファイルタイプを「chmode」で変更して「chkconfig」で登録すれば完了になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=555&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/101.html</guid><pubDate>Tue, 29 Oct 2019 07:28:47 +0900</pubDate></item><item><title>[CentOS] Java インストール</title><link>https://www.nowonbun.com/100.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaをcentosにインストールする方法では二つがあります。先、「yum」をとおってインストールする方法と直接にjavaをダウンロードして圧縮を解凍してパス設定する方法があります。&lt;/p&gt;&lt;p&gt;個人的には「yum」を通ってインストール方法が良いと思います。なぜなら「yum」でインストールする後で「update」管理を受け取られるからです。でも「production」サーバや「java」バージョンに敏感なプロジェクトの場合は「yum」より手動で管理するほうが良いと思います。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先に手動にインストール方法を確認して「yum」でインストールする方法も確認しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;javaのホームページに行きましょう。&lt;/p&gt;&lt;p&gt;javaホームページ - &lt;a href=&quot;https://www.oracle.com/technetwork/java/javase/downloads/index.html&quot; target=&quot;_blank&quot;&gt;https://www.oracle.com/technetwork/java/javase/downloads/index.html&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=546&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;サーバで運用するjvmをインストールすることなのでjreでも別にいいですが、なんか自分の場合はjdkが楽ですね。我々はjreのjvmを使うので別にどっちでもよいですが筆者はjdkでインストールします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=550&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;64ビットと32ビットがあるし、rpmとtar.gzの種類が二つがあります。先にosのビットは「getconf long_bit」で確認できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=536&quot; data-filename=&quot;003.png&quot; style=&quot;width: 589px;&quot;&gt;&lt;/p&gt;&lt;p&gt;rpmの場合は「yum」でインストールすることなので一応スキップして手動のインストールなので「tar.gz」でダウンロードします。&lt;/p&gt;&lt;p&gt;(wgetでダウンロードすると認証エラーになります。ただ、私はウェブでダウンロードして「samba」でコピーしました。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=549&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=535&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;筆者は綺麗に「/usr/local/lib」でコピーしておきました。これから圧縮を解凍しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=542&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=538&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;シンボリックリンクを設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=537&quot; data-filename=&quot;008.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「/etc/profile」でパスを指定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=540&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここで「source profile」でもよいし再起動してもよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=547&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまでが手動インストールです。これからは「yum」をとおってインストールしましょう。先に「yum list」でなにがあるか確認しましょう。ただ「java*」で検索するとデータが多すぎで「java-1.8.0*」で検索しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=548&quot; data-filename=&quot;011.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;1.8.0バージョンだけで種類がすごく多いですね。この種類はよくしらなくただ「devel」が含めている名をインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=544&quot; data-filename=&quot;012.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=543&quot; data-filename=&quot;013.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「java」の依存性があるアプリもすべてインストールしますね。インストールが終わりました。でも「yum」でインストールしても環境変数の設定はしなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=541&quot; data-filename=&quot;014.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「yum」でインストールすると「java」が「/usr/lib/jvm」でインストールされます。インストールパスが少しおかしいと思いますが、我々が必要なことはシンボリックリンクだけなのでリンクで設定しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=539&quot; data-filename=&quot;015.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここも「source profile」でもよいし再起動してもよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=545&quot; data-filename=&quot;016.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストール終わりです。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/100.html</guid><pubDate>Mon, 28 Oct 2019 00:23:28 +0900</pubDate></item><item><title>[CentOS] apacheをインストールする方法</title><link>https://www.nowonbun.com/99.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我々がサーバosをインストールする理由はいつも動いているサーバプログラムを起動するためですね。その中で代表的なことがウェブサーバです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサーバの種類は様々がありますが、その中で「iis」と「apache」が有名ではないかと思いますね。&lt;/p&gt;&lt;p&gt;でも「iis」の場合はlinux型ではなく、windowサーバosで動いているし、ウェブサーバと言っても実はasp.netとaspのアプリサーバというのが近いですね。&lt;/p&gt;&lt;p&gt;参考にウェブアプリサーバはブラウザとウェブサーバが通信する時に必要な応答ヘッダとボディを動的にパーシングするの役のサーバです。つまり、「iis」の場合はwindowサーバosので動いてるしウェブサーバとアプリサーバ機能があるウェブサーバです。&lt;/p&gt;&lt;p&gt;「apache」の場合はwindowとlinuxバージョン両方あります。基本的に「apache」だけにはアプリサーバ機能はありません。&lt;/p&gt;&lt;p&gt;なので静的なファイルを要請、応答することです。拡張機能で「php」をつけるとphp言語はパーシングができます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その後でウェブサーバはトラフィック分散機能、仮想機能などがありますが、それは別途で必要な時に投稿します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから「apache」をインストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=530&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;インストールが完了するとサーバを起動しましょう。&lt;/p&gt;&lt;p&gt;ファイアウォールも設定しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=531&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;これからブラウザを接続して下記通りに画面が出るとokです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=534&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;後は、サーバosが起動する時に自動にサーバが起動できるように設定をしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=529&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;サービスがdisabledになっていますね。&lt;/p&gt;&lt;p&gt;上のコマンドを実行すると「enable」に変わります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=533&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そうするとサーバを再起動しても「apache」が起動します。環境設定パスは「/etc/httpd」です。&lt;/p&gt;&lt;p&gt;「/etc/httpd」の中には「conf」のディレクトリがありますが、そこで「httpd.conf」が「apache」の環境設定ファイルです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=532&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/99.html</guid><pubDate>Fri, 25 Oct 2019 21:44:13 +0900</pubDate></item><item><title>[Linux] ディスク使用率チェック(df, du, lsof)とdfバグを解決方法</title><link>https://www.nowonbun.com/98.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;centosを運用する時にハードディスクの量を確認しべきな時があります。それを「df」,「du」のコマンドで確認ができます。&lt;/p&gt;&lt;p&gt;でも、「df」と「du」の場合はチェックする方法が違い「df」の場合でバグが発生する時があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最近、centos運用中でサーバディスクがいっぱいになった時があります。普通のローカルのウィンドウpcだとハードディスクの量が足りなかったらアラムメッセージが出るからすぐ気づきますが、centosの場合は別にメッセージもないし、普通はリモートでターミナルで運用するからよく知ることが大変ですね。&lt;/p&gt;&lt;p&gt;私の場合はファイルをアップロードする時に急にアップロードができなくなって、何かとみたらハードディスクがいっぱいになっていました。&lt;/p&gt;&lt;p&gt;サーバでそれぞれのアプリケーションを運用するからログがたくさん貯まっていましたよね。よく確認しなければならないです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;その時に確認する方法が「df -h」コマンドでした。rootで「du -hs *」で確認する方法もあります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=523&quot; data-filename=&quot;001.jpg&quot; style=&quot;width: 713px;&quot;&gt;&lt;/p&gt;&lt;p&gt;すごく簡単です。そして実際に「df -h」と「du -hs *」のコマンドを実行すれば「df -h」の方が処理速度が早いです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;でもこの「df -h」はバグがあります。「df」のコマンドはそれぞれのアプリケーションでよく使うコマンドなので困りますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=526&quot; data-filename=&quot;002.jpg&quot; style=&quot;width: 845px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージで自分のファイルリストを見れば、トムキャットのログがすごく貯まっていますね。約36gbファイルが２つありますね。ログで。。。&lt;/p&gt;&lt;p&gt;実は私がトムキャットの設定が間違っているから発生したことですが、一応、そのことは対応してログを消さなければならないですね。それでそのファイルを消しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=524&quot; data-filename=&quot;003.jpg&quot; style=&quot;width: 673px;&quot;&gt;&lt;/p&gt;&lt;p&gt;それでもう一度「df -h」と「du -hs *」を確認すると「du -hs *」で見るのは確実に60gbが減らしました。でも「df -h」はそのままですね。&lt;/p&gt;&lt;p&gt;私が確かにログファイルを消したので「du -hs *」の結果が合ってると思います。&lt;/p&gt;&lt;p&gt;そうすると「df -h」が問題ですが。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;様々を調べると多分「ioライブラリ」と関係がありそうです。コネクションによって問題が発生したと意味ですが。。コネクションによって問題になる気がします。&lt;/p&gt;&lt;p&gt;以前にも私の場合は同じエラーがなった時があります。その時もハードディスクの使用率が「100%」まで使ったことがあります。やはりその時もログを全て消しましたが、ディスクがいっぱいでエラーに発生して再起動した記憶があります。&lt;/p&gt;&lt;p&gt;そのことが多分「df -h」と関係がありそうですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;私の結論は「du」のコマンドは物理的データを確認するから正確値で出ますが、ioと関係あるライブラリを「df」コマンドと関係があり、実際にディスクが空いても「df -h」上でデータがいっぱいになっているともうファイル書き込むのが出来ないという意味です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで「lsof」コマンドでioクリアができるので、インストールしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=525&quot; data-filename=&quot;004.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「lsof」コマンドを実行したら下記とおりの結果が出ました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=528&quot; data-filename=&quot;005.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;確実に「5388」のpsを持っているアプリが「deleted」ファイルのコネクションを捕まっていることが見えます。プロセスキルするほうが簡単ですが、ただプロセスキルよりなんのプログラムということを確認して再起動がいいでしょう。&lt;/p&gt;&lt;p&gt;「ps」のコマンドで確認すると知れるが、上のイメージだけでもトムキャットだってすぐ予想ができますね。&lt;/p&gt;&lt;p&gt;それでトムキャットを再起動しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=527&quot; data-filename=&quot;006.jpg&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;再起動をすれば、一応アプリが落ちる時にリソースを全てosに返却するので、コネクションも解除されますね。その後「df -h」のコマンドで確認するとハードディスクが戻りました。&lt;/p&gt;&lt;p&gt;それで別にプロセスキルや再起動しなくてもリソースを使えるようになりました。&lt;/p&gt;&lt;p&gt;多分、ディスクがあるのにioエラーが発生する方はこの方法も考慮するほうが良いと思いますね。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/98.html</guid><pubDate>Thu, 24 Oct 2019 21:47:26 +0900</pubDate></item><item><title>[CentOS] Wheel設定</title><link>https://www.nowonbun.com/97.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;centosをインストールする時には基本「root」のidでパスワードを設定します。でもサーバでidをそのままを置いたらもしサーバが露出されると最高権限の「root」が見つかれされてしまいます。&lt;/p&gt;&lt;p&gt;そのままだとサーバのセキュリティに大問題になります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで「root」のidを接続を制限して「wheel」のグループのidで接続して「sudo su」で管理者権限(root)を受け取って運用することになります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それで「wheel」権限を設定してみましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;先、vi編集ツールで「/etc/pam.d/su」のファイルを開きます。&lt;/p&gt;&lt;p&gt;編集ツールで確認すると「auth required pam_wheel.so usd_uid」部分にコメント(#)になっています。この部分のコメントを解除します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=517&quot; data-filename=&quot;001.png&quot; style=&quot;width: 666px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後、ユーザを追加しましょう。もう登録したユーザがあれば諸略してもよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=518&quot; data-filename=&quot;002.png&quot; style=&quot;width: 553px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして追加したユーザを「wheel」グループに追加します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=519&quot; data-filename=&quot;003.png&quot; style=&quot;width: 528px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「bin」にある「su」のファイルを「wheel」グループに実行権限を与えましょう。&lt;/p&gt;&lt;p&gt;最後に「root」のidを隠します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=521&quot; data-filename=&quot;004.png&quot; style=&quot;width: 567px;&quot;&gt;&lt;/p&gt;&lt;p&gt;その後、サーバをrebootをします。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=520&quot; data-filename=&quot;005.png&quot; style=&quot;width: 393px;&quot;&gt;&lt;/p&gt;&lt;p&gt;rootで接続を試したが、認証失敗のメッセージが出ました。&lt;/p&gt;&lt;p&gt;最後に登録したユーザで接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=522&quot; data-filename=&quot;006.png&quot; style=&quot;width: 509px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「sudo su」でコマンドを入れると権限が「root」に代わります。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/97.html</guid><pubDate>Wed, 23 Oct 2019 23:55:04 +0900</pubDate></item><item><title>[CentOS] システムの文字セット変更</title><link>https://www.nowonbun.com/96.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;centosをインストールする時に日本語でインストールする方もいると思いますが、普通では英語でインストールをします。&lt;/p&gt;&lt;p&gt;インストールする時に勝手に日本語名のディレクトリーができることがあるからです。最近はそうではないと思いますが。。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;なので、英語でインストールしてユーザ別で文字セットを設定します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;文字セットをする方法では下記のコマンド名で修正します。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=512&quot; data-filename=&quot;001.png&quot; style=&quot;width: 592px;&quot;&gt;&lt;/p&gt;&lt;p&gt;一応、私の場合は「ja_jp.eucjp」なので「ja_jp.utf8」をダウンロードしなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=515&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=513&quot; data-filename=&quot;003.png&quot; style=&quot;width: 531px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「ja_jp.utf8」があります。文字セットを変更しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=514&quot; data-filename=&quot;004.png&quot; style=&quot;width: 540px;&quot;&gt;&lt;/p&gt;&lt;p&gt;リブートすると日本語がちゃんとできました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=516&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そのあとでサーバーをリブートすると文字セットが変わっています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;文字セットを変わって文字化けになると下記のリンクを参考してください。&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.nowonbun.com/94.html&quot; target=&quot;_blank&quot;&gt;[linux] putty使用方法&lt;/a&gt;&lt;/p&gt;&lt;p&gt;上のリンクを参考すると解決します。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/96.html</guid><pubDate>Mon, 21 Oct 2019 17:01:35 +0900</pubDate></item><item><title>[CentOS] Vim編集ツールをインストールする方法</title><link>https://www.nowonbun.com/95.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;linuxを使う時、よく使うエディタがvi編集ツールではないかと面ます。でもvi編集ツールはウィンドウosで考えるとメモ帳ですね。&lt;/p&gt;&lt;p&gt;メモ帳はただのime編集機能しかないので、普通は「sakura」や「notepad++」を使いますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「linux」と同じ状況なので「vi」はただメモ帳なら「vim」ならターミナルの「sakura」や「notepad++」ですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それならインストールをしましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=510&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=511&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;vi編集ツールとvim編集ツールをhttpd.confファイルでどの差があるかを確認しましょう。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;下記はvi編集ツールです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=509&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;下記はvim編集ツールです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=508&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;色が付けているので可読性がよいですね。その以外に検索、grep機能などがよいといいますが、自分もそこまでの差はよく知らないですね。&lt;/p&gt;&lt;p&gt;もともとvi編集ツールも悪くないからですね。でも、linuxターミナルをよく使う人はvim編集ツールをよく使いますね。&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/95.html</guid><pubDate>Mon, 21 Oct 2019 00:25:09 +0900</pubDate></item><item><title>[Linux] Putty使用方法</title><link>https://www.nowonbun.com/94.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;サーバの種類は色々がありますが、代表的には「linux server」と「window server」があります。「window server」なら「window」のosから「remote desktop」という基本プログラムを利用して接続します。&lt;/p&gt;&lt;p&gt;「linux」の場合は「ssh」プロトコルで接続しなければならないですが、「window」では基本プログラムがないですね。&lt;/p&gt;&lt;p&gt;「ssh」で接続するプログラムが様々なことがありますが、その中で機能は少ないけれども、すごく軽くて簡単に使える「putty」があります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.putty.org/&quot; target=&quot;_blank&quot;&gt;https://www.putty.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ダウンロード - &lt;a href=&quot;https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe&quot; target=&quot;_blank&quot;&gt;https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;上のリンクでダウンロードして実行しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=496&quot; data-filename=&quot;001.png&quot; style=&quot;width: 452px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「putty」はすごく簡単なプログラムなので特に説明することがないですね。&lt;/p&gt;&lt;p&gt;基本設定のほどを説明します。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;サーバをインストールする時に文字でエラーが発生しないようにほとんど英語でインストールしますが、たまに日本語バージョンでインストールする時があります。&lt;/p&gt;&lt;p&gt;その時に文字化けが発生するときがあります。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;それを解決する方法はエンコーディング種類を変更すればできます。&lt;/p&gt;&lt;p&gt;「window」=&amp;gt;「translation」項目でキャラクターセットを変更すればよいです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=498&quot; data-filename=&quot;002.png&quot; style=&quot;width: 451px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「putty」の基本色は黒い背景で白い文字が基本ですね。ディレクトリやファイルタイプによって色が変わります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=497&quot; data-filename=&quot;004.png&quot; style=&quot;width: 661px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=501&quot; data-filename=&quot;005.png&quot; style=&quot;width: 452px;&quot;&gt;&lt;/p&gt;&lt;p&gt;また、黒い背景で白い文字を変更したいなら、変更ができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=503&quot; data-filename=&quot;006.png&quot; style=&quot;width: 452px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=504&quot; data-filename=&quot;007.png&quot; style=&quot;width: 452px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=500&quot; data-filename=&quot;008.png&quot; style=&quot;width: 452px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=499&quot; data-filename=&quot;009.png&quot; style=&quot;width: 661px;&quot;&gt;&lt;/p&gt;&lt;p&gt;格納したディフォルト設定は「regedit」で削除ができます。もちろんバックアップもできますね。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=505&quot; data-filename=&quot;010.png&quot; style=&quot;width: 415px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=506&quot; data-filename=&quot;011.png&quot; style=&quot;width: 718px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「コンピューター\hkey_current_user\softeare\simon tatham」を削除すれば、設定がすべてなくなるし「エクスポート」するとバックアップができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=507&quot; data-filename=&quot;012.png&quot; style=&quot;width: 709px;&quot;&gt;&lt;/p&gt;</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/94.html</guid><pubDate>Sun, 20 Oct 2019 00:56:11 +0900</pubDate></item><item><title>[Window] Apacheをインストール方法、サービスに登録する方法。</title><link>https://www.nowonbun.com/93.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;ウェブサーバということで代表的なミドルウェアは「apache」と「iis」があります。&lt;/p&gt;&lt;p&gt;「iis」の場合はwindowサーバの専用のウェブサーバです。iisで使えるプログラム言語は「asp」と「asp.net」があります。追加モジュールをインストールすると「php」や「java」も出来ないことではないですが、普通で使わないです。&lt;/p&gt;&lt;p&gt;「apache」の場合はwindowサーバやlinuxサーバで別にosの関係なくて運用できるウェブサーバです。「apache」の場合はアプリサーバではないので「apache」ままでは静的ウェブページと「perl」、「python」だけを使えますが、「tomcat」や「php」を拡張すると「java」や「php」まで使えます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.apache.org&quot; target=&quot;_blank&quot;&gt;https://www.apache.org&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=494&quot; data-filename=&quot;001.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;実は上の公式ホームページでは「apache」サーバをダウンロードができません。いや、正確にいうとコンパイル前のソースがあるのでダウンロードしてもコンパイルをしなければならないです。&lt;/p&gt;&lt;p&gt;その手続きが簡単ではないですね。&lt;/p&gt;&lt;p&gt;それでコンパイルされたファイルをダウンロードしなければならないですが、それは別のアドレスで提供しています。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;link - &lt;a href=&quot;https://www.apachelounge.com/download/&quot; target=&quot;_blank&quot;&gt;https://www.apachelounge.com/download/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=495&quot; data-filename=&quot;002.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;この間まではバージョン2.2も提供しましたが、もう、提供しないらしいですね。それなら「2.4」バージョンをダウンロードしましょう。&lt;/p&gt;&lt;p&gt;ダウンロードして適当なところで解凍しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=484&quot; data-filename=&quot;003.png&quot; style=&quot;width: 642px;&quot;&gt;&lt;/p&gt;&lt;p&gt;そして「conf」フォルダの中で「httpd.conf」ファイルがありますが、メモ帳で開きます。&lt;/p&gt;&lt;p&gt;その中で「server root」を変更しなければならないです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=485&quot; data-filename=&quot;004.png&quot; style=&quot;width: 434px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上の37行目で「serverroot」が「c:\apache24」で設定されていますね。&lt;/p&gt;&lt;p&gt;私の場合はdドライブでインストールしましたので、「d:\apache」で設定しました。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=486&quot; data-filename=&quot;005.png&quot; style=&quot;width: 393px;&quot;&gt;&lt;/p&gt;&lt;p&gt;2.2バージョンでは置換子がなかったので修正する項目が多かったが、2.4バージョンは置換子(define)があるのでそこだけ修正すれば良いですね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;コンソールに当該なディレクトリに移動して「bin」フォルダの「httpd」を実行しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=487&quot; data-filename=&quot;006.png&quot; style=&quot;width: 414px;&quot;&gt;&lt;/p&gt;&lt;p&gt;後、ブラウザに「localhost」を打って接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=488&quot; data-filename=&quot;007.png&quot; style=&quot;width: 474px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「it&apos;s work」という文言が出ればきちんとインストールがされていることです。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これから「apache」を「window service」に同録しましょう。&lt;/p&gt;&lt;p&gt;「apache」をサービスに同録する方法では「httpd」のコマンドで「-k」オプションを与えると登録できます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=489&quot; data-filename=&quot;008.png&quot; style=&quot;width: 733px;&quot;&gt;&lt;/p&gt;&lt;p&gt;※もし登録中で上のメッセージではなく、エラーが発生する場合は管理者モードですると出来ます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからサービス設定に行きます。コマンド名は「service.msc」です。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=490&quot; data-filename=&quot;009.png&quot; style=&quot;width: 694px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=492&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「apache」を起動しましょう。&lt;/p&gt;&lt;p&gt;また、ブラウザで「localhost」を打って接続しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=488&quot; data-filename=&quot;007.png&quot; style=&quot;width: 474px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「it&apos;s work」が出れば、ちゃんと同録して起動されますね。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;これからは「window service」から「apache」サービスを解除しましょう。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=491&quot; data-filename=&quot;011.png&quot; style=&quot;width: 466px;&quot;&gt;&lt;/p&gt;&lt;p&gt;逆に「install」のオプションを「uninstall」に変わるとよいです。参考に「uninstall」だってサービス名を入力しなければ、エラーになります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=493&quot; data-filename=&quot;012.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;※もしサービスで無くならなく、そのままあればサービス停止してサービスウィンドウを閉じて再起動するとなくなります。&lt;/p&gt;</description><category>Devlopment note / Window</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/93.html</guid><pubDate>Fri, 18 Oct 2019 07:38:38 +0900</pubDate></item><item><title>[Window] WindowでExplorerのContext menuを修正する方法。</title><link>https://www.nowonbun.com/1.html</link><description>&lt;p&gt;こんにちは。明月です。&lt;/p&gt;&lt;p&gt;我々が「window」を使う間に「context」メニューをカスタムマイズや編集ができれば「window」運用中でもっと楽になるではないかと思ったことがあります。&lt;/p&gt;&lt;p&gt;その前に「window」の「context」メニューが何かと言うと「window」の画面のバックグラウンドにマウスの右クリックすると出るメニューです。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=472&quot; data-filename=&quot;001.png&quot; style=&quot;width: 269px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージのメニューが「context」。メニューです。(ここで「context」メニュを知らないなら説明が続けられないので、「window」のバックグラウンドでマウス右クリックしてみて確認してください。)&lt;/p&gt;&lt;p&gt;そうするとこれから「context」メニューに命令語を登録して編集してみます。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;「window」の環境設定は「regedit」というところに「window」の全て設定があります。例えば、拡張名が「.xxx」の場合に何のプログラムを連携することや、「window」が始動する時にバックグラウンドで実行するプログラム設定などの様々な設定があります。&lt;/p&gt;&lt;p&gt;(そのため「regedit」を間違って設定すると「window」が可笑しくなる可能性があるので気をつけてください。)&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=474&quot; data-filename=&quot;002.png&quot; style=&quot;width: 415px;&quot;&gt;&lt;/p&gt;&lt;p&gt;※「ファイル名を指定して実行」は「window」マークボタン(左の下のaltキー隣)＋「r」キーを押下すると開けられます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=477&quot; data-filename=&quot;003.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;上のイメージが「regedit」の「window」です。「regedit」の「window」が開いたら様々な「key」があると思いますが、我々はcontextのmenuの設定だけ編集するなので「hkey_classes_root」の群だけ確認します。&lt;/p&gt;&lt;p&gt;参考に「hkey_classes_root」のキーは拡張子別で連携されるプログラムの環境設定です。「hkey_classes_root」のキーを開くと様々なサブキーが見えると思います。そのキーの中で我々は「directory」キーを編集するつもりです。&lt;/p&gt;&lt;p&gt;「directory」キーは「explorer」の「directory」と関係があるキーです。ここで我々が「context」-「menu」を編集することができます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=479&quot; data-filename=&quot;004.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=481&quot; data-filename=&quot;005.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=476&quot; data-filename=&quot;006.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=478&quot; data-filename=&quot;007.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=480&quot; data-filename=&quot;008.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=482&quot; data-filename=&quot;009.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=483&quot; data-filename=&quot;010.png&quot; style=&quot;width: 848px;&quot;&gt;&lt;/p&gt;&lt;p&gt;下記のイメージは「context」メニューを編集した結果になります。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=473&quot; data-filename=&quot;011.png&quot; style=&quot;width: 332px;&quot;&gt;&lt;/p&gt;&lt;p&gt;「examplemenu」のメニューをクリックすると我々が「command」キーに設定した命令語が実行させ、コマンドウィンドウが開けられます。&lt;/p&gt;&lt;p style=&quot;text-align:left;&quot;&gt;&lt;img src=&quot;./getattachfile.ajax?idx=475&quot; data-filename=&quot;012.png&quot; style=&quot;width: 669px;&quot;&gt;&lt;/p&gt;&lt;p&gt;ここまで「context」のメニューを編集することについて勉強しました。この「context」メニュー編集の「tip」は単純な情報になると思いますが、以外にjavaやc#のコンソールプログラムを連携すると「window」を楽に運用ができます。皆様もこのtipの利用してみましょう。&lt;/p&gt;</description><category>Devlopment note / Window</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/1.html</guid><pubDate>Fri, 18 Oct 2019 07:31:58 +0900</pubDate></item><item><title>Devlopment note</title><link>https://www.nowonbun.com/developmentnote.html</link><description>Devlopment note</description><category>Devlopment note</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/developmentnote.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Devlopment note / C, C++, MFC</title><link>https://www.nowonbun.com/dev_clanguage.html</link><description>Devlopment note / C, C++, MFC</description><category>Devlopment note / C, C++, MFC</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/dev_clanguage.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / C, C++, MFC</title><link>https://www.nowonbun.com/study_clanguage.html</link><description>Study / C, C++, MFC</description><category>Study / C, C++, MFC</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_clanguage.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Devlopment note / C#</title><link>https://www.nowonbun.com/dev_csharp.html</link><description>Devlopment note / C#</description><category>Devlopment note / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/dev_csharp.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study</title><link>https://www.nowonbun.com/study.html</link><description>Study</description><category>Study</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / C#</title><link>https://www.nowonbun.com/study_csharp.html</link><description>Study / C#</description><category>Study / C#</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_csharp.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Devlopment note / Java</title><link>https://www.nowonbun.com/dev_java.html</link><description>Devlopment note / Java</description><category>Devlopment note / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/dev_java.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / Java</title><link>https://www.nowonbun.com/study_java.html</link><description>Study / Java</description><category>Study / Java</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_java.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Open source</title><link>https://www.nowonbun.com/opensource.html</link><description>Open source</description><category>Open source</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/opensource.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Devlopment note / Javascript, Jquery, Css</title><link>https://www.nowonbun.com/dev_javascript.html</link><description>Devlopment note / Javascript, Jquery, Css</description><category>Devlopment note / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/dev_javascript.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / Javascript, Jquery, Css</title><link>https://www.nowonbun.com/study_javascript.html</link><description>Study / Javascript, Jquery, Css</description><category>Study / Javascript, Jquery, Css</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_javascript.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Project</title><link>https://www.nowonbun.com/project.html</link><description>Project</description><category>Project</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/project.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Devlopment note / Window</title><link>https://www.nowonbun.com/dev_window.html</link><description>Devlopment note / Window</description><category>Devlopment note / Window</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/dev_window.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / PHP</title><link>https://www.nowonbun.com/study_php.html</link><description>Study / PHP</description><category>Study / PHP</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_php.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Experience</title><link>https://www.nowonbun.com/experience.html</link><description>Experience</description><category>Experience</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/experience.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Devlopment note / Linux</title><link>https://www.nowonbun.com/dev_linux.html</link><description>Devlopment note / Linux</description><category>Devlopment note / Linux</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/dev_linux.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / Python</title><link>https://www.nowonbun.com/study_python.html</link><description>Study / Python</description><category>Study / Python</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_python.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Other</title><link>https://www.nowonbun.com/other.html</link><description>Other</description><category>Other</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/other.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Devlopment note / Etc.</title><link>https://www.nowonbun.com/dev_etc.html</link><description>Devlopment note / Etc.</description><category>Devlopment note / Etc.</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/dev_etc.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / Database</title><link>https://www.nowonbun.com/study_database.html</link><description>Study / Database</description><category>Study / Database</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_database.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / Design pattern</title><link>https://www.nowonbun.com/study_design_pattern.html</link><description>Study / Design pattern</description><category>Study / Design pattern</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_design_pattern.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>Study / Algorithm</title><link>https://www.nowonbun.com/study_algorithm.html</link><description>Study / Algorithm</description><category>Study / Algorithm</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/study_algorithm.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item><item><title>明月の開発ストーリ</title><link>https://www.nowonbun.com/index.html</link><description>明月の開発ストーリ</description><category>明月の開発ストーリ</category><author>nowonbun@gmail.com</author><guid>https://www.nowonbun.com/index.html</guid><pubDate>Tue, 5 May 2020 00:58:17 +0900</pubDate></item></channel></rss>